import { TemplateResult } from "lit";
import { BaseElement } from "../../internal/elements/base-element.js";
export declare const LOADING_STATES: Readonly<{
    notStarted: "not-started";
    loading: "loading";
    error: "error";
    success: "success";
}>;
export type LoadingState = (typeof LOADING_STATES)[keyof typeof LOADING_STATES];
/**
 * An attachment editor element for managing tip-tap attachments. This encompasses the
 *   delete button, tooltip, and progress handler.
 */
export declare class AttachmentEditor extends BaseElement {
    fileName?: string;
    fileSize?: number;
    progress?: number;
    showMetadata?: boolean;
    loadingState?: LoadingState;
    fileUploadErrorMessage?: TemplateResult | string;
    removeFigure: () => void;
    constructor();
    static baseName: string;
    close(): TemplateResult<1>;
    static get properties(): {
        fileName: {
            attribute: string;
            type: StringConstructor;
        };
        fileSize: {
            attribute: string;
            type: NumberConstructor;
        };
        progress: {
            type: NumberConstructor;
        };
        class: {
            attribute: string;
            type: StringConstructor;
        };
        loadingState: {
            attribute: string;
        };
        fileUploadErrorMessage: {
            state: boolean;
        };
        showMetadata: {
            attribute: string;
            reflect: boolean;
            type: BooleanConstructor;
        };
    };
    connectedCallback(): void;
    static get styles(): import("lit").CSSResult;
    toFileSize(): string;
    render(): TemplateResult<1>;
}
