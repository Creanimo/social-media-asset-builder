{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directive-helpers.ts", "../../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/async-directive.ts", "../../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directives/ref.ts", "../../../node_modules/.pnpm/web-component-define@2.0.11/node_modules/web-component-define/src/internal/defineable-mixin.js", "../../../node_modules/.pnpm/@open-wc+dedupe-mixin@1.4.0/node_modules/@open-wc/dedupe-mixin/src/dedupeMixin.js", "../../../node_modules/.pnpm/web-component-define@2.0.11/node_modules/web-component-define/src/internal/scoped-elements-mixin.js", "../../../node_modules/.pnpm/web-component-define@2.0.11/node_modules/web-component-define/src/internal/create-render-root-mixin.js", "../../../node_modules/.pnpm/role-components@2.0.2/node_modules/role-components/exports/base-element.js", "../../../node_modules/.pnpm/role-components@2.0.2/node_modules/role-components/exports/toolbar/toolbar.js", "../../../node_modules/.pnpm/@floating-ui+utils@0.1.1/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../../../node_modules/.pnpm/@floating-ui+core@1.4.1/node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../../../node_modules/.pnpm/@floating-ui+utils@0.1.1/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs", "../../../node_modules/.pnpm/@floating-ui+dom@1.5.1/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../../../node_modules/.pnpm/role-components@2.0.2/node_modules/role-components/exports/tooltip/tooltip.js", "../../../src/internal/string-map.ts", "../../../src/internal/is-exact-node-active.ts", "../../../src/exports/elements/tip-tap-editor.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  _$LH,\n  Part,\n  DirectiveParent,\n  TemplateResult,\n  CompiledTemplateResult,\n} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\ntype IsTemplateResult = {\n  (val: unknown): val is TemplateResult | CompiledTemplateResult;\n  <T extends TemplateResultType>(\n    val: unknown,\n    type: T\n  ): val is TemplateResult<T>;\n};\n\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult: IsTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (\n  value: unknown\n): value is CompiledTemplateResult => {\n  return (value as CompiledTemplateResult)?.['_$litType$']?.h != null;\n};\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback: WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n> = new WeakMap();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n", "// @ts-check\n\n/**\n * Extends any extension of HTMLElement to call `.define()` as well as register children.\n * @template {import(\"../../types.js\").Constructor} T\n * @param {T} superclass\n * @example\n *   // usage with LitElement\n *   import { LitElement } from \"lit\"\n *   import { DefineableMixin } from \"web-component-definition\"\n *   export class BaseLitElement extends DefineableMixin(LitElement) {}\n * @example\n *   // usage with HTMLElement\n *   import { LitElement } from \"lit\"\n *   import { DefineableMixin } from \"web-component-definition\"\n *   export class BaseLitElement extends DefineableMixin(LitElement) {}\n * @example\n *   // usage with prebuilt HTMLElement mixin\n *   import { LitElement } from \"lit\"\n *   import { DefineableElement } from \"web-component-definition\"\n *   export class BaseElement extends DefineableElement {}\n */\nexport function DefineableMixin(superclass) {\n  return class DefineableClass extends superclass {\n    /**\n     * The tag name to register your custom element under.\n     * @type {string}\n     */\n    static baseName = '';\n\n    /**\n     * Emits a console warning if the name for an element is already taken.\n     * @type {boolean}\n     */\n    static warnOnExistingElement = false\n\n    /**\n    * @param {null | undefined | string} [name=this.baseName]\n    * @param {null | undefined | CustomElementConstructor} [ctor=this]\n    * @param {ElementDefinitionOptions | undefined} [options]\n    */\n    static define(name, ctor, options) {\n      if (!name) name = this.baseName;\n\n      if (!ctor) ctor = this;\n\n      let registry = window.customElements\n\n      /** @ts-expect-error */\n      if (this.__registry instanceof CustomElementRegistry) {\n        /** @ts-expect-error */\n        registry = this.__registry\n      }\n\n      const alreadyExists = Boolean(registry.get(name))\n\n      if (alreadyExists && this.warnOnExistingElement) {\n        console.warn(`${name} has already been registered.`)\n      }\n\n      if (!alreadyExists && ctor) {\n        registry.define(name, class extends ctor {}, options);\n      }\n    }\n  };\n}\n\n/**\n * Prebuilt class for extending HTMLElement\n * @example\n *   // Base use-case\n *   class MyCard extends DefineableElement {\n *     static baseName = \"my-card\"\n *   }\n *   // Register the class\n *   MyCard.define()\n *   // Register with a different name\n *   MyCard.define(\"my-card-2\")\n *   // Register with different options\n *   MyCard.define(MyCard.baseName, MyCard, { extends: { \"div\" }})\n *   // This will do the same as above\n *   MyCard.define(null, null, { extends: { \"div\" }})\n *\n * @example\n\n *   // Using a different customElementRegistry\n *   class MyCard extends DefineableElement {\n *     static customElementRegistry = MyCustomRegistry()\n *     static baseName = \"my-card\"\n *   }\n *   // Register the element in the custom registry.\n *   MyCard.define()\n */\nexport class DefineableElement extends DefineableMixin(HTMLElement) {}\n\n", "const appliedClassMixins = new WeakMap();\n\n/** Vefify if the Mixin was previously applyed\n * @private\n * @param {function} mixin      Mixin being applyed\n * @param {object} superClass   Class receiving the new mixin\n * @returns {boolean}\n */\nfunction wasMixinPreviouslyApplied(mixin, superClass) {\n  let klass = superClass;\n  while (klass) {\n    if (appliedClassMixins.get(klass) === mixin) {\n      return true;\n    }\n    klass = Object.getPrototypeOf(klass);\n  }\n  return false;\n}\n\n/** Apply each mixin in the chain to make sure they are not applied more than once to the final class.\n * @export\n * @param {function} mixin      Mixin to be applyed\n * @returns {object}            Mixed class with mixin applied\n */\nexport function dedupeMixin(mixin) {\n  return superClass => {\n    if (wasMixinPreviouslyApplied(mixin, superClass)) {\n      return superClass;\n    }\n    const mixedClass = mixin(superClass);\n    appliedClassMixins.set(mixedClass, mixin);\n    return mixedClass;\n  };\n}\n", "// @ts-check\nimport { dedupeMixin } from '@open-wc/dedupe-mixin';\n\n/**\n * @typedef {import('../../types.js').RenderOptions} RenderOptions\n * @typedef {import('../../types.js').ScopedElementsMap} ScopedElementsMap\n */\n\n// @ts-ignore\nconst supportsScopedRegistry = !!ShadowRoot.prototype.createElement;\n\n/**\n * @template {import('../../types.js').Constructor} T\n * @param {T} superclass\n */\nconst ScopedElementsMixinImplementation = superclass =>\n  class ScopedElementsHost extends superclass {\n    /**\n     * Obtains the scoped elements definitions map if specified.\n     *\n     * @returns {ScopedElementsMap}\n     */\n    static get scopedElements() {\n      return {};\n    }\n\n    /**\n     * Obtains the ShadowRoot options.\n     *\n     * @type {ShadowRootInit}\n     */\n    static get shadowRootOptions() {\n      return this.__shadowRootOptions || {mode: \"open\"};\n    }\n\n    /**\n     * Set the shadowRoot options.\n     *\n     * @param {ShadowRootInit} value\n     */\n    static set shadowRootOptions(value) {\n      this.__shadowRootOptions = value;\n    }\n\n    /**\n     * @param {any[]} args\n     */\n    constructor(...args) {\n      super(...args);\n      /** @type {RenderOptions} */\n      this.renderOptions = this.renderOptions || undefined;\n    }\n\n    /**\n     * Obtains the CustomElementRegistry associated to the ShadowRoot.\n     *\n     * @returns {CustomElementRegistry}\n     */\n    get registry() {\n      /** @type { typeof ScopedElementsHost } */\n      // @ts-expect-error\n      const constructor = this.constructor\n      return constructor.__registry;\n    }\n\n    /**\n     * @protected\n     * @type {CustomElementRegistry}\n     */\n    static __registry = window.customElements\n\n    /**\n     * Set the CustomElementRegistry associated to the ShadowRoot\n     *\n     * @param {CustomElementRegistry} registry\n     */\n    set registry(registry) {\n      /** @type { typeof ScopedElementsHost } */\n      // @ts-expect-error\n      const constructor = this.constructor\n      constructor.__registry = registry;\n    }\n\n    createRenderRoot() {\n      /** @type { typeof ScopedElementsHost } */\n      // @ts-expect-error\n      const constructor = this.constructor;\n      const { scopedElements, shadowRootOptions } = constructor\n\n      const shouldCreateRegistry =\n        !this.registry ||\n        (this.registry === constructor.__registry &&\n          !Object.prototype.hasOwnProperty.call(this.constructor, '__registry'));\n\n      /**\n       * Create a new registry if:\n       * - the registry is not defined\n       * - this class doesn't have its own registry *AND* has no shared registry\n       */\n      if (shouldCreateRegistry) {\n        this.registry = supportsScopedRegistry ? new CustomElementRegistry() : customElements;\n        for (const [tagName, klass] of Object.entries(scopedElements)) {\n          this.defineScopedElement(tagName, klass);\n        }\n      }\n\n      /** @type {ShadowRootInit} */\n      const options = {\n        // @ts-expect-error multiple assignment. Sue me.\n        mode: 'open',\n        ...shadowRootOptions,\n        customElements: this.registry,\n      };\n\n      const createdRoot = this.attachShadow(options);\n      if (supportsScopedRegistry) {\n        this.renderOptions.creationScope = createdRoot;\n      }\n\n      if (createdRoot instanceof ShadowRoot) {\n        this.adoptStyles(createdRoot)\n      }\n\n      return createdRoot;\n    }\n\n    /**\n     * @param {string} tagName\n     */\n    createScopedElement(tagName) {\n      const root = supportsScopedRegistry ? this.shadowRoot : document;\n      // @ts-ignore polyfill to support createElement on shadowRoot is loaded\n      return root.createElement(tagName);\n    }\n\n    /**\n     * Hook for attaching constructable stylesheets to a render root.\n     * Used in the {LitScopedElementsMixin} .\n     * @param {ShadowRoot} _shadowRoot\n     * @returns {void}\n     */\n    adoptStyles (_shadowRoot) {}\n\n    /**\n     * Defines a scoped element.\n     *\n     * @param {string} tagName\n     * @param {typeof HTMLElement} klass\n     */\n    defineScopedElement(tagName, klass) {\n      const registeredClass = this.registry.get(tagName);\n      if (registeredClass && supportsScopedRegistry === false && registeredClass !== klass) {\n        // eslint-disable-next-line no-console\n        console.error(\n          [\n            `You are trying to re-register the \"${tagName}\" custom element with a different class via ScopedElementsMixin.`,\n            'This is only possible with a CustomElementRegistry.',\n            'Your browser does not support this feature so you will need to load a polyfill for it.',\n            'Load \"@webcomponents/scoped-custom-element-registry\" before you register ANY web component to the global customElements registry.',\n            'e.g. add \"<script src=\"/node_modules/@webcomponents/scoped-custom-element-registry/scoped-custom-element-registry.min.js\"></script>\" as your first script tag.',\n            'For more details you can visit https://open-wc.org/docs/development/scoped-elements/',\n          ].join('\\n'),\n        );\n      }\n      if (!registeredClass) {\n        return this.registry.define(tagName, klass);\n      }\n      return this.registry.get(tagName);\n    }\n  };\n\nexport const ScopedElementsMixin = dedupeMixin(ScopedElementsMixinImplementation);\n", "// @ts-check\nimport { dedupeMixin } from '@open-wc/dedupe-mixin';\n\n/**\n * Extends any extension of HTMLElement to call `.createRenderRoot()` on registration to work with\n *   scoped elements mixin\n * @template {import('../../types.js').Constructor} T\n * @param {T} superclass\n */\nconst CreateRenderRootMixinImplementation = superclass => {\n  return class CreateRenderRootHost extends superclass {\n    /**\n     * Obtains the ShadowRoot options.\n     *\n     * @type {ShadowRootInit}\n     */\n    static get shadowRootOptions() {\n      return this.__shadowRootOptions || {mode: \"open\"};\n    }\n\n    /**\n     * Set the shadowRoot options.\n     *\n     * @param {ShadowRootInit} value\n     */\n    static set shadowRootOptions(value) {\n      this.__shadowRootOptions = value;\n    }\n\n    /** @type {ShadowRootInit} */\n    get shadowRootOptions () {\n      // @ts-expect-error\n      return this.constructor.shadowRootOptions\n    }\n\n    createRenderRoot () {\n      const renderRoot = this.shadowRoot ?? this.attachShadow(this.shadowRootOptions || {mode: \"open\"})\n      return renderRoot;\n    }\n\n    connectedCallback () {\n      // @ts-expect-error\n      if (typeof super.connectedCallback === \"function\") {\n        // @ts-expect-error\n        super.connectedCallback()\n      }\n\n      // create renderRoot before first update.\n      if (this.renderRoot == null) {\n        this.renderRoot = this.createRenderRoot();\n      }\n    }\n  }\n}\n\nexport const CreateRenderRootMixin = dedupeMixin(CreateRenderRootMixinImplementation);\n", "// @ts-check\n\nimport { LitElement } from \"lit\"\nimport { DefineableMixin } from \"web-component-define\"\n\nexport class BaseElement extends DefineableMixin(LitElement) {\n}\n", "// @ts-check\n\nimport { BaseElement } from \"../base-element.js\";\nimport { css, html } from \"lit\"\n\n/**\n * A toolbar following the W3C Toolbar pattern.\n * https://www.w3.org/WAI/ARIA/apg/patterns/toolbar/\n * @customElement\n */\nexport default class RoleToolbar extends BaseElement {\n  static properties = {\n    orientation: { reflect: true },\n    _currentFocusIndex: {state: true},\n    _toolbarItems: {state: true}\n  }\n\n  constructor () {\n    super()\n\n    /**\n     * @type {number}\n     */\n    this._currentFocusIndex = 0\n\n\n    /**\n     * @type {\"vertical\" | \"horizontal\"}\n     */\n    this.orientation = \"horizontal\"\n\n    /** @type Array<Element> */\n    this._toolbarItems = []\n\n    this.addEventListener(\"click\", this.handleClick);\n    this.addEventListener(\"keydown\", this.handleKeyDown);\n\n    // Handles nested slot issues focusing the toolbar itself.\n    this.addEventListener(\"focus\", this.handleClick);\n  }\n\n  /**\n   * @param {import(\"lit\").PropertyValues<this>} changedProperties\n   */\n  willUpdate (changedProperties) {\n    if (changedProperties.has(\"_toolbarItems\")) {\n      this.updateToolbarItems()\n    }\n    super.willUpdate(changedProperties)\n  }\n\n  /** @returns {string} */\n  static get baseName() {\n    return \"role-toolbar\";\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n\n      .base {\n        display: flex;\n        max-width: 100%;\n        padding: 0.4rem 0.6rem;\n        border-radius: 4px;\n        border: 2px solid transparent;\n        gap: 4px;\n        overflow: auto;\n      }\n\n      :host([orientation=\"vertical\"]) .base {\n        flex-direction: column;\n      }\n\n      :host(:focus-within) .base {\n        border-color: #005a9c;\n      }\n    `;\n  }\n\n  /**\n   * @return {Record<string, (event: Event) => void>}\n   */\n  get keydownHandlers() {\n    if (this._keydownHandlers) return this._keydownHandlers;\n\n    this._keydownHandlers = {\n      arrowleft: this.focusPrevious,\n      arrowup: this.focusPrevious,\n      arrowright: this.focusNext,\n      arrowdown: this.focusNext,\n      home: this.focusFirst,\n      end: this.focusLast,\n    };\n\n    return this._keydownHandlers;\n  }\n\n  render() {\n    return html`\n      <div role=\"toolbar\" class=\"base\" part=\"base\">\n        <slot @slotchange=${this.updateToolbarItems}></slot>\n      </div>\n    `;\n  }\n\n  /** @param {Event} event */\n  handleClick = (event) => {\n\n    const focusedElement = event.composedPath().find((el) => {\n      // @ts-expect-error\n      const role = el?.getAttribute?.('data-role') || \"\"\n      return role.includes('toolbar-item')\n    });\n\n    if (focusedElement) {\n      this._toolbarItems.forEach((el, index) => {\n        if (el === focusedElement) {\n          this._currentFocusIndex = index;\n          return;\n        }\n        el.setAttribute(\"tabindex\", \"-1\");\n      });\n\n      // Let the browser decided where focus ends up.\n      this.setTabIndex({ focus: false });\n    } else {\n      // focus the toolbar itself if no focused element clicked.\n      this.setTabIndex({ focus: true });\n    }\n  };\n\n  /** @param {KeyboardEvent} event */\n  handleKeyDown = (event) => {\n    const key = event.key?.toLowerCase();\n\n    if (\n      this.orientation === \"vertical\" &&\n      (key === \"arrowleft\" || key === \"arrowright\")\n    )\n      return;\n    if (\n      this.orientation === \"horizontal\" &&\n      (key === \"arrowdown\" || key === \"arrowup\")\n    )\n      return;\n\n    if (Object.keys(this.keydownHandlers).includes(key)) {\n      event.preventDefault();\n      this.keydownHandlers[key](event);\n    }\n  };\n\n  /** @param {Event} _event */\n  focusNext = (_event) => {\n    this.currentFocusElement?.setAttribute(\"tabindex\", \"-1\");\n    this._currentFocusIndex += 1;\n\n    if (this._currentFocusIndex >= this._toolbarItems.length) {\n      this.focusFirst();\n      return;\n    }\n\n    this.setTabIndex();\n  };\n\n  /** @param {Event} _event */\n  focusPrevious = (_event) => {\n    this.currentFocusElement?.setAttribute(\"tabindex\", \"-1\");\n    this._currentFocusIndex -= 1;\n\n    if (this._currentFocusIndex < 0) {\n      this.focusLast();\n      return;\n    }\n\n    this.setTabIndex();\n  };\n\n  focusFirst = () => {\n    this._currentFocusIndex = 0;\n    this.setTabIndex();\n  };\n\n  focusLast = () => {\n    if (this._toolbarItems == null) return\n\n    this._currentFocusIndex = this._toolbarItems.length - 1;\n    this.setTabIndex();\n  };\n\n\n  setTabIndex = ({ focus = true } = {}) => {\n    this.currentFocusElement?.setAttribute(\"tabindex\", \"0\");\n\n    if (focus) {\n      // @ts-expect-error\n      this.currentFocusElement?.focus?.();\n    }\n  };\n\n  get currentFocusElement() {\n    if (this._toolbarItems == null) return\n\n    return this._toolbarItems[this._currentFocusIndex];\n  }\n\n  /**\n   * @param {undefined | null | Event} [evt] - triggered by a slot change event.\n   */\n  updateToolbarItems = (evt) => {\n    /**\n     * @type {HTMLSlotElement}\n     */\n    // @ts-expect-error\n    const slot = evt?.target || this.shadowRoot.querySelector(\"slot\")\n\n    if (slot == null) return\n\n    /** @type {Element[]} */\n    const items = slot\n      .assignedElements({ flatten: true })\n      .filter((el) => {\n        return el instanceof HTMLElement && el.dataset.role?.match(/toolbar-item/);\n      });\n    this._toolbarItems = items\n    this._currentFocusIndex = this._toolbarItems.findIndex(\n      (el) => el.getAttribute(\"tabindex\") === \"0\"\n    );\n\n    this._toolbarItems.forEach((el) => {\n      if (this._toolbarItems[this._currentFocusIndex] === el) return\n      el.setAttribute(\"tabindex\", \"-1\")\n    })\n\n    if (this._currentFocusIndex === -1) {\n      this._currentFocusIndex = 0;\n      this.currentFocusElement?.setAttribute(\"tabindex\", \"0\");\n    }\n  };\n}\n", "const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n", "import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n", "// @ts-check\nimport { BaseElement } from \"../base-element.js\";\n\nimport {\n  arrow,\n  computePosition,\n  flip,\n  shift,\n  offset,\n  autoUpdate,\n} from \"@floating-ui/dom\";\n\nimport { css, html } from \"lit\"\n\n/**\n * Due to accessibility reasons with aria-describedby, the tooltip must be the same\n *   document / shadowRoot as the item being described by the tooltip.\n * @customElement\n * @example\n *   <role-tooltip id=\"my-tooltip\">I'm a tooltip!</role-tooltip>\n *   <button aria-describedby=\"my-tooltip\">Button</button>\n * @slot - default slot\n * @cssprop [--background-color=#222]\n * @cssprop [--arrow-size=8px]\n */\nexport default class RoleTooltip extends BaseElement {\n  static get properties() {\n    return {\n      id: { reflect: true },\n      tooltipAnchors: { state: true },\n      rootElement: { state: true },\n      role: { reflect: true },\n      inert: { reflect: true, type: Boolean },\n      placement: { reflect: true }\n    }\n  }\n\n  /** @returns {string} */\n  static get baseName() {\n    return \"role-tooltip\";\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        --background-color: #222;\n        --arrow-size: 8px;\n      }\n\n      .base {\n        display: none;\n        position: absolute;\n        left: 0px;\n        top: 0px;\n        max-width: calc(100vw - 10px);\n        padding: 0.4em 0.6em;\n        background: var(--background-color);\n        color: white;\n        border-radius: 4px;\n        font-size: 0.9em;\n        pointer-events: none;\n        z-index: 1;\n      }\n\n      :host([hoist]) .base {\n        position: fixed;\n      }\n\n      .arrow {\n        position: absolute;\n        background: var(--background-color);\n        width: var(--arrow-size);\n        height: var(--arrow-size);\n        transform: rotate(45deg);\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n\n    // Needed by floating-ui\n    // @ts-expect-error\n    if (window.process == null) window.process = {}\n    // @ts-expect-error\n    if (window.process.env == null) window.process.env = \"development\"\n\n    /**\n     * @type {Element[]}\n     */\n    this.tooltipAnchors = [];\n\n    /**\n     * @type {ShadowRoot | Document | undefined}\n     */\n    this._rootElement = undefined\n\n    this.role = \"tooltip\"\n    this.inert = true\n\n    /**\n     * @type {import(\"@floating-ui/dom\").Placement}\n     */\n    this.placement = \"top\"\n\n    /**\n     * @type {Array<[keyof GlobalEventHandlersEventMap, (evt: Event | KeyboardEvent) => void]>}\n     */\n    this.listeners = [\n      [\"pointerenter\", this.show],\n      [\"pointerleave\", this.hide],\n      [\"pointercancel\", this.hide],\n      [\"pointerup\", this.hide],\n      [\"focusin\", this.show],\n      [\"focusout\", this.hide],\n      [\"keydown\", this.keyboardHide],\n    ];\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n\n    this.updateAnchors()\n\n    this.attachListeners()\n  }\n\n  updateAnchors () {\n    if (this.rootElement) {\n      this.tooltipAnchors = Array.from(this.rootElement.querySelectorAll(this.query)) || []\n    }\n  }\n\n  disconnectedCallback () {\n    super.disconnectedCallback()\n\n    this.removeListeners()\n  }\n\n  /**\n   * @type {string}\n   */\n  get query () {\n    return `[aria-describedby~='${this.id}']`;\n  }\n\n  /** @returns {ShadowRoot | Document | undefined} */\n  get rootElement() {\n    if (this._rootElement == null) {\n      const oldVal = this._rootElement\n\n      /**\n      * @type {ShadowRoot | Document | undefined}\n      */\n      // @ts-expect-error\n      this._rootElement = this.getRootNode() || document;\n      this.requestUpdate(\"rootElement\", oldVal)\n    }\n\n    return this._rootElement;\n  }\n\n  /** @returns {void} */\n  set rootElement(newVal) {\n    const oldVal = this._rootElement;\n\n    this._rootElement = newVal;\n    this.requestUpdate(\"rootElement\", oldVal)\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" class=\"base\">\n        <slot></slot>\n        <div class=\"arrow\" part=\"arrow\"></div>\n      </div>\n    `;\n  }\n\n  /**\n   * @param {Parameters<import(\"lit\").LitElement[\"update\"]>} args\n   * @return {ReturnType<import(\"lit\").LitElement[\"update\"]>}\n   */\n  update (...args) {\n    const [changedProperties] = args\n\n    const shouldUpdateProperties = [\"id\", \"tooltipAnchors\", \"rootElement\"]\n    const shouldReattachListeners = shouldUpdateProperties.some((str) => changedProperties.has(str))\n\n    if (shouldReattachListeners) {\n      this.attachListeners()\n    }\n\n    super.update(...args)\n  }\n\n\n  /**\n   * Used for re-initialized event listeners\n   * @returns {void}\n   */\n  attachListeners() {\n    this.listeners.forEach(([event, listener]) => {\n      // Remove listeners. Do it in the same loop for perf stuff.\n\n      // In case there's old anchors\n      this.tooltipAnchors.forEach((el) =>\n        el.removeEventListener(event, listener)\n      );\n\n      // Attach to new anchors\n      this.tooltipAnchors.forEach((el) => el.addEventListener(event, listener));\n    });\n  }\n\n  /**\n   * Used for cleaning up\n   * @returns {void}\n   */\n  removeListeners() {\n    this.listeners.forEach(([event, listener]) => {\n      // don't recompute anchors.\n      this.tooltipAnchors.forEach((el) =>\n        el.removeEventListener(event, listener)\n      );\n    });\n  }\n\n  /** @returns {HTMLElement | undefined | null} */\n  get arrow() {\n    return this.shadowRoot?.querySelector(\".arrow\");\n  }\n\n  /**\n   * @param {Event|Element} eventOrElement\n   * @returns {void}\n   */\n  show = (eventOrElement) => {\n    if (eventOrElement instanceof Event && eventOrElement.currentTarget instanceof Element) {\n      eventOrElement = eventOrElement.currentTarget;\n    }\n\n    /**\n     * @type {Element}\n     */\n    // @ts-expect-error\n    const target = eventOrElement\n\n    this.willShow = true;\n\n    this.computeTooltipPosition(target);\n  };\n\n  /**\n   * @param {Event} [_event]\n   * @returns {void}\n   */\n  hide = (_event) => {\n    this.willShow = false;\n    this.cleanup?.();\n\n    window.requestAnimationFrame(() => {\n      if (this.willShow === true) return;\n\n      const base = this.base\n\n      if (!base) return\n\n      base.style.display = \"none\";\n    });\n  };\n\n  /**\n   * @param {Event | KeyboardEvent} event\n   */\n  keyboardHide = (event) => {\n    if (!(\"key\" in event)) { return }\n    if (event.key != null && event.key.toLowerCase() === \"escape\") {\n      event.preventDefault();\n      this.hide();\n    }\n  };\n\n  /**\n   * @param {Element} target\n   * @returns {void}\n   */\n  computeTooltipPosition(target) {\n    const arrowEl = this.arrow;\n    const base = this.base;\n\n    if (base == null) return\n    if (arrowEl == null) return\n\n    base.style.display = \"unset\";\n\n    const placement = this.placement || \"top\"\n\n    this.cleanup = autoUpdate(target, base, () => {\n      computePosition(target, base, {\n        placement,\n        middleware: [\n          offset(6),\n          flip(),\n          shift({ padding: 5 }),\n          arrow({ element: arrowEl }),\n        ],\n        strategy: this.hasAttribute(\"hoist\") ? \"fixed\" : \"absolute\",\n      }).then(({ x, y, middlewareData, placement }) => {\n        Object.assign(base.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        });\n\n        const arrowX = middlewareData.arrow?.x\n        const arrowY = middlewareData.arrow?.y\n\n        // Always the opposite of the placement the user provides.\n        const staticSide = {\n          top: \"bottom\",\n          right: \"left\",\n          bottom: \"top\",\n          left: \"right\",\n        }[placement.split(\"-\")[0]] || \"top\";\n\n        Object.assign(arrowEl.style, {\n          left: arrowX != null ? `${arrowX}px` : \"\",\n          top: arrowY != null ? `${arrowY}px` : \"\",\n          right: \"\",\n          bottom: \"\",\n          [staticSide]: \"-4px\",\n        });\n      });\n    });\n  }\n\n\n /**\n  * @return {HTMLElement | null | undefined}\n  */\n  get base() {\n    return this.shadowRoot?.querySelector(\".base\");\n  }\n}\n", "export function stringMap(\n  obj: Record<string, string | null | undefined | boolean>,\n): string {\n  let string = \"\";\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (value) {\n      string += `${key} `;\n    }\n  }\n\n  return string;\n}\n", "import { NodeType } from \"@tiptap/pm/model\";\nimport { EditorState } from \"@tiptap/pm/state\";\n\nimport { NodeRange, objectIncludes, getNodeType } from \"@tiptap/core\";\n\n// https://github.com/ueberdosis/tiptap/issues/4190\nexport function isExactNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection;\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\n\n  const nodeRanges: NodeRange[] = [];\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return;\n    }\n\n    const relativeFrom = Math.max(from, pos);\n    const relativeTo = Math.min(to, pos + node.nodeSize);\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    });\n  });\n\n  const selectionRange = to - from;\n\n  /******\n    This is modified from \"isActive\".\n    https://github.com/ueberdosis/tiptap/issues/4190#issuecomment-1636209809\n  *****/\n  const matchedNodeRanges = nodeRanges\n    .slice(-3) // here is the change\n    .filter((nodeRange) => {\n      if (!type) {\n        return true;\n      }\n\n      return type.name === nodeRange.node.type.name;\n    })\n    .filter((nodeRange) =>\n      objectIncludes(nodeRange.node.attrs, attributes, { strict: false }),\n    );\n  /** END MODIFICATION **/\n\n  if (empty) {\n    return !!matchedNodeRanges.length;\n  }\n\n  const range = matchedNodeRanges.reduce(\n    (sum, nodeRange) => sum + nodeRange.to - nodeRange.from,\n    0,\n  );\n\n  return range >= selectionRange;\n}\n", "import { ref, createRef, Ref } from \"lit/directives/ref.js\";\nimport { toolbarButtonStyles } from \"../styles/editor.js\";\nimport { TipTapEditorBase } from \"./tip-tap-editor-base.js\";\nimport { PropertyDeclarations, PropertyValues, TemplateResult } from \"lit\";\n\n/** Imports <role-tooltip> and <role-toolbar> */\nimport RoleToolbar from \"role-components/exports/toolbar/toolbar.js\";\nimport RoleTooltip from \"role-components/exports/tooltip/tooltip.js\";\n\nimport { isiOS, translations } from \"../translations.js\";\n\n/** This will probably go away in favor of lazy loaded SVGs. */\nimport * as icons from \"../../internal/icons\";\nimport { Maybe } from \"../../types.js\";\nimport { html } from \"lit/html.js\";\nimport { stringMap } from \"../../internal/string-map.js\";\nimport { isExactNodeActive } from \"../../internal/is-exact-node-active.js\";\n\n/**\n * This is the meat and potatoes. This is the <rhino-editor> element you'll\n *   see. This is what wraps everything into 1 coherent element.\n * @slot toolbar - By replacing this, you're now making your own toolbar.\n * @slot toolbar-start\n *\n * ## bold\n * @slot before-bold-button\n * @slot bold-button\n * @slot after-bold-button\n\n * ## Italic\n * @slot before-italic-button\n * @slot italic-button\n * @slot after-italic-button\n\n * ## Strike\n * @slot before-strike-button\n * @slot strike-button\n * @slot after-strike-button\n\n * ## Link\n * @slot before-link-button\n * @slot link-button\n * @slot after-link-button\n\n * ## Heading\n * @slot before-heading-button\n * @slot heading-button\n * @slot after-heading-button\n\n * ## Blockquote\n * @slot before-blockquote-button\n * @slot blockquote-button\n * @slot after-blockquote-button\n\n * ## Code block\n * @slot before-code-block-button\n * @slot code-block-button\n * @slot after-code-block-button\n\n * ## Bullet List\n * @slot before-bullet-list-button\n * @slot bullet-list-button\n * @slot after-bullet-list-button\n\n * ## Ordered list\n * @slot before-ordered-list-button\n * @slot ordered-list-button\n * @slot after-ordered-list-button\n\n * ## Decrease Indentation\n * @slot before-decrease-indentation-button\n * @slot decrease-indentation-button\n * @slot after-decrease-indentation-button\n\n * ## Increase Indentation\n * @slot before-increase-indentation-button\n * @slot increase-indentation-button\n * @slot after-increase-indentation-button\n\n * ## Attachments\n * @slot before-attach-files-button\n * @slot attach-files-button\n * @slot after-attach-files-button\n\n * ## Undo\n * @slot before-undo-button\n * @slot undo-button\n * @slot after-undo-button\n\n * ## Redo\n * @slot before-redo-button\n * @slot redo-button\n * @slot after-redo-button\n * @slot toolbar-end\n */\nexport class TipTapEditor extends TipTapEditorBase {\n  static get styles() {\n    return TipTapEditorBase.styles.concat([toolbarButtonStyles]);\n  }\n\n  static get properties(): PropertyDeclarations {\n    return Object.assign(TipTapEditorBase.properties, {\n      linkDialogExpanded: { type: Boolean },\n      linkInputRef: { state: true },\n      translations: { state: true },\n      __invalidLink__: { state: true, type: Boolean },\n    });\n  }\n\n  /**\n   * Translations for various aspects of the editor.\n   */\n  translations = translations;\n\n  /**\n   * The <input> for inserting links\n   */\n  linkInputRef: Ref<HTMLInputElement> = createRef();\n\n  /**\n   * The dialog that contains the link input + link / unlink buttons\n   */\n  linkDialogExpanded: boolean = false;\n\n  private __invalidLink__: boolean = false;\n\n  /**\n   * @override\n   */\n  registerDependencies() {\n    super.registerDependencies();\n    [RoleToolbar, RoleTooltip].forEach((el) => el.define());\n  }\n\n  constructor() {\n    super();\n\n    this.starterKitOptions = Object.assign(this.starterKitOptions, {\n      rhinoPlaceholder: {\n        placeholder: this.translations.placeholder,\n      },\n      rhinoAttachment: {\n        fileUploadErrorMessage: this.translations.fileUploadErrorMessage,\n        captionPlaceholder: this.translations.captionPlaceholder,\n      },\n    }) as typeof this.starterKitOptions;\n\n    this.addEventListener(\"keydown\", this.handleKeyboardDialogToggle);\n  }\n\n  protected updated(changedProperties: PropertyValues<this>): void {\n    if (!this.hasInitialized) {\n      return super.updated(changedProperties);\n    }\n\n    if (changedProperties.has(\"translations\")) {\n      const { rhinoAttachment, rhinoPlaceholder } = this.starterKitOptions;\n\n      if (rhinoPlaceholder) {\n        rhinoPlaceholder.placeholder = this.translations.placeholder;\n      }\n\n      if (rhinoAttachment) {\n        rhinoAttachment.captionPlaceholder =\n          this.translations.captionPlaceholder;\n        rhinoAttachment.fileUploadErrorMessage =\n          this.translations.fileUploadErrorMessage;\n      }\n    }\n\n    return super.updated(changedProperties);\n  }\n\n  /**\n   * @override\n   */\n  async connectedCallback() {\n    super.connectedCallback();\n\n    await this.updateComplete;\n\n    if (this.editor) {\n      this.editor.on(\"focus\", this.closeLinkDialog);\n    }\n\n    document.addEventListener(\"click\", this.__handleLinkDialogClick);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener(\"click\", this.__handleLinkDialogClick);\n  }\n\n  get icons(): typeof icons {\n    return icons;\n  }\n\n  /** Closes the dialog for link previews */\n  handleKeyboardDialogToggle = (e: KeyboardEvent) => {\n    let { key, metaKey, ctrlKey } = e;\n\n    if (key == null) return;\n\n    key = key.toLowerCase();\n\n    if (key === \"escape\" && this.linkDialogExpanded) {\n      this.closeLinkDialog();\n      return;\n    }\n\n    const shortcutModifier = isiOS ? metaKey : ctrlKey;\n\n    if (key === \"k\" && shortcutModifier) {\n      this.showLinkDialog();\n    }\n  };\n\n  toggleLinkDialog(): void {\n    if (this.linkDialogExpanded) {\n      this.closeLinkDialog();\n      return;\n    }\n\n    this.showLinkDialog();\n  }\n\n  closeLinkDialog(): void {\n    if (this.linkDialog == null) return;\n\n    this.linkDialogExpanded = false;\n  }\n\n  showLinkDialog(): void {\n    if (this.linkDialog == null) return;\n\n    const inputElement = this.linkInputRef.value;\n\n    if (inputElement != null) {\n      inputElement.value = \"\";\n    }\n\n    this.__invalidLink__ = false;\n    this.linkDialogExpanded = true;\n    setTimeout(() => {\n      if (inputElement != null) inputElement.focus();\n    });\n  }\n\n  get linkDialog(): Maybe<HTMLDivElement> {\n    return this.shadowRoot?.querySelector<HTMLDivElement>(\"#link-dialog\");\n  }\n\n  attachFiles(): void {\n    const input = this.fileInputEl;\n\n    if (input == null) return;\n\n    input.click();\n  }\n\n  addLink(): void {\n    const inputElement = this.linkInputRef.value;\n\n    if (inputElement == null) return;\n\n    const href = inputElement.value;\n\n    try {\n      new URL(href);\n      inputElement.setCustomValidity(\"\");\n      this.__invalidLink__ = false;\n    } catch (error) {\n      inputElement.setCustomValidity(\"Not a valid URL\");\n      this.__invalidLink__ = true;\n      return;\n    }\n\n    if (href) {\n      this.closeLinkDialog();\n      inputElement.value = \"\";\n      const chain = this.editor\n        ?.chain()\n        .extendMarkRange(\"link\")\n        .setLink({ href });\n\n      if (chain && this.editor?.state.selection.empty) {\n        chain.insertContent(href);\n      }\n\n      if (chain) {\n        chain.run();\n      }\n    }\n  }\n\n  get fileInputEl(): Maybe<HTMLInputElement> {\n    return this.shadowRoot?.getElementById(\n      \"file-input\",\n    ) as Maybe<HTMLInputElement>;\n  }\n\n  async handleFileUpload(): Promise<void> {\n    const input = this.fileInputEl;\n    if (input == null) return;\n    if (input.files == null) return;\n\n    const attachments = await this.handleFiles(input.files);\n\n    if (attachments.length > 0) {\n      this.editor?.chain().focus().setAttachment(attachments).run();\n    }\n\n    input.value = \"\";\n  }\n\n  private get __tooltipExportParts() {\n    return \"base:toolbar__tooltip__base, arrow:toolbar__tooltip__arrow\";\n  }\n\n  renderBoldButton() {\n    const boldEnabled = Boolean(this.editor?.commands.toggleBold);\n\n    if (!boldEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().toggleBold();\n    const isActive = Boolean(this.editor?.isActive(\"bold\"));\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--bold\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"bold\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${async (e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) return;\n          this.editor?.chain().focus().toggleBold().run();\n        }}\n      >\n        <slot name=\"bold-tooltip\">\n          <role-tooltip\n            id=\"bold\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--bold\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.bold}\n          </role-tooltip>\n        </slot>\n        <slot name=\"bold-icon\">${this.icons.bold}</slot>\n      </button>\n    `;\n  }\n\n  renderItalicButton() {\n    const italicEnabled = Boolean(this.editor?.commands.toggleItalic);\n\n    if (!italicEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"italic\"));\n    const isDisabled = this.editor == null || !this.editor.can().toggleItalic();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--italic\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"italics\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleItalic().run();\n        }}\n      >\n        <slot name=\"italics-tooltip\">\n          <role-tooltip\n            id=\"italics\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--italics\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.italics}\n          </role-tooltip>\n        </slot>\n        <slot name=\"italics-icon\"> ${this.icons.italics} </slot>\n      </button>\n    `;\n  }\n\n  renderStrikeButton() {\n    const strikeEnabled = Boolean(this.editor?.commands.toggleStrike);\n\n    if (!strikeEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"rhino-strike\"));\n    const isDisabled = this.editor == null || !this.editor.can().toggleStrike();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--strike\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"strike\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleStrike().run();\n        }}\n      >\n        <slot name=\"strike-tooltip\">\n          <role-tooltip\n            id=\"strike\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--strike\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.strike}\n          </role-tooltip>\n        </slot>\n        <slot name=\"strike-icon\">${this.icons.strike}</slot>\n      </button>\n    `;\n  }\n\n  renderLinkButton() {\n    const linkEnabled = Boolean(this.editor?.commands.setLink);\n\n    if (!linkEnabled) return html``;\n\n    const isActive = Boolean(this.linkDialogExpanded);\n    const isDisabled =\n      this.editor == null || !this.editor.can().setLink({ href: \"\" });\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--link\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"link\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        aria-controls=\"link-dialog\"\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (this.editor == null) return;\n          if (elementDisabled(e.currentTarget)) return;\n\n          this.toggleLinkDialog();\n        }}\n      >\n        <slot name=\"link-tooltip\">\n          <role-tooltip\n            id=\"link\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--link\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.link}\n          </role-tooltip>\n        </slot>\n        <slot name=\"link-icon\">${this.icons.link}</slot>\n      </button>\n    `;\n  }\n\n  renderHeadingButton() {\n    const headingEnabled = Boolean(this.editor?.commands.toggleHeading);\n\n    if (!headingEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"heading\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleHeading({ level: 1 });\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--heading\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"heading\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleHeading({ level: 1 }).run();\n        }}\n      >\n        <slot name=\"heading-tooltip\">\n          <role-tooltip\n            id=\"heading\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--heading\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.heading}\n          </role-tooltip>\n        </slot>\n        <slot name=\"heading-icon\">${this.icons.heading}</slot>\n      </button>\n    `;\n  }\n\n  renderBlockquoteButton() {\n    const blockQuoteEnabled = Boolean(this.editor?.commands.toggleBlockquote);\n\n    if (!blockQuoteEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"blockquote\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleBlockquote();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--blockquote\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"blockquote\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleBlockquote().run();\n        }}\n      >\n        <slot name=\"blockquote-tooltip\">\n          <role-tooltip\n            id=\"blockquote\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--blockquote\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.blockQuote}\n          </role-tooltip>\n        </slot>\n        <slot name=\"blockquote-icon\">${this.icons.blockQuote}</slot>\n      </button>\n    `;\n  }\n\n  renderCodeBlockButton() {\n    const codeBlockEnabled = Boolean(this.editor?.commands.toggleCodeBlock);\n\n    if (!codeBlockEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"codeBlock\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleCodeBlock();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--code-block\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"code-block\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleCodeBlock().run();\n        }}\n      >\n        <slot name=\"code-block-tooltip\">\n          <role-tooltip\n            id=\"code-block\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--code-block\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.codeBlock}\n          </role-tooltip>\n        </slot>\n        <slot name=\"code-block-icon\">${this.icons.codeBlock}</slot>\n      </button>\n    `;\n  }\n\n  renderBulletListButton() {\n    const bulletListEnabled = Boolean(this.editor?.commands.toggleBulletList);\n\n    if (!bulletListEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null ||\n      !(\n        this.editor.can().toggleOrderedList?.() ||\n        this.editor.can().toggleBulletList()\n      );\n\n    const isActive = Boolean(\n      this.editor != null && isExactNodeActive(this.editor.state, \"bulletList\"),\n    );\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--bullet-list\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"bullet-list\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleBulletList().run();\n        }}\n      >\n        <slot name=\"bullet-list-tooltip\">\n          <role-tooltip\n            id=\"bullet-list\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--bullet-list\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.bulletList}\n          </role-tooltip>\n        </slot>\n        <slot name=\"bullet-list-icon\">${this.icons.bulletList}</slot>\n      </button>\n    `;\n  }\n\n  renderOrderedListButton() {\n    const orderedListEnabled = Boolean(this.editor?.commands.toggleOrderedList);\n\n    if (!orderedListEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null ||\n      !(\n        this.editor.can().toggleOrderedList() ||\n        this.editor.can().toggleBulletList?.()\n      );\n\n    const isActive = Boolean(\n      this.editor != null &&\n        isExactNodeActive(this.editor.state, \"orderedList\"),\n    );\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--ordered-list\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"ordered-list\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleOrderedList().run();\n        }}\n      >\n        <slot name=\"ordered-list-tooltip\">\n          <role-tooltip\n            id=\"ordered-list\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--ordered-list\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.orderedList}\n          </role-tooltip>\n        </slot>\n        <slot name=\"ordered-list-icon\">${this.icons.orderedList}</slot>\n      </button>\n    `;\n  }\n\n  renderAttachmentButton() {\n    const attachmentEnabled = Boolean(this.editor?.commands.setAttachment);\n\n    if (!attachmentEnabled) return html``;\n\n    const isDisabled = this.editor == null;\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--attach-files\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"attach-files\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${this.attachFiles}\n      >\n        <slot name=\"attach-files-tooltip\">\n          <role-tooltip\n            id=\"attach-files\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--attach-files\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.attachFiles}\n          </role-tooltip>\n        </slot>\n        <slot name=\"attach-files-icon\">${this.icons.attachFiles}</slot>\n\n        <!-- @TODO: Write documentation. Hookup onchange to the slotted elements? -->\n        <slot name=\"attach-files-input\">\n          <input\n            id=\"file-input\"\n            type=\"file\"\n            hidden\n            multiple\n            accept=${this.accept || \"*\"}\n            @change=${this.handleFileUpload}\n          />\n        </slot>\n      </button>\n    `;\n  }\n\n  renderUndoButton() {\n    const undoEnabled = Boolean(this.editor?.commands.undo);\n\n    if (!undoEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().undo();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--undo\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"undo\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().undo().run();\n        }}\n      >\n        <slot name=\"undo-tooltip\">\n          <role-tooltip\n            id=\"undo\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--undo\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.undo}\n          </role-tooltip>\n        </slot>\n        <slot name=\"undo-icon\">${this.icons.undo}</slot>\n      </button>\n    `;\n  }\n\n  renderDecreaseIndentation() {\n    // Decrease / increase indentation are special cases in that they rely on built-in editor\n    // commands and not commands added by extensions.\n    const decreaseIndentationNotEnabled =\n      this.starterKitOptions.decreaseIndentation == false;\n\n    if (decreaseIndentationNotEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null || !this.editor.can().liftListItem(\"listItem\");\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--decrease-indentation\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"decrease-indentation\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().liftListItem(\"listItem\").run();\n        }}\n      >\n        <slot name=\"decrease-indentation-tooltip\">\n          <role-tooltip\n            id=\"decrease-indentation\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--decrease-indentation\"\n          >\n            ${this.translations.decreaseIndentation}\n          </role-tooltip>\n        </slot>\n        <slot name=\"decrease-indentation\"\n          >${this.icons.decreaseIndentation}</slot\n        >\n      </button>\n    `;\n  }\n\n  renderIncreaseIndentation() {\n    const increaseIndentationNotEnabled =\n      this.starterKitOptions.increaseIndentation == false;\n\n    if (increaseIndentationNotEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null || !this.editor.can().sinkListItem(\"listItem\");\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--increase-indentation\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"increase-indentation\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().sinkListItem(\"listItem\").run();\n        }}\n      >\n        <slot name=\"increase-indentation-tooltip\">\n          <role-tooltip\n            id=\"increase-indentation\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--increase-indentation\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.increaseIndentation}\n          </role-tooltip>\n        </slot>\n        <slot name=\"increase-indentation\"\n          >${this.icons.increaseIndentation}</slot\n        >\n      </button>\n    `;\n  }\n\n  renderRedoButton() {\n    const redoEnabled = Boolean(this.editor?.commands.redo);\n\n    if (!redoEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().redo?.();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--redo\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"redo\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().redo().run();\n        }}\n      >\n        <slot name=\"redo-tooltip\">\n          <role-tooltip\n            id=\"redo\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--redo\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.redo}\n          </role-tooltip>\n        </slot>\n        <slot name=\"redo-icon\">${this.icons.redo}</slot>\n      </button>\n    `;\n  }\n\n  renderToolbarStart() {\n    return html``;\n  }\n\n  renderToolbarEnd() {\n    return html``;\n  }\n\n  renderToolbar() {\n    if (this.readonly) return html``;\n\n    return html`\n      <slot name=\"toolbar\">\n        <role-toolbar\n          class=\"toolbar\"\n          part=\"toolbar\"\n          role=\"toolbar\"\n          exportparts=\"base:toolbar__base\"\n        >\n          <slot name=\"toolbar-start\">${this.renderToolbarStart()}</slot>\n\n          <!-- Bold -->\n          <slot name=\"before-bold-button\"></slot>\n          <slot name=\"bold-button\">${this.renderBoldButton()}</slot>\n          <slot name=\"after-bold-button\"></slot>\n\n          <!-- Italic -->\n          <slot name=\"before-italic-button\"></slot>\n          <slot name=\"italic-button\">${this.renderItalicButton()}</slot>\n          <slot name=\"after-italic-button\"></slot>\n\n          <!-- Strike -->\n          <slot name=\"before-strike-button\"></slot>\n          <slot name=\"strike-button\">${this.renderStrikeButton()}</slot>\n          <slot name=\"after-strike-button\"></slot>\n\n          <!-- Link -->\n          <slot name=\"before-link-button\"></slot>\n          <slot name=\"link-button\">${this.renderLinkButton()}</slot>\n          <slot name=\"after-link-button\"></slot>\n\n          <!-- Heading -->\n          <slot name=\"before-heading-button\"></slot>\n          <slot name=\"heading-button\">${this.renderHeadingButton()}</slot>\n          <slot name=\"after-heading-button\"></slot>\n\n          <!-- Blockquote -->\n          <slot name=\"before-blockquote-button\"></slot>\n          <slot name=\"blockquote-button\">${this.renderBlockquoteButton()}</slot>\n          <slot name=\"after-blockquote-button\"></slot>\n\n          <!-- Code block -->\n          <slot name=\"before-code-block-button\"></slot>\n          <slot name=\"code-block-button\">${this.renderCodeBlockButton()}</slot>\n          <slot name=\"after-code-block-button\"></slot>\n\n          <!-- Bullet List -->\n          <slot name=\"before-bullet-list-button\"></slot>\n          <slot name=\"bullet-list-button\"\n            >${this.renderBulletListButton()}</slot\n          >\n          <slot name=\"after-bullet-list-button\"></slot>\n\n          <!-- Ordered list -->\n          <slot name=\"before-ordered-list-button\"></slot>\n          <slot name=\"ordered-list-button\">\n            ${this.renderOrderedListButton()}\n          </slot>\n          <slot name=\"after-ordered-list-button\"></slot>\n\n          <slot name=\"before-decrease-indentation-button\"></slot>\n          <slot name=\"decrease-indentation-button\"\n            >${this.renderDecreaseIndentation()}</slot\n          >\n          <slot name=\"after-decrease-indentation-button\"></slot>\n\n          <slot name=\"before-increase-indentation-button\"></slot>\n          <slot name=\"increase-indentation-button\"\n            >${this.renderIncreaseIndentation()}</slot\n          >\n          <slot name=\"after-increase-indentation-button\"></slot>\n\n          <!-- Attachments -->\n          <slot name=\"before-attach-files-button\"></slot>\n          <slot name=\"attach-files-button\"\n            >${this.renderAttachmentButton()}</slot\n          >\n          <slot name=\"after-attach-files-button\"></slot>\n\n          <!-- Undo -->\n          <slot name=\"before-undo-button\"></slot>\n          <!-- @ts-expect-error -->\n          <slot name=\"undo-button\"> ${this.renderUndoButton()} </slot>\n          <slot name=\"after-undo-button\"></slot>\n\n          <!-- Redo -->\n          <slot name=\"before-redo-button\"></slot>\n          <slot name=\"redo-button\"> ${this.renderRedoButton()} </slot>\n          <slot name=\"after-redo-button\"></slot>\n\n          <slot name=\"toolbar-end\">${this.renderToolbarEnd()}</slot>\n        </role-toolbar>\n      </slot>\n    `;\n  }\n\n  /**\n   * @private\n   */\n  private __handleLinkDialogClick = (e: Event) => {\n    const linkDialogContainer = this.shadowRoot?.querySelector(\n      \".link-dialog__container\",\n    );\n\n    if (!linkDialogContainer) {\n      this.linkDialogExpanded = false;\n      return;\n    }\n\n    const composedPath = e.composedPath();\n\n    const linkButton = this.shadowRoot?.querySelector(\"[name='link-button']\");\n\n    if (composedPath.includes(linkDialogContainer as EventTarget)) {\n      return;\n    }\n\n    if (linkButton && composedPath.includes(linkButton as EventTarget)) {\n      return;\n    }\n\n    this.linkDialogExpanded = false;\n  };\n\n  /** @TODO: Lets think of a more friendly way to render dialogs for users to extend. */\n  renderDialog(): TemplateResult {\n    if (this.readonly) {\n      return html``;\n    }\n\n    return html` <div\n      id=\"link-dialog\"\n      class=\"link-dialog\"\n      part=\"link-dialog\"\n      ?hidden=${!this.linkDialogExpanded}\n    >\n      <div class=\"link-dialog__container\" part=\"link-dialog__container\">\n        <input\n          id=\"link-dialog__input\"\n          class=${`link-dialog__input ${\n            this.__invalidLink__ ? \"link-validate\" : \"\"\n          }`}\n          part=${`link-dialog__input ${\n            this.__invalidLink__ ? \"link-dialog__input--invalid\" : \"\"\n          }`}\n          type=\"text\"\n          placeholder=\"Enter a URL...\"\n          aria-label=\"Enter a URL\"\n          required\n          type=\"url\"\n          ${ref(this.linkInputRef)}\n          @input=${() => {\n            const inputElement = this.linkInputRef.value;\n            if (inputElement == null) return;\n\n            inputElement.setCustomValidity(\"\");\n            this.__invalidLink__ = false;\n          }}\n          @blur=${() => {\n            const inputElement = this.linkInputRef.value;\n\n            if (inputElement == null) return;\n\n            this.__invalidLink__ = false;\n            // inputElement.value = \"\"\n          }}\n          @keydown=${(e: KeyboardEvent) => {\n            if (e.key?.toLowerCase() === \"enter\") {\n              e.preventDefault();\n              this.addLink();\n            }\n          }}\n        />\n        <div class=\"link-dialog__buttons\" part=\"link-dialog__buttons\">\n          <button\n            class=\"rhino-toolbar-button link-dialog__button\"\n            part=\"link-dialog__button link-dialog__button--link\"\n            @click=${this.addLink}\n          >\n            ${this.translations.linkDialogLink}\n          </button>\n          <button\n            class=\"rhino-toolbar-button link-dialog__button\"\n            part=\"link-dialog__button link-dialog__button--unlink\"\n            @click=${() => {\n              this.editor\n                ?.chain()\n                .focus()\n                .extendMarkRange(\"link\")\n                .unsetLink()\n                .run();\n            }}\n          >\n            ${this.translations.linkDialogUnlink}\n          </button>\n        </div>\n      </div>\n    </div>`;\n  }\n}\n\nfunction elementDisabled(element: null | EventTarget | Element): boolean {\n  if (element == null) return true;\n  if (!(\"getAttribute\" in element)) return true;\n\n  return (\n    element.getAttribute(\"aria-disabled\") === \"true\" ||\n    element.hasAttribute(\"disabled\")\n  );\n}\n"],
  "mappings": "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",
  "names": ["_ChildPart", "ChildPart", "_$LH", "isSingleExpression", "part", "strings", "notifyChildrenConnectedChanged", "parent", "isConnected", "children", "_$disconnectableChildren", "obj", "_b", "_a", "o", "e", "removeDisconnectableFromParent", "_$parent", "delete", "size", "addDisconnectableToParent", "Set", "has", "add", "installDisconnectAPI", "reparentDisconnectables", "newParent", "this", "notifyChildPartConnectedChanged", "isClearingValue", "fromPartIndex", "value", "_$committedValue", "Array", "isArray", "i", "length", "type", "PartType", "CHILD", "_c", "_$notifyConnectionChanged", "_d", "_$reparentDisconnectables", "AsyncDirective", "Directive", "constructor", "_$initialize", "part", "attributeIndex", "super", "_$isConnected", "_$AO", "isClearingDirective", "r", "reconnected", "call", "disconnected", "setValue", "isSingleExpression", "__part", "_$setValue", "newValues", "__attributeIndex", "createRef", "Ref", "lastElementForContextAndCallback", "WeakMap", "ref", "directive", "AsyncDirective", "render", "_ref", "nothing", "update", "part", "refChanged", "this", "_updateRefValue", "undefined", "_lastElementForRef", "_element", "_context", "_a", "options", "host", "element", "context", "globalThis", "lastElementForCallback", "get", "set", "call", "value", "t", "_b", "_c", "disconnected", "reconnected", "i", "platform", "x", "i", "max", "offset", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "x", "window", "e", "computePosition", "i", "computePosition", "x", "placement", "e", "n"]
}
