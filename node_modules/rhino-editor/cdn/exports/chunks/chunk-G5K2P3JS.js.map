{
  "version": 3,
  "sources": ["../../../src/exports/extensions/paste.ts"],
  "sourcesContent": ["import { Plugin, PluginKey } from \"@tiptap/pm/state\";\nimport { RhinoPasteEvent } from \"../events/rhino-paste-event.js\";\n\nexport interface PasteOptions {}\n\n// Super simple plugin that dispatches a paste event. This is convenient way to make this hard to override.\nexport function Paste() {\n  return new Plugin({\n    key: new PluginKey(\"rhino-paste-event\"),\n    props: {\n      handlePaste(view, event) {\n        const { clipboardData } = event;\n\n        const rhinoPasteEvent = new RhinoPasteEvent(clipboardData);\n        view.dom.dispatchEvent(rhinoPasteEvent);\n\n        if (rhinoPasteEvent.defaultPrevented) {\n          return;\n        }\n\n        // @TODO: Future enhancements for pasting\n        // https://github.com/basecamp/trix/blob/fda14c5ae88a0821cf8999a53dcb3572b4172cf0/src/trix/controllers/level_0_input_controller.js#L39\n        // https://github.com/basecamp/trix/blob/fda14c5ae88a0821cf8999a53dcb3572b4172cf0/src/trix/controllers/level_2_input_controller.js#L39\n      },\n    },\n  });\n}\n"],
  "mappings": ";;;;;;;;;AAMO,SAAS,QAAQ;AACtB,SAAO,IAAI,OAAO;AAAA,IAChB,KAAK,IAAI,UAAU,mBAAmB;AAAA,IACtC,OAAO;AAAA,MACL,YAAY,MAAM,OAAO;AACvB,cAAM,EAAE,cAAc,IAAI;AAE1B,cAAM,kBAAkB,IAAI,gBAAgB,aAAa;AACzD,aAAK,IAAI,cAAc,eAAe;AAEtC,YAAI,gBAAgB,kBAAkB;AACpC;AAAA,QACF;AAAA,MAKF;AAAA,IACF;AAAA,EACF,CAAC;AACH;",
  "names": []
}
