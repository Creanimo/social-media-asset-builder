{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/lit-html.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directive-helpers.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directive.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/async-directive.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directives/ref.ts", "../../node_modules/.pnpm/@lit+reactive-element@1.6.3/node_modules/@lit/reactive-element/src/css-tag.ts", "../../node_modules/.pnpm/@lit+reactive-element@1.6.3/node_modules/@lit/reactive-element/src/reactive-element.ts", "../../node_modules/.pnpm/lit-element@3.3.3/node_modules/lit-element/src/lit-element.ts", "../../src/exports/styles/editor.js", "../../src/internal/elements/base-element.ts", "../../node_modules/.pnpm/orderedmap@2.1.1/node_modules/orderedmap/dist/index.js", "../../node_modules/.pnpm/prosemirror-model@1.21.0/node_modules/prosemirror-model/dist/index.js", "../../node_modules/.pnpm/prosemirror-transform@1.9.0/node_modules/prosemirror-transform/dist/index.js", "../../node_modules/.pnpm/prosemirror-state@1.4.3/node_modules/prosemirror-state/dist/index.js", "../../node_modules/.pnpm/prosemirror-view@1.28.3/node_modules/prosemirror-view/dist/index.js", "../../node_modules/.pnpm/w3c-keyname@2.2.8/node_modules/w3c-keyname/index.js", "../../node_modules/.pnpm/prosemirror-keymap@1.2.2/node_modules/prosemirror-keymap/dist/index.js", "../../node_modules/.pnpm/prosemirror-commands@1.5.2/node_modules/prosemirror-commands/dist/index.js", "../../node_modules/.pnpm/prosemirror-schema-list@1.3.0/node_modules/prosemirror-schema-list/dist/index.js", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/createChainableState.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/CommandManager.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/EventEmitter.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getExtensionField.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/splitExtensions.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getAttributesFromExtensions.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getNodeType.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/mergeAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getRenderedAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isFunction.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/callOrReturn.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isEmptyObject.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/fromString.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/injectExtensionAttributesToParseRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getSchemaByResolvedExtensions.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getSchemaTypeByName.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isExtensionRulesEnabled.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getTextContentFromNodes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isRegExp.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/InputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isNumber.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/PasteRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/findDuplicates.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/ExtensionManager.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isPlainObject.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/mergeDeep.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/Extension.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getTextBetween.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getTextSerializersFromSchema.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/extensions/clipboardTextSerializer.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/blur.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/clearContent.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/clearNodes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/command.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/createParagraphNear.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/cut.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/deleteCurrentNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/deleteNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/deleteRange.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/deleteSelection.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/enter.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/exitCode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/objectIncludes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getMarkRange.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getMarkType.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/extendMarkRange.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/first.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isTextSelection.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/minMax.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/resolveFocusPosition.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isiOS.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/focus.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/forEach.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/insertContent.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/elementFromString.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/createNodeFromContent.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/selectionToInsertionEnd.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/insertContentAt.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/join.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/joinItemBackward.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/joinItemForward.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/joinTextblockBackward.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/joinTextblockForward.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isMacOS.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/keyboardShortcut.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isNodeActive.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/lift.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/liftEmptyBlock.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/liftListItem.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/newlineInCode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getSchemaTypeNameByName.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/deleteProps.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/resetAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/scrollIntoView.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/selectAll.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/selectNodeBackward.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/selectNodeForward.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/selectParentNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/selectTextblockEnd.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/selectTextblockStart.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/createDocument.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/setContent.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getMarkAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/combineTransactionSteps.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/defaultBlockAt.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/findChildren.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/findChildrenInRange.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/findParentNodeClosestToPos.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/findParentNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getHTMLFromFragment.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getSchema.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/generateHTML.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/generateJSON.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getText.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/generateText.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getNodeAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/removeDuplicates.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getChangedRanges.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getDebugJSON.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getMarksBetween.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getNodeAtPosition.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/getSplittedAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isMarkActive.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isActive.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isAtEndOfNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isAtStartOfNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isList.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isNodeEmpty.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/isNodeSelection.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/helpers/posToDOMRect.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/setMark.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/setMeta.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/setNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/setNodeSelection.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/setTextSelection.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/sinkListItem.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/splitBlock.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/splitListItem.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/toggleList.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/toggleMark.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/toggleNode.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/toggleWrap.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/undoInputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/unsetAllMarks.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/unsetMark.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/updateAttributes.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/wrapIn.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/commands/wrapInList.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/extensions/commands.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/extensions/editable.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/extensions/focusEvents.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/extensions/keymap.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/extensions/tabindex.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/NodePos.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/style.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/createStyleTag.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/Editor.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/inputRules/markInputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/inputRules/nodeInputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/inputRules/textblockTypeInputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/inputRules/textInputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/inputRules/wrappingInputRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/Mark.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/Node.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isAndroid.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/NodeView.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/pasteRules/markPasteRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/escapeForRegEx.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/utilities/isString.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/pasteRules/nodePasteRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/pasteRules/textPasteRule.ts", "../../node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/src/Tracker.ts", "../../src/exports/styles/tip-tap-core-styles.ts", "../../node_modules/.pnpm/@tiptap+extension-blockquote@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-blockquote/src/blockquote.ts", "../../node_modules/.pnpm/@tiptap+extension-bold@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-bold/src/bold.ts", "../../node_modules/.pnpm/@tiptap+extension-bullet-list@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-list-item/src/list-item.ts", "../../node_modules/.pnpm/@tiptap+extension-bullet-list@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-text-style/src/text-style.ts", "../../node_modules/.pnpm/@tiptap+extension-bullet-list@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-bullet-list/src/bullet-list.ts", "../../node_modules/.pnpm/@tiptap+extension-code@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-code/src/code.ts", "../../node_modules/.pnpm/@tiptap+extension-code-block@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-code-block/src/code-block.ts", "../../node_modules/.pnpm/@tiptap+extension-document@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-document/src/document.ts", "../../node_modules/.pnpm/prosemirror-dropcursor@1.8.1/node_modules/prosemirror-dropcursor/dist/index.js", "../../node_modules/.pnpm/@tiptap+extension-dropcursor@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-dropcursor/src/dropcursor.ts", "../../node_modules/.pnpm/prosemirror-gapcursor@1.3.2/node_modules/prosemirror-gapcursor/dist/index.js", "../../node_modules/.pnpm/@tiptap+extension-gapcursor@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-gapcursor/src/gapcursor.ts", "../../node_modules/.pnpm/@tiptap+extension-hard-break@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-hard-break/src/hard-break.ts", "../../node_modules/.pnpm/@tiptap+extension-heading@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-heading/src/heading.ts", "../../node_modules/.pnpm/rope-sequence@1.3.4/node_modules/rope-sequence/dist/index.js", "../../node_modules/.pnpm/prosemirror-history@1.4.0/node_modules/prosemirror-history/dist/index.js", "../../node_modules/.pnpm/@tiptap+extension-history@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-history/src/history.ts", "../../node_modules/.pnpm/@tiptap+extension-horizontal-rule@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-horizontal-rule/src/horizontal-rule.ts", "../../node_modules/.pnpm/@tiptap+extension-italic@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-italic/src/italic.ts", "../../node_modules/.pnpm/@tiptap+extension-list-item@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-list-item/src/list-item.ts", "../../node_modules/.pnpm/@tiptap+extension-ordered-list@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-list-item/src/list-item.ts", "../../node_modules/.pnpm/@tiptap+extension-ordered-list@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-text-style/src/text-style.ts", "../../node_modules/.pnpm/@tiptap+extension-ordered-list@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-ordered-list/src/ordered-list.ts", "../../node_modules/.pnpm/@tiptap+extension-paragraph@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-paragraph/src/paragraph.ts", "../../node_modules/.pnpm/@tiptap+extension-strike@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-strike/src/strike.ts", "../../node_modules/.pnpm/@tiptap+extension-text@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0_/node_modules/@tiptap/extension-text/src/text.ts", "../../node_modules/.pnpm/@tiptap+starter-kit@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/starter-kit/src/starter-kit.ts", "../../src/internal/uuidv4.ts", "../../src/internal/icons.ts", "../../src/internal/to-memory-size.ts", "../../src/exports/styles/normalize.ts", "../../src/exports/translations.ts", "../../src/exports/elements/attachment-editor.ts", "../../src/internal/to-default-caption.ts", "../../src/exports/attachment-manager.ts", "../../src/internal/selection-to-insertion-end.ts", "../../src/exports/extensions/find-attribute.ts", "../../node_modules/.pnpm/prosemirror-utils@1.2.2_prosemirror-model@1.21.0_prosemirror-state@1.4.3/node_modules/prosemirror-utils/src/selection.ts", "../../node_modules/.pnpm/prosemirror-utils@1.2.2_prosemirror-model@1.21.0_prosemirror-state@1.4.3/node_modules/prosemirror-utils/src/helpers.ts", "../../node_modules/.pnpm/prosemirror-utils@1.2.2_prosemirror-model@1.21.0_prosemirror-state@1.4.3/node_modules/prosemirror-utils/src/transforms.ts", "../../node_modules/.pnpm/prosemirror-utils@1.2.2_prosemirror-model@1.21.0_prosemirror-state@1.4.3/node_modules/prosemirror-utils/src/node.ts", "../../src/exports/events/base-event.ts", "../../src/exports/events/attachment-remove-event.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directives/unsafe-html.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directives/if-defined.ts", "../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/src/directives/when.ts", "../../src/exports/extensions/attachment.ts", "../../src/exports/extensions/image.ts", "../../src/exports/extensions/gallery.ts", "../../src/exports/extensions/figcaption.ts", "../../src/exports/extensions/strike.ts", "../../node_modules/.pnpm/@tiptap+extension-placeholder@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-placeholder/src/placeholder.ts", "../../node_modules/.pnpm/@tiptap+extension-focus@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-focus/src/focus.ts", "../../node_modules/.pnpm/linkifyjs@4.1.1/node_modules/linkifyjs/dist/linkify.es.js", "../../node_modules/.pnpm/@tiptap+extension-link@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-link/src/helpers/autolink.ts", "../../node_modules/.pnpm/@tiptap+extension-link@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-link/src/helpers/clickHandler.ts", "../../node_modules/.pnpm/@tiptap+extension-link@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-link/src/helpers/pasteHandler.ts", "../../node_modules/.pnpm/@tiptap+extension-link@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-link/src/link.ts", "../../src/exports/events/rhino-paste-event.ts", "../../src/exports/extensions/paste.ts", "../../src/exports/extensions/rhino-starter-kit.ts", "../../node_modules/.pnpm/@rails+activestorage@7.0.6/node_modules/@rails/activestorage/app/assets/javascripts/activestorage.esm.js", "../../src/exports/attachment-upload.ts", "../../src/exports/events/add-attachment-event.ts", "../../src/exports/events/file-accept-event.ts", "../../src/exports/events/before-initialize-event.ts", "../../src/exports/events/initialize-event.ts", "../../src/exports/events/rhino-focus-event.ts", "../../src/exports/events/rhino-blur-event.ts", "../../src/exports/events/rhino-change-event.ts", "../../src/exports/events/selection-change-event.ts", "../../src/exports/elements/tip-tap-editor-base.ts", "../../node_modules/.pnpm/web-component-define@2.0.11/node_modules/web-component-define/src/internal/defineable-mixin.js", "../../node_modules/.pnpm/@open-wc+dedupe-mixin@1.4.0/node_modules/@open-wc/dedupe-mixin/src/dedupeMixin.js", "../../node_modules/.pnpm/web-component-define@2.0.11/node_modules/web-component-define/src/internal/scoped-elements-mixin.js", "../../node_modules/.pnpm/web-component-define@2.0.11/node_modules/web-component-define/src/internal/create-render-root-mixin.js", "../../node_modules/.pnpm/role-components@2.0.2/node_modules/role-components/exports/base-element.js", "../../node_modules/.pnpm/role-components@2.0.2/node_modules/role-components/exports/toolbar/toolbar.js", "../../node_modules/.pnpm/@floating-ui+utils@0.1.1/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../../node_modules/.pnpm/@floating-ui+core@1.4.1/node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../../node_modules/.pnpm/@floating-ui+utils@0.1.1/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs", "../../node_modules/.pnpm/@floating-ui+dom@1.5.1/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../../node_modules/.pnpm/role-components@2.0.2/node_modules/role-components/exports/tooltip/tooltip.js", "../../src/internal/string-map.ts", "../../src/internal/is-exact-node-active.ts", "../../src/exports/elements/tip-tap-editor.ts", "../../src/exports/index.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _necessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._$parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.8.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  _$LH,\n  Part,\n  DirectiveParent,\n  TemplateResult,\n  CompiledTemplateResult,\n} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\ntype IsTemplateResult = {\n  (val: unknown): val is TemplateResult | CompiledTemplateResult;\n  <T extends TemplateResultType>(\n    val: unknown,\n    type: T\n  ): val is TemplateResult<T>;\n};\n\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult: IsTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (\n  value: unknown\n): value is CompiledTemplateResult => {\n  return (value as CompiledTemplateResult)?.['_$litType$']?.h != null;\n};\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback: WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n> = new WeakMap();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.finalize();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.6.3');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.3.3');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "// @ts-check\nimport { css } from \"lit\";\n\nexport const hostStyles = css`\n  /* General tokens */\n  --rhino-focus-ring: 0px 0px 4px 1px var(--rhino-button-active-border-color);\n  --rhino-border-radius: 4px;\n\n  --rhino-danger-border-color: red;\n  --rhino-danger-background-color: #ffdddd;\n\n  /* Editor tokens */\n  --rhino-text-color: #374151;\n  --rhino-border-color: #cecece;\n  --rhino-placeholder-text-color: #cecece;\n\n  /* Regular buttons */\n  --rhino-button-text-color: #889;\n  --rhino-button-border-color: #cecece;\n\n  /** Disabled Buttons */\n  --rhino-button-disabled-text-color: #d1d5db;\n  --rhino-button-disabled-border-color: #d1d5db;\n  --rhino-button-disabled-background-color: #d1d5db;\n\n  /** Active buttons */\n  --rhino-button-active-border-color: #005a9c;\n  --rhino-button-active-background-color: rgb(226 239 255);\n\n  --rhino-toolbar-text-color: hsl(219, 6%, 43%);\n  --rhino-toolbar-icon-size: 24px;\n\n  --rhino-dialog-border-color: hsl(\n    var(--rhino-button-focus-background-color-hsl) / 50%\n  );\n\n  /** Focus buttons */\n  --rhino-button-focus-background-color: hsl(\n    var(--rhino-button-focus-background-color-hsl)\n  );\n\n  --rhino-button-focus-background-color-hsl: 219 26% 95%;\n\n  display: block;\n  color: var(--rhino-text-color);\n`;\n\nexport const toolbarButtonStyles = css`\n  .rhino-toolbar-button {\n    border: 1px solid var(--rhino-border-color);\n    border-radius: var(--rhino-border-radius);\n    padding: 0.2em 0.4em;\n    color: inherit;\n  }\n\n  .rhino-toolbar-button:is([aria-disabled=\"true\"], :disabled) {\n    color: var(--rhino-button-disabled-text-color);\n    border-color: var(--rhino-button-disabled-border-color);\n  }\n\n  .rhino-toolbar-button[aria-disabled=\"true\"]:focus {\n    border-color: var(--rhino-button-disabled-border-color);\n  }\n\n  .rhino-toolbar-button svg {\n    min-height: var(--rhino-toolbar-icon-size);\n    min-width: var(--rhino-toolbar-icon-size);\n\n    /* max-height / max-width needs to be set for safari */\n    max-height: var(--rhino-toolbar-icon-size);\n    max-width: var(--rhino-toolbar-icon-size);\n  }\n\n  .rhino-toolbar-button:is(:focus, :hover):not(\n      [aria-disabled=\"true\"],\n      :disabled\n    ) {\n    outline: transparent;\n    box-shadow: var(--rhino-focus-ring);\n    border-color: var(--rhino-button-active-border-color);\n  }\n\n  /* Only change the background color in certain scenarios */\n  .rhino-toolbar-button:is(:focus, :hover):not(\n      [aria-disabled=\"true\"],\n      :disabled,\n      [aria-pressed=\"true\"],\n      [part~=\"toolbar__button--active\"]\n    ) {\n    background-color: var(--rhino-button-focus-background-color);\n  }\n\n  .rhino-toolbar-button:is([aria-disabled=\"true\"], :disabled):not(\n      [part~=\"toolbar__button--active\"]\n    ) {\n    color: var(--rhino-button-disabled-text-color);\n    border-color: var(--rhino-button-disabled-border-color);\n  }\n\n  .rhino-toolbar-button:is(:focus, :hover):is(\n      [aria-disabled=\"true\"],\n      :disabled\n    ):not([part~=\"toolbar__button--active\"]) {\n    outline: transparent;\n    color: var(--rhino-button-disabled-text-color);\n    border-color: var(--rhino-button-disabled-border-color);\n    box-shadow: 0 0 0 1px var(--rhino-button-disabled-border-color);\n  }\n`;\n\nexport default css`\n  :host {\n    ${hostStyles}\n  }\n\n  .toolbar {\n    color: var(--rhino-toolbar-text-color);\n  }\n\n  .toolbar::part(base) {\n    overflow: auto;\n  }\n\n  .toolbar::part(base) {\n    border-color: var(--rhino-border-color);\n    border-bottom-color: transparent;\n    border-width: 1px;\n    border-radius: 4px;\n    border-bottom-right-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n\n  .toolbar::part(base):is(:focus-visible, :focus-within) {\n    border-color: var(--rhino-button-active-border-color);\n    outline: transparent;\n  }\n\n  [part~=\"toolbar__button--active\"],\n  [part~=\"toolbar__button--active\"]:is(:hover, :focus-within) {\n    background-color: var(--rhino-button-active-background-color);\n  }\n\n  [part~=\"toolbar__button--link\"],\n  [part~=\"toolbar__button--increase-indentation\"] {\n    margin-inline-end: 1rem;\n  }\n\n  [part~=\"toolbar__button--attach-files\"] {\n    margin-inline-end: auto;\n  }\n\n  #dialogs {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    pointer-events: none;\n  }\n\n  .link-dialog {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n    padding: 1px;\n  }\n\n  .link-dialog__container {\n    display: flex;\n    align-items: center;\n    background: white;\n    box-shadow: 0 0.3em 1em #ccc;\n    max-width: 600px;\n    padding: 0.75rem 0.4rem;\n    border-radius: 8px;\n    border-top: 2px solid var(--rhino-border-color);\n  }\n\n  .link-dialog__input {\n    border: 1px solid var(--rhino-border-color);\n    border-radius: var(--rhino-border-radius);\n    padding: 0.4em 0.6em;\n    flex: 1 1 auto;\n  }\n\n  .link-dialog__input:is(:focus) {\n    outline: transparent;\n    border-color: var(--rhino-button-active-border-color);\n  }\n\n  .link-validate:invalid {\n    outline: transparent;\n    background-color: var(--rhino-danger-background-color);\n    border-color: var(--rhino-danger-border-color);\n    box-shadow: none;\n  }\n\n  .rhino-toolbar-button.link-dialog__button {\n    padding: 0.4em 0.6em;\n    border: 1px solid var(--rhino-button-border-color);\n    border-radius: var(--rhino-border-radius);\n  }\n\n  .link-dialog__buttons {\n    margin-right: 0.5em;\n    margin-left: 0.5em;\n  }\n\n  .editor-wrapper {\n    position: relative;\n  }\n\n  .trix-content {\n    border: 1px solid var(--rhino-border-color);\n    border-radius: 0px 0px var(--rhino-border-radius) var(--rhino-border-radius);\n    margin: 0;\n    padding: 0.4em 0.6em;\n    min-height: 200px;\n    outline: transparent;\n    white-space: pre-wrap;\n  }\n`;\n", "import { LitElement } from \"lit\";\n\nexport class BaseElement extends LitElement {\n  static customElementRegistry = window.customElements;\n  static baseName: string;\n  static define(\n    name?: string,\n    ctor?: CustomElementConstructor,\n    options?: ElementDefinitionOptions,\n  ) {\n    if (name == null) name = this.baseName;\n    if (ctor == null) ctor = this;\n\n    // Can't register twice.\n    if (this.customElementRegistry.get(name)) return;\n\n    // creates anonymous class due to a limitation of CEs only allowing 1 class definition.\n    this.customElementRegistry.define(name, toAnonymousClass(ctor), options);\n  }\n}\n\nexport type Constructor = new (...args: any[]) => {};\n\nexport function toAnonymousClass<T extends Constructor>(klass: T): T {\n  return class extends klass {};\n}\n", "// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) \u2192 ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) \u2192 OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) \u2192 OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) \u2192 OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) \u2192 OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) \u2192 OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () \u2192 Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) \u2192 OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n", "import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are \u2018open\u2019 (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment\u2014i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent\u2014text nodes are \u2018flat\u2019 in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        for (let i = 0; i < resolveCache.length; i++) {\n            let cached = resolveCache[i];\n            if (cached.pos == pos && cached.doc == doc)\n                return cached;\n        }\n        let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n        resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n        return result;\n    }\n}\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise error when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++)\n            copy = this.marks[i].addToSet(copy);\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = null;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_\u200Bth outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type with the given attributes.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        The [linebreak\n        replacement](https://prosemirror.net/docs/ref/#model.NodeSpec.linebreakReplacement) node defined\n        in this schema, if any.\n        */\n        this.linebreakReplacement = null;\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            if (type.spec.linebreakReplacement) {\n                if (this.linebreakReplacement)\n                    throw new RangeError(\"Multiple linebreak nodes defined\");\n                if (!type.isInline || !type.isLeaf)\n                    throw new RangeError(\"Linebreak replacement nodes must be inline leaf nodes\");\n                this.linebreakReplacement = type;\n            }\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\nfunction isTagRule(rule) { return rule.tag != null; }\nfunction isStyleRule(rule) { return rule.style != null; }\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        rules.forEach(rule => {\n            if (isTagRule(rule))\n                this.tags.push(rule);\n            else if (isStyleRule(rule))\n                this.styles.push(rule);\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, \n    // Marks applied to this node itself\n    marks, \n    // Marks that can't apply here, but will be used in children if possible\n    pendingMarks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.pendingMarks = pendingMarks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        // Nested Marks with same type\n        this.stashMarks = [];\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    popFromStashMark(mark) {\n        for (let i = this.stashMarks.length - 1; i >= 0; i--)\n            if (mark.eq(this.stashMarks[i]))\n                return this.stashMarks.splice(i, 1)[0];\n    }\n    applyPending(nextType) {\n        for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n            let mark = pending[i];\n            if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n                !mark.isInSet(this.activeMarks)) {\n                this.activeMarks = mark.addToSet(this.activeMarks);\n                this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n            }\n        }\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom);\n        else if (dom.nodeType == 1)\n            this.addElement(dom);\n    }\n    withStyleRules(dom, f) {\n        let style = dom.getAttribute(\"style\");\n        if (!style)\n            return f();\n        let marks = this.readStyles(parseStyles(style));\n        if (!marks)\n            return; // A style with ignore: true\n        let [addMarks, removeMarks] = marks, top = this.top;\n        for (let i = 0; i < removeMarks.length; i++)\n            this.removePendingMark(removeMarks[i], top);\n        for (let i = 0; i < addMarks.length; i++)\n            this.addPendingMark(addMarks[i]);\n        f();\n        for (let i = 0; i < addMarks.length; i++)\n            this.removePendingMark(addMarks[i], top);\n        for (let i = 0; i < removeMarks.length; i++)\n            this.addPendingMark(removeMarks[i]);\n    }\n    addTextNode(dom) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom);\n                return;\n            }\n            if (rule && rule.skip)\n                this.addAll(dom);\n            else\n                this.withStyleRules(dom, () => this.addAll(dom));\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            this.withStyleRules(dom, () => {\n                this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n            });\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"));\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an array of marks, or null to indicate some of the styles\n    // had a rule with `ignore` set.\n    readStyles(styles) {\n        let add = Mark.none, remove = Mark.none;\n        for (let i = 0; i < styles.length; i += 2) {\n            for (let after = undefined;;) {\n                let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n                if (!rule)\n                    break;\n                if (rule.ignore)\n                    return null;\n                if (rule.clearMark) {\n                    this.top.pendingMarks.concat(this.top.activeMarks).forEach(m => {\n                        if (rule.clearMark(m))\n                            remove = m.addToSet(remove);\n                    });\n                }\n                else {\n                    add = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(add);\n                }\n                if (rule.consuming === false)\n                    after = rule;\n                else\n                    break;\n            }\n        }\n        return [add, remove];\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, continueAfter) {\n        let sync, nodeType, mark;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs))) {\n                this.leafFallback(dom);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            mark = markType.create(rule.attrs);\n            this.addPendingMark(mark);\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n        if (mark)\n            this.removePendingMark(mark, startIn);\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return false;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            this.enterInner(route[i], null, false);\n        return true;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                this.enterInner(block);\n        }\n        if (this.findPlace(node)) {\n            this.closeExtra();\n            let top = this.top;\n            top.applyPending(node.type);\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let marks = top.activeMarks;\n            for (let i = 0; i < node.marks.length; i++)\n                if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n                    marks = node.marks[i].addToSet(marks);\n            top.content.push(node.mark(marks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, preserveWS) {\n        let ok = this.findPlace(type.create(attrs));\n        if (ok)\n            this.enterInner(type, attrs, true, preserveWS);\n        return ok;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs = null, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.applyPending(type);\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n        this.open++;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n    addPendingMark(mark) {\n        let found = findSameMarkInSet(mark, this.top.pendingMarks);\n        if (found)\n            this.top.stashMarks.push(found);\n        this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n    removePendingMark(mark, upto) {\n        for (let depth = this.open; depth >= 0; depth--) {\n            let level = this.nodes[depth];\n            let found = level.pendingMarks.lastIndexOf(mark);\n            if (found > -1) {\n                level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n            }\n            else {\n                level.activeMarks = mark.removeFromSet(level.activeMarks);\n                let stashMark = level.popFromStashMark(mark);\n                if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n                    level.activeMarks = stashMark.addToSet(level.activeMarks);\n            }\n            if (level == upto)\n                break;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n    let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n    while (m = re.exec(style))\n        result.push(m[1], m[2].trim());\n    return result;\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\nfunction findSameMarkInSet(mark, set) {\n    for (let i = 0; i < set.length; i++) {\n        if (mark.eq(set[i]))\n            return set[i];\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n    /**\n    Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If\n    the spec has a hole (zero) in it, `contentDOM` will point at the\n    node with the hole.\n    */\n    static renderSpec(doc, structure, xmlNS = null) {\n        if (typeof structure == \"string\")\n            return { dom: doc.createTextNode(structure) };\n        if (structure.nodeType != null)\n            return { dom: structure };\n        if (structure.dom && structure.dom.nodeType != null)\n            return structure;\n        let tagName = structure[0], space = tagName.indexOf(\" \");\n        if (space > 0) {\n            xmlNS = tagName.slice(0, space);\n            tagName = tagName.slice(space + 1);\n        }\n        let contentDOM;\n        let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n        let attrs = structure[1], start = 1;\n        if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n            start = 2;\n            for (let name in attrs)\n                if (attrs[name] != null) {\n                    let space = name.indexOf(\" \");\n                    if (space > 0)\n                        dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                    else\n                        dom.setAttribute(name, attrs[name]);\n                }\n        }\n        for (let i = start; i < structure.length; i++) {\n            let child = structure[i];\n            if (child === 0) {\n                if (i < structure.length - 1 || i > start)\n                    throw new RangeError(\"Content hole must be the only child of its parent node\");\n                return { dom, contentDOM: dom };\n            }\n            else {\n                let { dom: inner, contentDOM: innerContent } = DOMSerializer.renderSpec(doc, child, xmlNS);\n                dom.appendChild(inner);\n                if (innerContent) {\n                    if (contentDOM)\n                        throw new RangeError(\"Multiple content holes\");\n                    contentDOM = innerContent;\n                }\n            }\n        }\n        return { dom, contentDOM };\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n", "import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n\u2018[rebasing](/docs/guide/#transform.rebasing)\u2019 steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`\u2014the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = this.from == this.gapFrom ? from.pos : mapping.map(this.gapFrom, -1);\n        let gapTo = this.to == this.gapTo ? to.pos : mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch, clearNewlines = true) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (clearNewlines && child.isText && parentType.whitespace != \"pre\") {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            let convertNewlines = null;\n            if (type.schema.linebreakReplacement) {\n                let pre = type.whitespace == \"pre\", supportLinebreak = !!type.contentMatch.matchType(type.schema.linebreakReplacement);\n                if (pre && !supportLinebreak)\n                    convertNewlines = false;\n                else if (!pre && supportLinebreak)\n                    convertNewlines = true;\n            }\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            if (convertNewlines === false)\n                replaceLinebreaks(tr, node, pos, mapFrom);\n            clearIncompatible(tr, tr.mapping.slice(mapFrom).map(pos, 1), type, undefined, convertNewlines === null);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            if (convertNewlines === true)\n                replaceNewlines(tr, node, pos, mapFrom);\n            return false;\n        }\n    });\n}\nfunction replaceNewlines(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.isText) {\n            let m, newline = /\\r?\\n|\\r/g;\n            while (m = newline.exec(child.text)) {\n                let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset + m.index);\n                tr.replaceWith(start, start + 1, node.type.schema.linebreakReplacement.create());\n            }\n        }\n    });\n}\nfunction replaceLinebreaks(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.type == child.type.schema.linebreakReplacement) {\n            let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset);\n            tr.replaceWith(start, start + 1, node.type.schema.text(\"\\n\"));\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n\u2018Fit\u2019 a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n", "import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure\u2014it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n", "import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop)\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outside = -1;\n    for (let cur = node;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.node.isBlock && desc.parent) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (rect.left > coords.left || rect.top > coords.top)\n                outside = desc.posBefore;\n            else if (rect.right < coords.left || rect.bottom < coords.top)\n                outside = desc.posAfter;\n            else\n                break;\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outside > -1 ? outside : view.docView.posFromDOM(node, offset, 1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(coords.left, coords.top);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        catch (_) { }\n    }\n    if (!node && doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(coords.left, coords.top);\n        if (range)\n            ({ startContainer: node, startOffset: offset } = range);\n    }\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    return !rects.length ? target.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), 1), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    // Scan up the dom finding the first desc that is a descendant of\n    // this one.\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM || undefined };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n        if (contentDOM)\n            this.updateChildren(view, pos);\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelectionRange();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    return new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                if (this.top.children[i].matchesMark(marks[depth])) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos));\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let widget = locals[decoIndex++], widgets;\n            while (decoIndex < locals.length && locals[decoIndex].to == offset)\n                (widgets || (widgets = [widget])).push(locals[decoIndex++]);\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (!sel.empty || mods.indexOf(\"s\") > -1) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\");\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset]))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction setSelFocus(view, node, offset) {\n    let sel = view.domSelection();\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 46 || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0 && dom.firstChild; i--)\n            dom = dom.firstChild;\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        view.domSelection().collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API\u2014all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, event) {\n    let slice = parseFromClipboard(view, text, html, view.input.shiftKey, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, view.input.shiftKey)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move) {\n        this.slice = slice;\n        this.move = move;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)));\n    }\n    let slice = view.state.selection.content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier]);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice); });\n    }\n    else {\n        slice = parseFromClipboard(view, event.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move)\n        tr.deleteSelection();\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants\u2014see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure\u2014it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Needs access to the current document to\n    create the appropriate tree structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members);\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (newStart >= offset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.observer ? this.observer.takeRecords() : [];\n        if (this.queue.length) {\n            mutations = this.queue.concat(mutations);\n            this.queue.length = 0;\n        }\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            view.input.lastTouch < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it\u2014using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection))\n                    view.dispatch(view.state.tr.setSelection(sel));\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes\u2014for example when interpreting an event\n    target\u2014you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom\n            ? safariShadowSelectionRange(this) : this.domSelection();\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    attrs.translate = \"no\";\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                if (attr == \"style\") {\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                }\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n", "export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`\u2014a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n", "import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it\u2014if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                    : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.parent.isBlock)\n            return false;\n        if (dispatch) {\n            let atEnd = $to.parentOffset == $to.parent.content.size;\n            let tr = state.tr;\n            if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n                tr.deleteSelection();\n            let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n            let splitType = splitNode && splitNode($to.parent, atEnd);\n            let types = splitType ? [splitType] : atEnd && deflt ? [{ type: deflt }] : undefined;\n            let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n            if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n                if (deflt)\n                    types = [{ type: deflt }];\n                can = true;\n            }\n            if (can) {\n                tr.split(tr.mapping.map($from.pos), 1, types);\n                if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                    let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                    if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    if (before.type.spec.isolating || after.type.spec.isolating)\n        return false;\n    if (joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, node => {\n            if (can)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null) {\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let has = false, tr = state.tr;\n                for (let i = 0; !has && i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (has) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n", "import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1 } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), doJoin = false, outerRange = range;\n        if (!range)\n            return false;\n        // This is at the top of an existing list item\n        if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n            // Don't do anything if this is the top of the list\n            if ($from.index(range.depth - 1) == 0)\n                return false;\n            let $insert = state.doc.resolve(range.start - 2);\n            outerRange = new NodeRange($insert, $insert, range.depth);\n            if (range.endIndex < range.parent.childCount)\n                range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth);\n            doJoin = true;\n        }\n        let wrap = findWrapping(outerRange, listType, attrs, range);\n        if (!wrap)\n            return false;\n        if (dispatch)\n            dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView());\n        return true;\n    };\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\n/**\n * Takes a Transaction & Editor State and turns it into a chainable state object\n * @param config The transaction and state to create the chainable state from\n * @returns A chainable Editor state object\n */\nexport function createChainableState(config: {\n  transaction: Transaction\n  state: EditorState\n}): EditorState {\n  const { state, transaction } = config\n  let { selection } = transaction\n  let { doc } = transaction\n  let { storedMarks } = transaction\n\n  return {\n    ...state,\n    apply: state.apply.bind(state),\n    applyTransaction: state.applyTransaction.bind(state),\n    plugins: state.plugins,\n    schema: state.schema,\n    reconfigure: state.reconfigure.bind(state),\n    toJSON: state.toJSON.bind(state),\n    get storedMarks() {\n      return storedMarks\n    },\n    get selection() {\n      return selection\n    },\n    get doc() {\n      return doc\n    },\n    get tr() {\n      selection = transaction.selection\n      doc = transaction.doc\n      storedMarks = transaction.storedMarks\n\n      return transaction\n    },\n  }\n}\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport {\n  AnyCommands, CanCommands, ChainedCommands, CommandProps, SingleCommands,\n} from './types.js'\n\nexport class CommandManager {\n  editor: Editor\n\n  rawCommands: AnyCommands\n\n  customState?: EditorState\n\n  constructor(props: { editor: Editor; state?: EditorState }) {\n    this.editor = props.editor\n    this.rawCommands = this.editor.extensionManager.commands\n    this.customState = props.state\n  }\n\n  get hasCustomState(): boolean {\n    return !!this.customState\n  }\n\n  get state(): EditorState {\n    return this.customState || this.editor.state\n  }\n\n  get commands(): SingleCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const { tr } = state\n    const props = this.buildProps(tr)\n\n    return Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        const method = (...args: any[]) => {\n          const callback = command(...args)(props)\n\n          if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n            view.dispatch(tr)\n          }\n\n          return callback\n        }\n\n        return [name, method]\n      }),\n    ) as unknown as SingleCommands\n  }\n\n  get chain(): () => ChainedCommands {\n    return () => this.createChain()\n  }\n\n  get can(): () => CanCommands {\n    return () => this.createCan()\n  }\n\n  public createChain(startTr?: Transaction, shouldDispatch = true): ChainedCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const callbacks: boolean[] = []\n    const hasStartTransaction = !!startTr\n    const tr = startTr || state.tr\n\n    const run = () => {\n      if (\n        !hasStartTransaction\n        && shouldDispatch\n        && !tr.getMeta('preventDispatch')\n        && !this.hasCustomState\n      ) {\n        view.dispatch(tr)\n      }\n\n      return callbacks.every(callback => callback === true)\n    }\n\n    const chain = {\n      ...Object.fromEntries(\n        Object.entries(rawCommands).map(([name, command]) => {\n          const chainedCommand = (...args: never[]) => {\n            const props = this.buildProps(tr, shouldDispatch)\n            const callback = command(...args)(props)\n\n            callbacks.push(callback)\n\n            return chain\n          }\n\n          return [name, chainedCommand]\n        }),\n      ),\n      run,\n    } as unknown as ChainedCommands\n\n    return chain\n  }\n\n  public createCan(startTr?: Transaction): CanCommands {\n    const { rawCommands, state } = this\n    const dispatch = false\n    const tr = startTr || state.tr\n    const props = this.buildProps(tr, dispatch)\n    const formattedCommands = Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        return [name, (...args: never[]) => command(...args)({ ...props, dispatch: undefined })]\n      }),\n    ) as unknown as SingleCommands\n\n    return {\n      ...formattedCommands,\n      chain: () => this.createChain(tr, dispatch),\n    } as CanCommands\n  }\n\n  public buildProps(tr: Transaction, shouldDispatch = true): CommandProps {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n\n    const props: CommandProps = {\n      tr,\n      editor,\n      view,\n      state: createChainableState({\n        state,\n        transaction: tr,\n      }),\n      dispatch: shouldDispatch ? () => undefined : undefined,\n      chain: () => this.createChain(tr, shouldDispatch),\n      can: () => this.createCan(tr),\n      get commands() {\n        return Object.fromEntries(\n          Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args: never[]) => command(...args)(props)]\n          }),\n        ) as unknown as SingleCommands\n      },\n    }\n\n    return props\n  }\n}\n", "type StringKeyOf<T> = Extract<keyof T, string>\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]]\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = (...props: CallbackType<T, EventName>) => any\n\nexport class EventEmitter<T extends Record<string, any>> {\n\n  private callbacks: { [key: string]: Function[] } = {}\n\n  public on<EventName extends StringKeyOf<T>>(event: EventName, fn: CallbackFunction<T, EventName>): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit<EventName extends StringKeyOf<T>>(event: EventName, ...args: CallbackType<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off<EventName extends StringKeyOf<T>>(event: EventName, fn?: CallbackFunction<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  protected removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n", "import { AnyExtension, MaybeThisParameterType, RemoveThis } from '../types.js'\n\n/**\n * Returns a field from an extension\n * @param extension The Tiptap extension\n * @param field The field, for example `renderHTML` or `priority`\n * @param context The context object that should be passed as `this` into the function\n * @returns The field value\n */\nexport function getExtensionField<T = any>(\n  extension: AnyExtension,\n  field: string,\n  context?: Omit<MaybeThisParameterType<T>, 'parent'>,\n): RemoveThis<T> {\n\n  if (extension.config[field] === undefined && extension.parent) {\n    return getExtensionField(extension.parent, field, context)\n  }\n\n  if (typeof extension.config[field] === 'function') {\n    const value = extension.config[field].bind({\n      ...context,\n      parent: extension.parent\n        ? getExtensionField(extension.parent, field, context)\n        : null,\n    })\n\n    return value\n  }\n\n  return extension.config[field]\n}\n", "import { Extension } from '../Extension.js'\nimport { Mark } from '../Mark.js'\nimport { Node } from '../Node.js'\nimport { Extensions } from '../types.js'\n\nexport function splitExtensions(extensions: Extensions) {\n  const baseExtensions = extensions.filter(extension => extension.type === 'extension') as Extension[]\n  const nodeExtensions = extensions.filter(extension => extension.type === 'node') as Node[]\n  const markExtensions = extensions.filter(extension => extension.type === 'mark') as Mark[]\n\n  return {\n    baseExtensions,\n    nodeExtensions,\n    markExtensions,\n  }\n}\n", "import { MarkConfig, NodeConfig } from '../index.js'\nimport {\n  AnyConfig,\n  Attribute,\n  Attributes,\n  ExtensionAttribute,\n  Extensions,\n  GlobalAttributes,\n} from '../types.js'\nimport { getExtensionField } from './getExtensionField.js'\nimport { splitExtensions } from './splitExtensions.js'\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nexport function getAttributesFromExtensions(extensions: Extensions): ExtensionAttribute[] {\n  const extensionAttributes: ExtensionAttribute[] = []\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions]\n  const defaultAttribute: Required<Attribute> = {\n    default: null,\n    rendered: true,\n    renderHTML: null,\n    parseHTML: null,\n    keepOnSplit: true,\n    isRequired: false,\n  }\n\n  extensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addGlobalAttributes = getExtensionField<AnyConfig['addGlobalAttributes']>(\n      extension,\n      'addGlobalAttributes',\n      context,\n    )\n\n    if (!addGlobalAttributes) {\n      return\n    }\n\n    // TODO: remove `as GlobalAttributes`\n    const globalAttributes = addGlobalAttributes() as GlobalAttributes\n\n    globalAttributes.forEach(globalAttribute => {\n      globalAttribute.types.forEach(type => {\n        Object\n          .entries(globalAttribute.attributes)\n          .forEach(([name, attribute]) => {\n            extensionAttributes.push({\n              type,\n              name,\n              attribute: {\n                ...defaultAttribute,\n                ...attribute,\n              },\n            })\n          })\n      })\n    })\n  })\n\n  nodeAndMarkExtensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addAttributes = getExtensionField<NodeConfig['addAttributes'] | MarkConfig['addAttributes']>(\n      extension,\n      'addAttributes',\n      context,\n    )\n\n    if (!addAttributes) {\n      return\n    }\n\n    // TODO: remove `as Attributes`\n    const attributes = addAttributes() as Attributes\n\n    Object\n      .entries(attributes)\n      .forEach(([name, attribute]) => {\n        const mergedAttr = {\n          ...defaultAttribute,\n          ...attribute,\n        }\n\n        if (typeof mergedAttr?.default === 'function') {\n          mergedAttr.default = mergedAttr.default()\n        }\n\n        if (mergedAttr?.isRequired && mergedAttr?.default === undefined) {\n          delete mergedAttr.default\n        }\n\n        extensionAttributes.push({\n          type: extension.name,\n          name,\n          attribute: mergedAttr,\n        })\n      })\n  })\n\n  return extensionAttributes\n}\n", "import { NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getNodeType(nameOrType: string | NodeType, schema: Schema): NodeType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.nodes[nameOrType]) {\n      throw Error(\n        `There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.nodes[nameOrType]\n  }\n\n  return nameOrType\n}\n", "export function mergeAttributes(...objects: Record<string, any>[]): Record<string, any> {\n  return objects\n    .filter(item => !!item)\n    .reduce((items, item) => {\n      const mergedAttributes = { ...items }\n\n      Object.entries(item).forEach(([key, value]) => {\n        const exists = mergedAttributes[key]\n\n        if (!exists) {\n          mergedAttributes[key] = value\n\n          return\n        }\n\n        if (key === 'class') {\n          const valueClasses: string[] = value ? value.split(' ') : []\n          const existingClasses: string[] = mergedAttributes[key] ? mergedAttributes[key].split(' ') : []\n\n          const insertClasses = valueClasses.filter(\n            valueClass => !existingClasses.includes(valueClass),\n          )\n\n          mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ')\n        } else if (key === 'style') {\n          mergedAttributes[key] = [mergedAttributes[key], value].join('; ')\n        } else {\n          mergedAttributes[key] = value\n        }\n      })\n\n      return mergedAttributes\n    }, {})\n}\n", "import { Mark, Node } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types.js'\nimport { mergeAttributes } from '../utilities/mergeAttributes.js'\n\nexport function getRenderedAttributes(\n  nodeOrMark: Node | Mark,\n  extensionAttributes: ExtensionAttribute[],\n): Record<string, any> {\n  return extensionAttributes\n    .filter(item => item.attribute.rendered)\n    .map(item => {\n      if (!item.attribute.renderHTML) {\n        return {\n          [item.name]: nodeOrMark.attrs[item.name],\n        }\n      }\n\n      return item.attribute.renderHTML(nodeOrMark.attrs) || {}\n    })\n    .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {})\n}\n", "export function isFunction(value: any): value is Function {\n  return typeof value === 'function'\n}\n", "import { MaybeReturnType } from '../types.js'\nimport { isFunction } from './isFunction.js'\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nexport function callOrReturn<T>(value: T, context: any = undefined, ...props: any[]): MaybeReturnType<T> {\n  if (isFunction(value)) {\n    if (context) {\n      return value.bind(context)(...props)\n    }\n\n    return value(...props)\n  }\n\n  return value as MaybeReturnType<T>\n}\n", "export function isEmptyObject(value = {}): boolean {\n  return Object.keys(value).length === 0 && value.constructor === Object\n}\n", "export function fromString(value: any): any {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n    return Number(value)\n  }\n\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n", "import { ParseRule } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types.js'\nimport { fromString } from '../utilities/fromString.js'\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nexport function injectExtensionAttributesToParseRule(\n  parseRule: ParseRule,\n  extensionAttributes: ExtensionAttribute[],\n): ParseRule {\n  if (parseRule.style) {\n    return parseRule\n  }\n\n  return {\n    ...parseRule,\n    getAttrs: node => {\n      const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs\n\n      if (oldAttributes === false) {\n        return false\n      }\n\n      const newAttributes = extensionAttributes.reduce((items, item) => {\n        const value = item.attribute.parseHTML\n          ? item.attribute.parseHTML(node as HTMLElement)\n          : fromString((node as HTMLElement).getAttribute(item.name))\n\n        if (value === null || value === undefined) {\n          return items\n        }\n\n        return {\n          ...items,\n          [item.name]: value,\n        }\n      }, {})\n\n      return { ...oldAttributes, ...newAttributes }\n    },\n  }\n}\n", "import { MarkSpec, NodeSpec, Schema } from '@tiptap/pm/model'\n\nimport { Editor, MarkConfig, NodeConfig } from '../index.js'\nimport { AnyConfig, Extensions } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\nimport { isEmptyObject } from '../utilities/isEmptyObject.js'\nimport { getAttributesFromExtensions } from './getAttributesFromExtensions.js'\nimport { getExtensionField } from './getExtensionField.js'\nimport { getRenderedAttributes } from './getRenderedAttributes.js'\nimport { injectExtensionAttributesToParseRule } from './injectExtensionAttributesToParseRule.js'\nimport { splitExtensions } from './splitExtensions.js'\n\nfunction cleanUpSchemaItem<T>(data: T) {\n  return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n      if (key === 'attrs' && isEmptyObject(value as {} | undefined)) {\n        return false\n      }\n\n      return value !== null && value !== undefined\n    }),\n  ) as T\n}\n\n/**\n * Creates a new Prosemirror schema based on the given extensions.\n * @param extensions An array of Tiptap extensions\n * @param editor The editor instance\n * @returns A Prosemirror schema\n */\nexport function getSchemaByResolvedExtensions(extensions: Extensions, editor?: Editor): Schema {\n  const allAttributes = getAttributesFromExtensions(extensions)\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const topNode = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))?.name\n\n  const nodes = Object.fromEntries(\n    nodeExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraNodeFields = extensions.reduce((fields, e) => {\n        const extendNodeSchema = getExtensionField<AnyConfig['extendNodeSchema']>(\n          e,\n          'extendNodeSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: NodeSpec = cleanUpSchemaItem({\n        ...extraNodeFields,\n        content: callOrReturn(\n          getExtensionField<NodeConfig['content']>(extension, 'content', context),\n        ),\n        marks: callOrReturn(getExtensionField<NodeConfig['marks']>(extension, 'marks', context)),\n        group: callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context)),\n        inline: callOrReturn(getExtensionField<NodeConfig['inline']>(extension, 'inline', context)),\n        atom: callOrReturn(getExtensionField<NodeConfig['atom']>(extension, 'atom', context)),\n        selectable: callOrReturn(\n          getExtensionField<NodeConfig['selectable']>(extension, 'selectable', context),\n        ),\n        draggable: callOrReturn(\n          getExtensionField<NodeConfig['draggable']>(extension, 'draggable', context),\n        ),\n        code: callOrReturn(getExtensionField<NodeConfig['code']>(extension, 'code', context)),\n        defining: callOrReturn(\n          getExtensionField<NodeConfig['defining']>(extension, 'defining', context),\n        ),\n        isolating: callOrReturn(\n          getExtensionField<NodeConfig['isolating']>(extension, 'isolating', context),\n        ),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<NodeConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<NodeConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = node => renderHTML({\n          node,\n          HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n        })\n      }\n\n      const renderText = getExtensionField<NodeConfig['renderText']>(\n        extension,\n        'renderText',\n        context,\n      )\n\n      if (renderText) {\n        schema.toText = renderText\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  const marks = Object.fromEntries(\n    markExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraMarkFields = extensions.reduce((fields, e) => {\n        const extendMarkSchema = getExtensionField<AnyConfig['extendMarkSchema']>(\n          e,\n          'extendMarkSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: MarkSpec = cleanUpSchemaItem({\n        ...extraMarkFields,\n        inclusive: callOrReturn(\n          getExtensionField<MarkConfig['inclusive']>(extension, 'inclusive', context),\n        ),\n        excludes: callOrReturn(\n          getExtensionField<MarkConfig['excludes']>(extension, 'excludes', context),\n        ),\n        group: callOrReturn(getExtensionField<MarkConfig['group']>(extension, 'group', context)),\n        spanning: callOrReturn(\n          getExtensionField<MarkConfig['spanning']>(extension, 'spanning', context),\n        ),\n        code: callOrReturn(getExtensionField<MarkConfig['code']>(extension, 'code', context)),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<MarkConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<MarkConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = mark => renderHTML({\n          mark,\n          HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n        })\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  return new Schema({\n    topNode,\n    nodes,\n    marks,\n  })\n}\n", "import { MarkType, NodeType, Schema } from '@tiptap/pm/model'\n\n/**\n * Tries to get a node or mark type by its name.\n * @param name The name of the node or mark type\n * @param schema The Prosemiror schema to search in\n * @returns The node or mark type, or null if it doesn't exist\n */\nexport function getSchemaTypeByName(name: string, schema: Schema): NodeType | MarkType | null {\n  return schema.nodes[name] || schema.marks[name] || null\n}\n", "import { AnyExtension, EnableRules } from '../types.js'\n\nexport function isExtensionRulesEnabled(extension: AnyExtension, enabled: EnableRules): boolean {\n  if (Array.isArray(enabled)) {\n    return enabled.some(enabledExtension => {\n      const name = typeof enabledExtension === 'string'\n        ? enabledExtension\n        : enabledExtension.name\n\n      return name === extension.name\n    })\n  }\n\n  return enabled\n}\n", "import { ResolvedPos } from '@tiptap/pm/model'\n\n/**\n * Returns the text content of a resolved prosemirror position\n * @param $from The resolved position to get the text content from\n * @param maxMatch The maximum number of characters to match\n * @returns The text content\n */\nexport const getTextContentFromNodes = ($from: ResolvedPos, maxMatch = 500) => {\n  let textBefore = ''\n\n  const sliceEndPos = $from.parentOffset\n\n  $from.parent.nodesBetween(\n    Math.max(0, sliceEndPos - maxMatch),\n    sliceEndPos,\n    (node, pos, parent, index) => {\n      const chunk = node.type.spec.toText?.({\n        node,\n        pos,\n        parent,\n        index,\n      })\n        || node.textContent\n        || '%leaf%'\n\n      textBefore += chunk.slice(0, Math.max(0, sliceEndPos - pos))\n    },\n  )\n\n  return textBefore\n}\n", "export function isRegExp(value: any): value is RegExp {\n  return Object.prototype.toString.call(value) === '[object RegExp]'\n}\n", "import { EditorState, Plugin, TextSelection } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager.js'\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport { getTextContentFromNodes } from './helpers/getTextContentFromNodes.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types.js'\nimport { isRegExp } from './utilities/isRegExp.js'\n\nexport type InputRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type InputRuleFinder = RegExp | ((text: string) => InputRuleMatch | null)\n\nexport class InputRule {\n  find: InputRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n  }) => void | null\n\n  constructor(config: {\n    find: InputRuleFinder\n    handler: (props: {\n      state: EditorState\n      range: Range\n      match: ExtendedRegExpMatchArray\n      commands: SingleCommands\n      chain: () => ChainedCommands\n      can: () => CanCommands\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst inputRuleMatcherHandler = (\n  text: string,\n  find: InputRuleFinder,\n): ExtendedRegExpMatchArray | null => {\n  if (isRegExp(find)) {\n    return find.exec(text)\n  }\n\n  const inputRuleMatch = find(text)\n\n  if (!inputRuleMatch) {\n    return null\n  }\n\n  const result: ExtendedRegExpMatchArray = [inputRuleMatch.text]\n\n  result.index = inputRuleMatch.index\n  result.input = text\n  result.data = inputRuleMatch.data\n\n  if (inputRuleMatch.replaceWith) {\n    if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n      console.warn(\n        '[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".',\n      )\n    }\n\n    result.push(inputRuleMatch.replaceWith)\n  }\n\n  return result\n}\n\nfunction run(config: {\n  editor: Editor\n  from: number\n  to: number\n  text: string\n  rules: InputRule[]\n  plugin: Plugin\n}): boolean {\n  const {\n    editor, from, to, text, rules, plugin,\n  } = config\n  const { view } = editor\n\n  if (view.composing) {\n    return false\n  }\n\n  const $from = view.state.doc.resolve(from)\n\n  if (\n    // check for code node\n    $from.parent.type.spec.code\n    // check for code mark\n    || !!($from.nodeBefore || $from.nodeAfter)?.marks.find(mark => mark.type.spec.code)\n  ) {\n    return false\n  }\n\n  let matched = false\n\n  const textBefore = getTextContentFromNodes($from) + text\n\n  rules.forEach(rule => {\n    if (matched) {\n      return\n    }\n\n    const match = inputRuleMatcherHandler(textBefore, rule.find)\n\n    if (!match) {\n      return\n    }\n\n    const tr = view.state.tr\n    const state = createChainableState({\n      state: view.state,\n      transaction: tr,\n    })\n    const range = {\n      from: from - (match[0].length - text.length),\n      to,\n    }\n\n    const { commands, chain, can } = new CommandManager({\n      editor,\n      state,\n    })\n\n    const handler = rule.handler({\n      state,\n      range,\n      match,\n      commands,\n      chain,\n      can,\n    })\n\n    // stop if there are no changes\n    if (handler === null || !tr.steps.length) {\n      return\n    }\n\n    // store transform as meta data\n    // so we can undo input rules within the `undoInputRules` command\n    tr.setMeta(plugin, {\n      transform: tr,\n      from,\n      to,\n      text,\n    })\n\n    view.dispatch(tr)\n    matched = true\n  })\n\n  return matched\n}\n\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule’s\n * action.\n */\nexport function inputRulesPlugin(props: { editor: Editor; rules: InputRule[] }): Plugin {\n  const { editor, rules } = props\n  const plugin = new Plugin({\n    state: {\n      init() {\n        return null\n      },\n      apply(tr, prev) {\n        const stored = tr.getMeta(plugin)\n\n        if (stored) {\n          return stored\n        }\n\n        // if InputRule is triggered by insertContent()\n        const simulatedInputMeta = tr.getMeta('applyInputRules')\n        const isSimulatedInput = !!simulatedInputMeta\n\n        if (isSimulatedInput) {\n          setTimeout(() => {\n            const { from, text } = simulatedInputMeta\n            const to = from + text.length\n\n            run({\n              editor,\n              from,\n              to,\n              text,\n              rules,\n              plugin,\n            })\n          })\n        }\n\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run({\n          editor,\n          from,\n          to,\n          text,\n          rules,\n          plugin,\n        })\n      },\n\n      handleDOMEvents: {\n        compositionend: view => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n\n            if ($cursor) {\n              run({\n                editor,\n                from: $cursor.pos,\n                to: $cursor.pos,\n                text: '',\n                rules,\n                plugin,\n              })\n            }\n          })\n\n          return false\n        },\n      },\n\n      // add support for input rules to trigger on enter\n      // this is useful for example for code blocks\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter') {\n          return false\n        }\n\n        const { $cursor } = view.state.selection as TextSelection\n\n        if ($cursor) {\n          return run({\n            editor,\n            from: $cursor.pos,\n            to: $cursor.pos,\n            text: '\\n',\n            rules,\n            plugin,\n          })\n        }\n\n        return false\n      },\n    },\n\n    // @ts-ignore\n    isInputRules: true,\n  }) as Plugin\n\n  return plugin\n}\n", "export function isNumber(value: any): value is number {\n  return typeof value === 'number'\n}\n", "import { EditorState, Plugin } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager.js'\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types.js'\nimport { isNumber } from './utilities/isNumber.js'\nimport { isRegExp } from './utilities/isRegExp.js'\n\nexport type PasteRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type PasteRuleFinder = RegExp | ((text: string, event?: ClipboardEvent | null) => PasteRuleMatch[] | null | undefined)\n\n/**\n * Paste rules are used to react to pasted content.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport class PasteRule {\n  find: PasteRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n    pasteEvent: ClipboardEvent | null\n    dropEvent: DragEvent | null\n  }) => void | null\n\n  constructor(config: {\n    find: PasteRuleFinder\n    handler: (props: {\n      can: () => CanCommands\n      chain: () => ChainedCommands\n      commands: SingleCommands\n      dropEvent: DragEvent | null\n      match: ExtendedRegExpMatchArray\n      pasteEvent: ClipboardEvent | null\n      range: Range\n      state: EditorState\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst pasteRuleMatcherHandler = (\n  text: string,\n  find: PasteRuleFinder,\n  event?: ClipboardEvent | null,\n): ExtendedRegExpMatchArray[] => {\n  if (isRegExp(find)) {\n    return [...text.matchAll(find)]\n  }\n\n  const matches = find(text, event)\n\n  if (!matches) {\n    return []\n  }\n\n  return matches.map(pasteRuleMatch => {\n    const result: ExtendedRegExpMatchArray = [pasteRuleMatch.text]\n\n    result.index = pasteRuleMatch.index\n    result.input = text\n    result.data = pasteRuleMatch.data\n\n    if (pasteRuleMatch.replaceWith) {\n      if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n        console.warn(\n          '[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".',\n        )\n      }\n\n      result.push(pasteRuleMatch.replaceWith)\n    }\n\n    return result\n  })\n}\n\nfunction run(config: {\n  editor: Editor\n  state: EditorState\n  from: number\n  to: number\n  rule: PasteRule\n  pasteEvent: ClipboardEvent | null\n  dropEvent: DragEvent | null\n}): boolean {\n  const {\n    editor, state, from, to, rule, pasteEvent, dropEvent,\n  } = config\n\n  const { commands, chain, can } = new CommandManager({\n    editor,\n    state,\n  })\n\n  const handlers: (void | null)[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isTextblock || node.type.spec.code) {\n      return\n    }\n\n    const resolvedFrom = Math.max(from, pos)\n    const resolvedTo = Math.min(to, pos + node.content.size)\n    const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc')\n\n    const matches = pasteRuleMatcherHandler(textToMatch, rule.find, pasteEvent)\n\n    matches.forEach(match => {\n      if (match.index === undefined) {\n        return\n      }\n\n      const start = resolvedFrom + match.index + 1\n      const end = start + match[0].length\n      const range = {\n        from: state.tr.mapping.map(start),\n        to: state.tr.mapping.map(end),\n      }\n\n      const handler = rule.handler({\n        state,\n        range,\n        match,\n        commands,\n        chain,\n        can,\n        pasteEvent,\n        dropEvent,\n      })\n\n      handlers.push(handler)\n    })\n  })\n\n  const success = handlers.every(handler => handler !== null)\n\n  return success\n}\n\nconst createClipboardPasteEvent = (text: string) => {\n  const event = new ClipboardEvent('paste', {\n    clipboardData: new DataTransfer(),\n  })\n\n  event.clipboardData?.setData('text/html', text)\n\n  return event\n}\n\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule’s\n * action.\n */\nexport function pasteRulesPlugin(props: { editor: Editor; rules: PasteRule[] }): Plugin[] {\n  const { editor, rules } = props\n  let dragSourceElement: Element | null = null\n  let isPastedFromProseMirror = false\n  let isDroppedFromProseMirror = false\n  let pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null\n  let dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null\n\n  const processEvent = ({\n    state,\n    from,\n    to,\n    rule,\n    pasteEvt,\n  }: {\n    state: EditorState\n    from: number\n    to: { b: number }\n    rule: PasteRule\n    pasteEvt: ClipboardEvent | null\n  }) => {\n    const tr = state.tr\n    const chainableState = createChainableState({\n      state,\n      transaction: tr,\n    })\n\n    const handler = run({\n      editor,\n      state: chainableState,\n      from: Math.max(from - 1, 0),\n      to: to.b - 1,\n      rule,\n      pasteEvent: pasteEvt,\n      dropEvent,\n    })\n\n    if (!handler || !tr.steps.length) {\n      return\n    }\n\n    dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null\n    pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null\n\n    return tr\n  }\n\n  const plugins = rules.map(rule => {\n    return new Plugin({\n      // we register a global drag handler to track the current drag source element\n      view(view) {\n        const handleDragstart = (event: DragEvent) => {\n          dragSourceElement = view.dom.parentElement?.contains(event.target as Element)\n            ? view.dom.parentElement\n            : null\n        }\n\n        window.addEventListener('dragstart', handleDragstart)\n\n        return {\n          destroy() {\n            window.removeEventListener('dragstart', handleDragstart)\n          },\n        }\n      },\n\n      props: {\n        handleDOMEvents: {\n          drop: (view, event: Event) => {\n            isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement\n            dropEvent = event as DragEvent\n\n            return false\n          },\n\n          paste: (_view, event: Event) => {\n            const html = (event as ClipboardEvent).clipboardData?.getData('text/html')\n\n            pasteEvent = event as ClipboardEvent\n\n            isPastedFromProseMirror = !!html?.includes('data-pm-slice')\n\n            return false\n          },\n        },\n      },\n\n      appendTransaction: (transactions, oldState, state) => {\n        const transaction = transactions[0]\n        const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror\n        const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror\n\n        // if PasteRule is triggered by insertContent()\n        const simulatedPasteMeta = transaction.getMeta('applyPasteRules')\n        const isSimulatedPaste = !!simulatedPasteMeta\n\n        if (!isPaste && !isDrop && !isSimulatedPaste) {\n          return\n        }\n\n        // Handle simulated paste\n        if (isSimulatedPaste) {\n          const { from, text } = simulatedPasteMeta\n          const to = from + text.length\n          const pasteEvt = createClipboardPasteEvent(text)\n\n          return processEvent({\n            rule,\n            state,\n            from,\n            to: { b: to },\n            pasteEvt,\n          })\n        }\n\n        // handle actual paste/drop\n        const from = oldState.doc.content.findDiffStart(state.doc.content)\n        const to = oldState.doc.content.findDiffEnd(state.doc.content)\n\n        // stop if there is no changed range\n        if (!isNumber(from) || !to || from === to.b) {\n          return\n        }\n\n        return processEvent({\n          rule,\n          state,\n          from,\n          to,\n          pasteEvt: pasteEvent,\n        })\n      },\n    })\n  })\n\n  return plugins\n}\n", "export function findDuplicates(items: any[]): any[] {\n  const filtered = items.filter((el, index) => items.indexOf(el) !== index)\n\n  return [...new Set(filtered)]\n}\n", "import { keymap } from '@tiptap/pm/keymap'\nimport { Node as ProsemirrorNode, Schema } from '@tiptap/pm/model'\nimport { Plugin } from '@tiptap/pm/state'\nimport { Decoration, EditorView } from '@tiptap/pm/view'\n\nimport { Editor } from './Editor.js'\nimport { getAttributesFromExtensions } from './helpers/getAttributesFromExtensions.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { getNodeType } from './helpers/getNodeType.js'\nimport { getRenderedAttributes } from './helpers/getRenderedAttributes.js'\nimport { getSchemaByResolvedExtensions } from './helpers/getSchemaByResolvedExtensions.js'\nimport { getSchemaTypeByName } from './helpers/getSchemaTypeByName.js'\nimport { isExtensionRulesEnabled } from './helpers/isExtensionRulesEnabled.js'\nimport { splitExtensions } from './helpers/splitExtensions.js'\nimport { Mark, NodeConfig } from './index.js'\nimport { InputRule, inputRulesPlugin } from './InputRule.js'\nimport { PasteRule, pasteRulesPlugin } from './PasteRule.js'\nimport { AnyConfig, Extensions, RawCommands } from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { findDuplicates } from './utilities/findDuplicates.js'\n\nexport class ExtensionManager {\n  editor: Editor\n\n  schema: Schema\n\n  extensions: Extensions\n\n  splittableMarks: string[] = []\n\n  constructor(extensions: Extensions, editor: Editor) {\n    this.editor = editor\n    this.extensions = ExtensionManager.resolve(extensions)\n    this.schema = getSchemaByResolvedExtensions(this.extensions, editor)\n    this.setupExtensions()\n  }\n\n  /**\n   * Returns a flattened and sorted extension list while\n   * also checking for duplicated extensions and warns the user.\n   * @param extensions An array of Tiptap extensions\n   * @returns An flattened and sorted array of Tiptap extensions\n   */\n  static resolve(extensions: Extensions): Extensions {\n    const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions))\n    const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name))\n\n    if (duplicatedNames.length) {\n      console.warn(\n        `[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n          .map(item => `'${item}'`)\n          .join(', ')}]. This can lead to issues.`,\n      )\n    }\n\n    return resolvedExtensions\n  }\n\n  /**\n   * Create a flattened array of extensions by traversing the `addExtensions` field.\n   * @param extensions An array of Tiptap extensions\n   * @returns A flattened array of Tiptap extensions\n   */\n  static flatten(extensions: Extensions): Extensions {\n    return (\n      extensions\n        .map(extension => {\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n          }\n\n          const addExtensions = getExtensionField<AnyConfig['addExtensions']>(\n            extension,\n            'addExtensions',\n            context,\n          )\n\n          if (addExtensions) {\n            return [extension, ...this.flatten(addExtensions())]\n          }\n\n          return extension\n        })\n        // `Infinity` will break TypeScript so we set a number that is probably high enough\n        .flat(10)\n    )\n  }\n\n  /**\n   * Sort extensions by priority.\n   * @param extensions An array of Tiptap extensions\n   * @returns A sorted array of Tiptap extensions by priority\n   */\n  static sort(extensions: Extensions): Extensions {\n    const defaultPriority = 100\n\n    return extensions.sort((a, b) => {\n      const priorityA = getExtensionField<AnyConfig['priority']>(a, 'priority') || defaultPriority\n      const priorityB = getExtensionField<AnyConfig['priority']>(b, 'priority') || defaultPriority\n\n      if (priorityA > priorityB) {\n        return -1\n      }\n\n      if (priorityA < priorityB) {\n        return 1\n      }\n\n      return 0\n    })\n  }\n\n  /**\n   * Get all commands from the extensions.\n   * @returns An object with all commands where the key is the command name and the value is the command function\n   */\n  get commands(): RawCommands {\n    return this.extensions.reduce((commands, extension) => {\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      const addCommands = getExtensionField<AnyConfig['addCommands']>(\n        extension,\n        'addCommands',\n        context,\n      )\n\n      if (!addCommands) {\n        return commands\n      }\n\n      return {\n        ...commands,\n        ...addCommands(),\n      }\n    }, {} as RawCommands)\n  }\n\n  /**\n   * Get all registered Prosemirror plugins from the extensions.\n   * @returns An array of Prosemirror plugins\n   */\n  get plugins(): Plugin[] {\n    const { editor } = this\n\n    // With ProseMirror, first plugins within an array are executed first.\n    // In Tiptap, we provide the ability to override plugins,\n    // so it feels more natural to run plugins at the end of an array first.\n    // That’s why we have to reverse the `extensions` array and sort again\n    // based on the `priority` option.\n    const extensions = ExtensionManager.sort([...this.extensions].reverse())\n\n    const inputRules: InputRule[] = []\n    const pasteRules: PasteRule[] = []\n\n    const allPlugins = extensions\n      .map(extension => {\n        const context = {\n          name: extension.name,\n          options: extension.options,\n          storage: extension.storage,\n          editor,\n          type: getSchemaTypeByName(extension.name, this.schema),\n        }\n\n        const plugins: Plugin[] = []\n\n        const addKeyboardShortcuts = getExtensionField<AnyConfig['addKeyboardShortcuts']>(\n          extension,\n          'addKeyboardShortcuts',\n          context,\n        )\n\n        let defaultBindings: Record<string, () => boolean> = {}\n\n        // bind exit handling\n        if (extension.type === 'mark' && extension.config.exitable) {\n          defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension as Mark })\n        }\n\n        if (addKeyboardShortcuts) {\n          const bindings = Object.fromEntries(\n            Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n              return [shortcut, () => method({ editor })]\n            }),\n          )\n\n          defaultBindings = { ...defaultBindings, ...bindings }\n        }\n\n        const keyMapPlugin = keymap(defaultBindings)\n\n        plugins.push(keyMapPlugin)\n\n        const addInputRules = getExtensionField<AnyConfig['addInputRules']>(\n          extension,\n          'addInputRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n          inputRules.push(...addInputRules())\n        }\n\n        const addPasteRules = getExtensionField<AnyConfig['addPasteRules']>(\n          extension,\n          'addPasteRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n          pasteRules.push(...addPasteRules())\n        }\n\n        const addProseMirrorPlugins = getExtensionField<AnyConfig['addProseMirrorPlugins']>(\n          extension,\n          'addProseMirrorPlugins',\n          context,\n        )\n\n        if (addProseMirrorPlugins) {\n          const proseMirrorPlugins = addProseMirrorPlugins()\n\n          plugins.push(...proseMirrorPlugins)\n        }\n\n        return plugins\n      })\n      .flat()\n\n    return [\n      inputRulesPlugin({\n        editor,\n        rules: inputRules,\n      }),\n      ...pasteRulesPlugin({\n        editor,\n        rules: pasteRules,\n      }),\n      ...allPlugins,\n    ]\n  }\n\n  /**\n   * Get all attributes from the extensions.\n   * @returns An array of attributes\n   */\n  get attributes() {\n    return getAttributesFromExtensions(this.extensions)\n  }\n\n  /**\n   * Get all node views from the extensions.\n   * @returns An object with all node views where the key is the node name and the value is the node view function\n   */\n  get nodeViews() {\n    const { editor } = this\n    const { nodeExtensions } = splitExtensions(this.extensions)\n\n    return Object.fromEntries(\n      nodeExtensions\n        .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n        .map(extension => {\n          const extensionAttributes = this.attributes.filter(\n            attribute => attribute.type === extension.name,\n          )\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n            type: getNodeType(extension.name, this.schema),\n          }\n          const addNodeView = getExtensionField<NodeConfig['addNodeView']>(\n            extension,\n            'addNodeView',\n            context,\n          )\n\n          if (!addNodeView) {\n            return []\n          }\n\n          const nodeview = (\n            node: ProsemirrorNode,\n            view: EditorView,\n            getPos: (() => number) | boolean,\n            decorations: Decoration[],\n          ) => {\n            const HTMLAttributes = getRenderedAttributes(node, extensionAttributes)\n\n            return addNodeView()({\n              editor,\n              node,\n              getPos,\n              decorations,\n              HTMLAttributes,\n              extension,\n            })\n          }\n\n          return [extension.name, nodeview]\n        }),\n    )\n  }\n\n  /**\n   * Go through all extensions, create extension storages & setup marks\n   * & bind editor event listener.\n   */\n  private setupExtensions() {\n    this.extensions.forEach(extension => {\n      // store extension storage in editor\n      this.editor.extensionStorage[extension.name] = extension.storage\n\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      if (extension.type === 'mark') {\n        const keepOnSplit = callOrReturn(getExtensionField(extension, 'keepOnSplit', context)) ?? true\n\n        if (keepOnSplit) {\n          this.splittableMarks.push(extension.name)\n        }\n      }\n\n      const onBeforeCreate = getExtensionField<AnyConfig['onBeforeCreate']>(\n        extension,\n        'onBeforeCreate',\n        context,\n      )\n      const onCreate = getExtensionField<AnyConfig['onCreate']>(extension, 'onCreate', context)\n      const onUpdate = getExtensionField<AnyConfig['onUpdate']>(extension, 'onUpdate', context)\n      const onSelectionUpdate = getExtensionField<AnyConfig['onSelectionUpdate']>(\n        extension,\n        'onSelectionUpdate',\n        context,\n      )\n      const onTransaction = getExtensionField<AnyConfig['onTransaction']>(\n        extension,\n        'onTransaction',\n        context,\n      )\n      const onFocus = getExtensionField<AnyConfig['onFocus']>(extension, 'onFocus', context)\n      const onBlur = getExtensionField<AnyConfig['onBlur']>(extension, 'onBlur', context)\n      const onDestroy = getExtensionField<AnyConfig['onDestroy']>(extension, 'onDestroy', context)\n\n      if (onBeforeCreate) {\n        this.editor.on('beforeCreate', onBeforeCreate)\n      }\n\n      if (onCreate) {\n        this.editor.on('create', onCreate)\n      }\n\n      if (onUpdate) {\n        this.editor.on('update', onUpdate)\n      }\n\n      if (onSelectionUpdate) {\n        this.editor.on('selectionUpdate', onSelectionUpdate)\n      }\n\n      if (onTransaction) {\n        this.editor.on('transaction', onTransaction)\n      }\n\n      if (onFocus) {\n        this.editor.on('focus', onFocus)\n      }\n\n      if (onBlur) {\n        this.editor.on('blur', onBlur)\n      }\n\n      if (onDestroy) {\n        this.editor.on('destroy', onDestroy)\n      }\n    })\n  }\n}\n", "// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\n\nfunction getType(value: any): string {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nexport function isPlainObject(value: any): value is Record<string, any> {\n  if (getType(value) !== 'Object') {\n    return false\n  }\n\n  return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype\n}\n", "import { isPlainObject } from './isPlainObject.js'\n\nexport function mergeDeep(target: Record<string, any>, source: Record<string, any>): Record<string, any> {\n  const output = { ...target }\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, { [key]: source[key] })\n        } else {\n          output[key] = mergeDeep(target[key], source[key])\n        }\n      } else {\n        Object.assign(output, { [key]: source[key] })\n      }\n    })\n  }\n\n  return output\n}\n", "import { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { ExtensionConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Mark } from './Mark.js'\nimport { Node } from './Node.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  interface ExtensionConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * The extension name - this must be unique.\n     * It will be used to identify the extension.\n     *\n     * @example 'myExtension'\n     */\n    name: string\n\n    /**\n     * The priority of your extension. The higher, the later it will be called\n     * and will take precedence over other extensions with a lower priority.\n     * @default 1000\n     * @example 1001\n     */\n    priority?: number\n\n    /**\n     * The default options for this extension.\n     * @example\n     * defaultOptions: {\n     *   myOption: 'foo',\n     *   myOtherOption: 10,\n     * }\n     */\n    defaultOptions?: Options\n\n    /**\n     * This method will add options to this extension\n     * @see https://tiptap.dev/guide/custom-extensions#settings\n     * @example\n     * addOptions() {\n     *  return {\n     *    myOption: 'foo',\n     *    myOtherOption: 10,\n     * }\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * The default storage this extension can save data to.\n     * @see https://tiptap.dev/guide/custom-extensions#storage\n     * @example\n     * defaultStorage: {\n     *   prefetchedUsers: [],\n     *   loading: false,\n     * }\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * This function adds globalAttributes to specific nodes.\n     * @see https://tiptap.dev/guide/custom-extensions#global-attributes\n     * @example\n     * addGlobalAttributes() {\n     *   return [\n     *     {\n             // Extend the following extensions\n     *       types: [\n     *         'heading',\n     *         'paragraph',\n     *       ],\n     *       // … with those attributes\n     *       attributes: {\n     *         textAlign: {\n     *           default: 'left',\n     *           renderHTML: attributes => ({\n     *             style: `text-align: ${attributes.textAlign}`,\n     *           }),\n     *           parseHTML: element => element.style.textAlign || 'left',\n     *         },\n     *       },\n     *     },\n     *   ]\n     * }\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * This function adds commands to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addCommands() {\n     *   return {\n     *     myCommand: () => ({ chain }) => chain().setMark('type', 'foo').run(),\n     *   }\n     * }\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * This function registers keyboard shortcuts.\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addKeyboardShortcuts() {\n     *   return {\n     *     'Mod-l': () => this.editor.commands.toggleBulletList(),\n     *   }\n     * },\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * This function adds input rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#input-rules\n     * @example\n     * addInputRules() {\n     *   return [\n     *     markInputRule({\n     *       find: inputRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * This function adds paste rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#paste-rules\n     * @example\n     * addPasteRules() {\n     *   return [\n     *     markPasteRule({\n     *       find: pasteRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * This function adds Prosemirror plugins to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#prosemirror-plugins\n     * @example\n     * addProseMirrorPlugins() {\n     *   return [\n     *     customPlugin(),\n     *   ]\n     * }\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * This function adds additional extensions to the editor. This is useful for\n     * building extension kits.\n     * @example\n     * addExtensions() {\n     *   return [\n     *     BulletList,\n     *     OrderedList,\n     *     ListItem\n     *   ]\n     * }\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * This function extends the schema of the node.\n     * @example\n     * extendNodeSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * This function extends the schema of the mark.\n     * @example\n     * extendMarkSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n  }\n}\n\n/**\n * The Extension class is the base class for all extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nexport class Extension<Options = any, Storage = any> {\n  type = 'extension'\n\n  name = 'extension'\n\n  parent: Extension | null = null\n\n  child: Extension | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: ExtensionConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<ExtensionConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<ExtensionConfig<O, S>> = {}) {\n    return new Extension<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.parent = this.parent\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<ExtensionConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Extension<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { Range, TextSerializer } from '../types.js'\n\n/**\n * Gets the text between two positions in a Prosemirror node\n * and serializes it using the given text serializers and block separator (see getText)\n * @param startNode The Prosemirror node to start from\n * @param range The range of the text to get\n * @param options Options for the text serializer & block separator\n * @returns The text between the two positions\n */\nexport function getTextBetween(\n  startNode: ProseMirrorNode,\n  range: Range,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { from, to } = range\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  let text = ''\n\n  startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n    if (node.isBlock && pos > from) {\n      text += blockSeparator\n    }\n\n    const textSerializer = textSerializers?.[node.type.name]\n\n    if (textSerializer) {\n      if (parent) {\n        text += textSerializer({\n          node,\n          pos,\n          parent,\n          index,\n          range,\n        })\n      }\n      // do not descend into child nodes when there exists a serializer\n      return false\n    }\n\n    if (node.isText) {\n      text += node?.text?.slice(Math.max(from, pos) - pos, to - pos) // eslint-disable-line\n    }\n  })\n\n  return text\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types.js'\n\n/**\n * Find text serializers `toText` in a Prosemirror schema\n * @param schema The Prosemirror schema to search in\n * @returns A record of text serializers by node name\n */\nexport function getTextSerializersFromSchema(schema: Schema): Record<string, TextSerializer> {\n  return Object.fromEntries(\n    Object.entries(schema.nodes)\n      .filter(([, node]) => node.spec.toText)\n      .map(([name, node]) => [name, node.spec.toText]),\n  )\n}\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\nimport { getTextBetween } from '../helpers/getTextBetween.js'\nimport { getTextSerializersFromSchema } from '../helpers/getTextSerializersFromSchema.js'\n\nexport type ClipboardTextSerializerOptions = {\n  blockSeparator?: string,\n}\n\nexport const ClipboardTextSerializer = Extension.create<ClipboardTextSerializerOptions>({\n  name: 'clipboardTextSerializer',\n\n  addOptions() {\n    return {\n      blockSeparator: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('clipboardTextSerializer'),\n        props: {\n          clipboardTextSerializer: () => {\n            const { editor } = this\n            const { state, schema } = editor\n            const { doc, selection } = state\n            const { ranges } = selection\n            const from = Math.min(...ranges.map(range => range.$from.pos))\n            const to = Math.max(...ranges.map(range => range.$to.pos))\n            const textSerializers = getTextSerializersFromSchema(schema)\n            const range = { from, to }\n\n            return getTextBetween(doc, range, {\n              ...(this.options.blockSeparator !== undefined\n                ? { blockSeparator: this.options.blockSeparator }\n                : {}),\n              textSerializers,\n            })\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blur: {\n      /**\n       * Removes focus from the editor.\n       * @example editor.commands.blur()\n       */\n      blur: () => ReturnType,\n    }\n  }\n}\n\nexport const blur: RawCommands['blur'] = () => ({ editor, view }) => {\n  requestAnimationFrame(() => {\n    if (!editor.isDestroyed) {\n      (view.dom as HTMLElement).blur()\n\n      // Browsers should remove the caret on blur but safari does not.\n      // See: https://github.com/ueberdosis/tiptap/issues/2405\n      window?.getSelection()?.removeAllRanges()\n    }\n  })\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearContent: {\n      /**\n       * Clear the whole document.\n       * @param emitUpdate Whether to emit an update event.\n       * @example editor.commands.clearContent()\n       */\n      clearContent: (emitUpdate?: boolean) => ReturnType,\n    }\n  }\n}\n\nexport const clearContent: RawCommands['clearContent'] = (emitUpdate = false) => ({ commands }) => {\n  return commands.setContent('', emitUpdate)\n}\n", "import { liftTarget } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearNodes: {\n      /**\n       * Normalize nodes to a simple paragraph.\n       * @example editor.commands.clearNodes()\n       */\n      clearNodes: () => ReturnType,\n    }\n  }\n}\n\nexport const clearNodes: RawCommands['clearNodes'] = () => ({ state, tr, dispatch }) => {\n  const { selection } = tr\n  const { ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  ranges.forEach(({ $from, $to }) => {\n    state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n      if (node.type.isText) {\n        return\n      }\n\n      const { doc, mapping } = tr\n      const $mappedFrom = doc.resolve(mapping.map(pos))\n      const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize))\n      const nodeRange = $mappedFrom.blockRange($mappedTo)\n\n      if (!nodeRange) {\n        return\n      }\n\n      const targetLiftDepth = liftTarget(nodeRange)\n\n      if (node.type.isTextblock) {\n        const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index())\n\n        tr.setNodeMarkup(nodeRange.start, defaultType)\n      }\n\n      if (targetLiftDepth || targetLiftDepth === 0) {\n        tr.lift(nodeRange, targetLiftDepth)\n      }\n    })\n  })\n\n  return true\n}\n", "import { Command, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    command: {\n      /**\n       * Define a command inline.\n       * @param fn The command function.\n       * @example\n       * editor.commands.command(({ tr, state }) => {\n       *   ...\n       *   return true\n       * })\n       */\n      command: (fn: (props: Parameters<Command>[0]) => boolean) => ReturnType,\n    }\n  }\n}\n\nexport const command: RawCommands['command'] = fn => props => {\n  return fn(props)\n}\n", "import { createParagraphNear as originalCreateParagraphNear } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    createParagraphNear: {\n      /**\n       * Create a paragraph nearby.\n       * @example editor.commands.createParagraphNear()\n       */\n      createParagraphNear: () => ReturnType\n    }\n  }\n}\n\nexport const createParagraphNear: RawCommands['createParagraphNear'] = () => ({ state, dispatch }) => {\n  return originalCreateParagraphNear(state, dispatch)\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    cut: {\n      /**\n       * Cuts content from a range and inserts it at a given position.\n       * @param range The range to cut.\n       * @param range.from The start position of the range.\n       * @param range.to The end position of the range.\n       * @param targetPos The position to insert the content at.\n       * @example editor.commands.cut({ from: 1, to: 3 }, 5)\n       */\n      cut: ({ from, to }: { from: number, to: number }, targetPos: number) => ReturnType,\n    }\n  }\n}\n\nexport const cut: RawCommands['cut'] = (originRange, targetPos) => ({ editor, tr }) => {\n  const { state } = editor\n\n  const contentSlice = state.doc.slice(originRange.from, originRange.to)\n\n  tr.deleteRange(originRange.from, originRange.to)\n  const newPos = tr.mapping.map(targetPos)\n\n  tr.insert(newPos, contentSlice.content)\n\n  tr.setSelection(new TextSelection(tr.doc.resolve(newPos - 1)))\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteCurrentNode: {\n      /**\n       * Delete the node that currently has the selection anchor.\n       * @example editor.commands.deleteCurrentNode()\n       */\n      deleteCurrentNode: () => ReturnType,\n    }\n  }\n}\n\nexport const deleteCurrentNode: RawCommands['deleteCurrentNode'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const currentNode = selection.$anchor.node()\n\n  // if there is content inside the current node, break out of this command\n  if (currentNode.content.size > 0) {\n    return false\n  }\n\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === currentNode.type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteNode: {\n      /**\n       * Delete a node with a given type or name.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.deleteNode('paragraph')\n       */\n      deleteNode: (typeOrName: string | NodeType) => ReturnType,\n    }\n  }\n}\n\nexport const deleteNode: RawCommands['deleteNode'] = typeOrName => ({ tr, state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { Range, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteRange: {\n      /**\n       * Delete a given range.\n       * @param range The range to delete.\n       * @example editor.commands.deleteRange({ from: 1, to: 3 })\n       */\n      deleteRange: (range: Range) => ReturnType,\n    }\n  }\n}\n\nexport const deleteRange: RawCommands['deleteRange'] = range => ({ tr, dispatch }) => {\n  const { from, to } = range\n\n  if (dispatch) {\n    tr.delete(from, to)\n  }\n\n  return true\n}\n", "import { deleteSelection as originalDeleteSelection } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteSelection: {\n      /**\n       * Delete the selection, if there is one.\n       * @example editor.commands.deleteSelection()\n       */\n      deleteSelection: () => ReturnType\n    }\n  }\n}\n\nexport const deleteSelection: RawCommands['deleteSelection'] = () => ({ state, dispatch }) => {\n  return originalDeleteSelection(state, dispatch)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    enter: {\n      /**\n       * Trigger enter.\n       * @example editor.commands.enter()\n       */\n      enter: () => ReturnType,\n    }\n  }\n}\n\nexport const enter: RawCommands['enter'] = () => ({ commands }) => {\n  return commands.keyboardShortcut('Enter')\n}\n", "import { exitCode as originalExitCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    exitCode: {\n      /**\n       * Exit from a code block.\n       * @example editor.commands.exitCode()\n       */\n      exitCode: () => ReturnType\n    }\n  }\n}\n\nexport const exitCode: RawCommands['exitCode'] = () => ({ state, dispatch }) => {\n  return originalExitCode(state, dispatch)\n}\n", "import { isRegExp } from './isRegExp.js'\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nexport function objectIncludes(\n  object1: Record<string, any>,\n  object2: Record<string, any>,\n  options: { strict: boolean } = { strict: true },\n): boolean {\n  const keys = Object.keys(object2)\n\n  if (!keys.length) {\n    return true\n  }\n\n  return keys.every(key => {\n    if (options.strict) {\n      return object2[key] === object1[key]\n    }\n\n    if (isRegExp(object2[key])) {\n      return object2[key].test(object1[key])\n    }\n\n    return object2[key] === object1[key]\n  })\n}\n", "import { Mark as ProseMirrorMark, MarkType, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Range } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\n\nfunction findMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): ProseMirrorMark | undefined {\n  return marks.find(item => {\n    return item.type === type && objectIncludes(item.attrs, attributes)\n  })\n}\n\nfunction isMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): boolean {\n  return !!findMarkInSet(marks, type, attributes)\n}\n\nexport function getMarkRange(\n  $pos: ResolvedPos,\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): Range | void {\n  if (!$pos || !type) {\n    return\n  }\n\n  let start = $pos.parent.childAfter($pos.parentOffset)\n\n  if ($pos.parentOffset === start.offset && start.offset !== 0) {\n    start = $pos.parent.childBefore($pos.parentOffset)\n  }\n\n  if (!start.node) {\n    return\n  }\n\n  const mark = findMarkInSet([...start.node.marks], type, attributes)\n\n  if (!mark) {\n    return\n  }\n\n  let startIndex = start.index\n  let startPos = $pos.start() + start.offset\n  let endIndex = startIndex + 1\n  let endPos = startPos + start.node.nodeSize\n\n  findMarkInSet([...start.node.marks], type, attributes)\n\n  while (startIndex > 0 && mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1\n    startPos -= $pos.parent.child(startIndex).nodeSize\n  }\n\n  while (\n    endIndex < $pos.parent.childCount\n    && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)\n  ) {\n    endPos += $pos.parent.child(endIndex).nodeSize\n    endIndex += 1\n  }\n\n  return {\n    from: startPos,\n    to: endPos,\n  }\n}\n", "import { MarkType, Schema } from '@tiptap/pm/model'\n\nexport function getMarkType(nameOrType: string | MarkType, schema: Schema): MarkType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.marks[nameOrType]) {\n      throw Error(\n        `There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.marks[nameOrType]\n  }\n\n  return nameOrType\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\n\nimport { getMarkRange } from '../helpers/getMarkRange.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    extendMarkRange: {\n      /**\n       * Extends the text selection to the current mark by type or name.\n       * @param typeOrName The type or name of the mark.\n       * @param attributes The attributes of the mark.\n       * @example editor.commands.extendMarkRange('bold')\n       * @example editor.commands.extendMarkRange('mention', { userId: \"1\" })\n       */\n      extendMarkRange: (\n        /**\n         * The type or name of the mark.\n         */\n        typeOrName: string | MarkType,\n\n        /**\n         * The attributes of the mark.\n         */\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const extendMarkRange: RawCommands['extendMarkRange'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const type = getMarkType(typeOrName, state.schema)\n  const { doc, selection } = tr\n  const { $from, from, to } = selection\n\n  if (dispatch) {\n    const range = getMarkRange($from, type, attributes)\n\n    if (range && range.from <= from && range.to >= to) {\n      const newSelection = TextSelection.create(doc, range.from, range.to)\n\n      tr.setSelection(newSelection)\n    }\n  }\n\n  return true\n}\n", "import { Command, CommandProps, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    first: {\n      /**\n       * Runs one command after the other and stops at the first which returns true.\n       * @param commands The commands to run.\n       * @example editor.commands.first([command1, command2])\n       */\n      first: (commands: Command[] | ((props: CommandProps) => Command[])) => ReturnType,\n    }\n  }\n}\n\nexport const first: RawCommands['first'] = commands => props => {\n  const items = typeof commands === 'function'\n    ? commands(props)\n    : commands\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (items[i](props)) {\n      return true\n    }\n  }\n\n  return false\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nexport function isTextSelection(value: unknown): value is TextSelection {\n  return value instanceof TextSelection\n}\n", "export function minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Selection, TextSelection } from '@tiptap/pm/state'\n\nimport { FocusPosition } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\nexport function resolveFocusPosition(\n  doc: ProseMirrorNode,\n  position: FocusPosition = null,\n): Selection | null {\n  if (!position) {\n    return null\n  }\n\n  const selectionAtStart = Selection.atStart(doc)\n  const selectionAtEnd = Selection.atEnd(doc)\n\n  if (position === 'start' || position === true) {\n    return selectionAtStart\n  }\n\n  if (position === 'end') {\n    return selectionAtEnd\n  }\n\n  const minPos = selectionAtStart.from\n  const maxPos = selectionAtEnd.to\n\n  if (position === 'all') {\n    return TextSelection.create(\n      doc,\n      minMax(0, minPos, maxPos),\n      minMax(doc.content.size, minPos, maxPos),\n    )\n  }\n\n  return TextSelection.create(\n    doc,\n    minMax(position, minPos, maxPos),\n    minMax(position, minPos, maxPos),\n  )\n}\n", "export function isiOS(): boolean {\n  return [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform)\n  // iPad on iOS 13 detection\n  || (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n}\n", "import { isTextSelection } from '../helpers/isTextSelection.js'\nimport { resolveFocusPosition } from '../helpers/resolveFocusPosition.js'\nimport { FocusPosition, RawCommands } from '../types.js'\nimport { isiOS } from '../utilities/isiOS.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    focus: {\n      /**\n       * Focus the editor at the given position.\n       * @param position The position to focus at.\n       * @param options.scrollIntoView Scroll the focused position into view after focusing\n       * @example editor.commands.focus()\n       * @example editor.commands.focus(32, { scrollIntoView: false })\n       */\n      focus: (\n        /**\n         * The position to focus at.\n         */\n        position?: FocusPosition,\n\n        /**\n         * Optional options\n         * @default { scrollIntoView: true }\n         */\n        options?: {\n          scrollIntoView?: boolean,\n        },\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const focus: RawCommands['focus'] = (position = null, options = {}) => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  options = {\n    scrollIntoView: true,\n    ...options,\n  }\n\n  const delayedFocus = () => {\n    // focus within `requestAnimationFrame` breaks focus on iOS\n    // so we have to call this\n    if (isiOS()) {\n      (view.dom as HTMLElement).focus()\n    }\n\n    // For React we have to focus asynchronously. Otherwise wild things happen.\n    // see: https://github.com/ueberdosis/tiptap/issues/1520\n    requestAnimationFrame(() => {\n      if (!editor.isDestroyed) {\n        view.focus()\n\n        if (options?.scrollIntoView) {\n          editor.commands.scrollIntoView()\n        }\n      }\n    })\n  }\n\n  if ((view.hasFocus() && position === null) || position === false) {\n    return true\n  }\n\n  // we don’t try to resolve a NodeSelection or CellSelection\n  if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n    delayedFocus()\n    return true\n  }\n\n  // pass through tr.doc instead of editor.state.doc\n  // since transactions could change the editors state before this command has been run\n  const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection\n  const isSameSelection = editor.state.selection.eq(selection)\n\n  if (dispatch) {\n    if (!isSameSelection) {\n      tr.setSelection(selection)\n    }\n\n    // `tr.setSelection` resets the stored marks\n    // so we’ll restore them if the selection is the same as before\n    if (isSameSelection && tr.storedMarks) {\n      tr.setStoredMarks(tr.storedMarks)\n    }\n\n    delayedFocus()\n  }\n\n  return true\n}\n", "import { CommandProps, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    forEach: {\n      /**\n       * Loop through an array of items.\n       */\n      forEach: <T>(\n        items: T[],\n        fn: (\n          item: T,\n          props: CommandProps & {\n            index: number,\n          },\n        ) => boolean,\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const forEach: RawCommands['forEach'] = (items, fn) => props => {\n  return items.every((item, index) => fn(item, { ...props, index }))\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { Content, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContent: {\n      /**\n       * Insert a node or string of HTML at the current position.\n       * @example editor.commands.insertContent('<h1>Example</h1>')\n       * @example editor.commands.insertContent('<h1>Example</h1>', { updateSelection: false })\n       */\n      insertContent: (\n        /**\n         * The ProseMirror content to insert.\n         */\n        value: Content,\n\n        /**\n         * Optional options\n         */\n        options?: {\n          /**\n           * Options for parsing the content.\n           */\n          parseOptions?: ParseOptions\n\n          /**\n           * Whether to update the selection after inserting the content.\n           */\n          updateSelection?: boolean\n          applyInputRules?: boolean\n          applyPasteRules?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const insertContent: RawCommands['insertContent'] = (value, options) => ({ tr, commands }) => {\n  return commands.insertContentAt(\n    { from: tr.selection.from, to: tr.selection.to },\n    value,\n    options,\n  )\n}\n", "const removeWhitespaces = (node: HTMLElement) => {\n  const children = node.childNodes\n\n  for (let i = children.length - 1; i >= 0; i -= 1) {\n    const child = children[i]\n\n    if (child.nodeType === 3 && child.nodeValue && /^(\\n\\s\\s|\\n)$/.test(child.nodeValue)) {\n      node.removeChild(child)\n    } else if (child.nodeType === 1) {\n      removeWhitespaces(child as HTMLElement)\n    }\n  }\n\n  return node\n}\n\nexport function elementFromString(value: string): HTMLElement {\n  // add a wrapper to preserve leading and trailing whitespace\n  const wrappedValue = `<body>${value}</body>`\n\n  const html = new window.DOMParser().parseFromString(wrappedValue, 'text/html').body\n\n  return removeWhitespaces(html)\n}\n", "import {\n  DOMParser,\n  Fragment,\n  Node as ProseMirrorNode,\n  ParseOptions,\n  Schema,\n} from '@tiptap/pm/model'\n\nimport { Content } from '../types.js'\nimport { elementFromString } from '../utilities/elementFromString.js'\n\nexport type CreateNodeFromContentOptions = {\n  slice?: boolean\n  parseOptions?: ParseOptions\n}\n\n/**\n * Takes a JSON or HTML content and creates a Prosemirror node or fragment from it.\n * @param content The JSON or HTML content to create the node from\n * @param schema The Prosemirror schema to use for the node\n * @param options Options for the parser\n * @returns The created Prosemirror node or fragment\n */\nexport function createNodeFromContent(\n  content: Content,\n  schema: Schema,\n  options?: CreateNodeFromContentOptions,\n): ProseMirrorNode | Fragment {\n  options = {\n    slice: true,\n    parseOptions: {},\n    ...options,\n  }\n\n  const isJSONContent = typeof content === 'object' && content !== null\n  const isTextContent = typeof content === 'string'\n\n  if (isJSONContent) {\n    try {\n      const isArrayContent = Array.isArray(content) && content.length > 0\n\n      // if the JSON Content is an array of nodes, create a fragment for each node\n      if (isArrayContent) {\n        return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)))\n      }\n\n      return schema.nodeFromJSON(content)\n    } catch (error) {\n      console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error)\n\n      return createNodeFromContent('', schema, options)\n    }\n  }\n\n  if (isTextContent) {\n    const parser = DOMParser.fromSchema(schema)\n\n    return options.slice\n      ? parser.parseSlice(elementFromString(content), options.parseOptions).content\n      : parser.parse(elementFromString(content), options.parseOptions)\n  }\n\n  return createNodeFromContent('', schema, options)\n}\n", "import { Selection, Transaction } from '@tiptap/pm/state'\nimport { ReplaceAroundStep, ReplaceStep } from '@tiptap/pm/transform'\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nexport function selectionToInsertionEnd(tr: Transaction, startLen: number, bias: number) {\n  const last = tr.steps.length - 1\n\n  if (last < startLen) {\n    return\n  }\n\n  const step = tr.steps[last]\n\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n    return\n  }\n\n  const map = tr.mapping.maps[last]\n  let end = 0\n\n  map.forEach((_from, _to, _newFrom, newTo) => {\n    if (end === 0) {\n      end = newTo\n    }\n  })\n\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n", "import { Fragment, Node as ProseMirrorNode, ParseOptions } from '@tiptap/pm/model'\n\nimport { createNodeFromContent } from '../helpers/createNodeFromContent.js'\nimport { selectionToInsertionEnd } from '../helpers/selectionToInsertionEnd.js'\nimport { Content, Range, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContentAt: {\n      /**\n       * Insert a node or string of HTML at a specific position.\n       * @example editor.commands.insertContentAt(0, '<h1>Example</h1>')\n       */\n      insertContentAt: (\n        /**\n         * The position to insert the content at.\n         */\n        position: number | Range,\n\n        /**\n         * The ProseMirror content to insert.\n         */\n        value: Content,\n\n        /**\n         * Optional options\n         */\n        options?: {\n          /**\n           * Options for parsing the content.\n           */\n          parseOptions?: ParseOptions\n\n          /**\n           * Whether to update the selection after inserting the content.\n           */\n          updateSelection?: boolean\n          applyInputRules?: boolean\n          applyPasteRules?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nconst isFragment = (nodeOrFragment: ProseMirrorNode | Fragment): nodeOrFragment is Fragment => {\n  return nodeOrFragment.toString().startsWith('<')\n}\n\nexport const insertContentAt: RawCommands['insertContentAt'] = (position, value, options) => ({ tr, dispatch, editor }) => {\n  if (dispatch) {\n    options = {\n      parseOptions: {},\n      updateSelection: true,\n      applyInputRules: false,\n      applyPasteRules: false,\n      ...options,\n    }\n\n    const content = createNodeFromContent(value, editor.schema, {\n      parseOptions: {\n        preserveWhitespace: 'full',\n        ...options.parseOptions,\n      },\n    })\n\n    // don’t dispatch an empty fragment because this can lead to strange errors\n    if (content.toString() === '<>') {\n      return true\n    }\n\n    let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to }\n\n    let isOnlyTextContent = true\n    let isOnlyBlockContent = true\n    const nodes = isFragment(content) ? content : [content]\n\n    nodes.forEach(node => {\n      // check if added node is valid\n      node.check()\n\n      isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false\n\n      isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false\n    })\n\n    // check if we can replace the wrapping node by\n    // the newly inserted content\n    // example:\n    // replace an empty paragraph by an inserted image\n    // instead of inserting the image below the paragraph\n    if (from === to && isOnlyBlockContent) {\n      const { parent } = tr.doc.resolve(from)\n      const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount\n\n      if (isEmptyTextBlock) {\n        from -= 1\n        to += 1\n      }\n    }\n\n    let newContent\n\n    // if there is only plain text we have to use `insertText`\n    // because this will keep the current marks\n    if (isOnlyTextContent) {\n      // if value is string, we can use it directly\n      // otherwise if it is an array, we have to join it\n      if (Array.isArray(value)) {\n        newContent = value.map(v => v.text || '').join('')\n      } else if (typeof value === 'object' && !!value && !!value.text) {\n        newContent = value.text\n      } else {\n        newContent = value as string\n      }\n\n      tr.insertText(newContent, from, to)\n    } else {\n      newContent = content\n\n      tr.replaceWith(from, to, newContent)\n    }\n\n    // set cursor at end of inserted content\n    if (options.updateSelection) {\n      selectionToInsertionEnd(tr, tr.steps.length - 1, -1)\n    }\n\n    if (options.applyInputRules) {\n      tr.setMeta('applyInputRules', { from, text: newContent })\n    }\n\n    if (options.applyPasteRules) {\n      tr.setMeta('applyPasteRules', { from, text: newContent })\n    }\n  }\n\n  return true\n}\n", "import {\n  joinBackward as originalJoinBackward,\n  joinDown as originalJoinDown,\n  joinForward as originalJoinForward,\n  joinUp as originalJoinUp,\n} from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinUp: {\n      /**\n       * Join the selected block or, if there is a text selection, the closest ancestor block of the selection that can be joined, with the sibling above it.\n       * @example editor.commands.joinUp()\n       */\n      joinUp: () => ReturnType\n    }\n    joinDown: {\n      /**\n       * Join the selected block, or the closest ancestor of the selection that can be joined, with the sibling after it.\n       * @example editor.commands.joinDown()\n       */\n      joinDown: () => ReturnType\n    }\n    joinBackward: {\n      /**\n       * If the selection is empty and at the start of a textblock, try to reduce the distance between that block and the one before it—if there's a block directly before it that can be joined, join them.\n       * If not, try to move the selected block closer to the next one in the document structure by lifting it out of its\n       * parent or moving it into a parent of the previous block. Will use the view for accurate (bidi-aware) start-of-textblock detection if given.\n       * @example editor.commands.joinBackward()\n       */\n      joinBackward: () => ReturnType\n    }\n    joinForward: {\n      /**\n       * If the selection is empty and the cursor is at the end of a textblock, try to reduce or remove the boundary between that block and the one after it,\n       * either by joining them or by moving the other block closer to this one in the tree structure.\n       * Will use the view for accurate start-of-textblock detection if given.\n       * @example editor.commands.joinForward()\n       */\n      joinForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinUp: RawCommands['joinUp'] = () => ({ state, dispatch }) => {\n  return originalJoinUp(state, dispatch)\n}\n\nexport const joinDown: RawCommands['joinDown'] = () => ({ state, dispatch }) => {\n  return originalJoinDown(state, dispatch)\n}\n\nexport const joinBackward: RawCommands['joinBackward'] = () => ({ state, dispatch }) => {\n  return originalJoinBackward(state, dispatch)\n}\n\nexport const joinForward: RawCommands['joinForward'] = () => ({ state, dispatch }) => {\n  return originalJoinForward(state, dispatch)\n}\n", "import { joinPoint } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinItemBackward: {\n      /**\n       * Join two items backward.\n       * @example editor.commands.joinItemBackward()\n       */\n      joinItemBackward: () => ReturnType\n    }\n  }\n}\n\nexport const joinItemBackward: RawCommands['joinItemBackward'] = () => ({\n  tr, state, dispatch,\n}) => {\n  try {\n    const point = joinPoint(state.doc, state.selection.$from.pos, -1)\n\n    if (point === null || point === undefined) {\n      return false\n    }\n\n    tr.join(point, 2)\n\n    if (dispatch) {\n      dispatch(tr)\n    }\n\n    return true\n  } catch {\n    return false\n  }\n}\n", "import { joinPoint } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinItemForward: {\n      /**\n       * Join two items Forwards.\n       * @example editor.commands.joinItemForward()\n       */\n      joinItemForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinItemForward: RawCommands['joinItemForward'] = () => ({\n  state,\n  dispatch,\n  tr,\n}) => {\n  try {\n    const point = joinPoint(state.doc, state.selection.$from.pos, +1)\n\n    if (point === null || point === undefined) {\n      return false\n    }\n\n    tr.join(point, 2)\n\n    if (dispatch) {\n      dispatch(tr)\n    }\n\n    return true\n  } catch (e) {\n    return false\n  }\n}\n", "import { joinTextblockBackward as originalCommand } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinTextblockBackward: {\n      /**\n       * A more limited form of joinBackward that only tries to join the current textblock to the one before it, if the cursor is at the start of a textblock.\n       */\n      joinTextblockBackward: () => ReturnType\n    }\n  }\n}\n\nexport const joinTextblockBackward: RawCommands['joinTextblockBackward'] = () => ({ state, dispatch }) => {\n  return originalCommand(state, dispatch)\n}\n", "import { joinTextblockForward as originalCommand } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinTextblockForward: {\n      /**\n       * A more limited form of joinForward that only tries to join the current textblock to the one after it, if the cursor is at the end of a textblock.\n       */\n      joinTextblockForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinTextblockForward: RawCommands['joinTextblockForward'] = () => ({ state, dispatch }) => {\n  return originalCommand(state, dispatch)\n}\n", "export function isMacOS(): boolean {\n  return typeof navigator !== 'undefined'\n    ? /Mac/.test(navigator.platform)\n    : false\n}\n", "import { RawCommands } from '../types.js'\nimport { isiOS } from '../utilities/isiOS.js'\nimport { isMacOS } from '../utilities/isMacOS.js'\n\nfunction normalizeKeyName(name: string) {\n  const parts = name.split(/-(?!$)/)\n  let result = parts[parts.length - 1]\n\n  if (result === 'Space') {\n    result = ' '\n  }\n\n  let alt\n  let ctrl\n  let shift\n  let meta\n\n  for (let i = 0; i < parts.length - 1; i += 1) {\n    const mod = parts[i]\n\n    if (/^(cmd|meta|m)$/i.test(mod)) {\n      meta = true\n    } else if (/^a(lt)?$/i.test(mod)) {\n      alt = true\n    } else if (/^(c|ctrl|control)$/i.test(mod)) {\n      ctrl = true\n    } else if (/^s(hift)?$/i.test(mod)) {\n      shift = true\n    } else if (/^mod$/i.test(mod)) {\n      if (isiOS() || isMacOS()) {\n        meta = true\n      } else {\n        ctrl = true\n      }\n    } else {\n      throw new Error(`Unrecognized modifier name: ${mod}`)\n    }\n  }\n\n  if (alt) {\n    result = `Alt-${result}`\n  }\n\n  if (ctrl) {\n    result = `Ctrl-${result}`\n  }\n\n  if (meta) {\n    result = `Meta-${result}`\n  }\n\n  if (shift) {\n    result = `Shift-${result}`\n  }\n\n  return result\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    keyboardShortcut: {\n      /**\n       * Trigger a keyboard shortcut.\n       * @param name The name of the keyboard shortcut.\n       * @example editor.commands.keyboardShortcut('Mod-b')\n       */\n      keyboardShortcut: (name: string) => ReturnType,\n    }\n  }\n}\n\nexport const keyboardShortcut: RawCommands['keyboardShortcut'] = name => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  const keys = normalizeKeyName(name).split(/-(?!$)/)\n  const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item))\n  const event = new KeyboardEvent('keydown', {\n    key: key === 'Space'\n      ? ' '\n      : key,\n    altKey: keys.includes('Alt'),\n    ctrlKey: keys.includes('Ctrl'),\n    metaKey: keys.includes('Meta'),\n    shiftKey: keys.includes('Shift'),\n    bubbles: true,\n    cancelable: true,\n  })\n\n  const capturedTransaction = editor.captureTransaction(() => {\n    view.someProp('handleKeyDown', f => f(view, event))\n  })\n\n  capturedTransaction?.steps.forEach(step => {\n    const newStep = step.map(tr.mapping)\n\n    if (newStep && dispatch) {\n      tr.maybeStep(newStep)\n    }\n  })\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { NodeRange } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\nimport { getNodeType } from './getNodeType.js'\n\nexport function isNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null\n\n  const nodeRanges: NodeRange[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return\n    }\n\n    const relativeFrom = Math.max(from, pos)\n    const relativeTo = Math.min(to, pos + node.nodeSize)\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    })\n  })\n\n  const selectionRange = to - from\n  const matchedNodeRanges = nodeRanges\n    .filter(nodeRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === nodeRange.node.type.name\n    })\n    .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }))\n\n  if (empty) {\n    return !!matchedNodeRanges.length\n  }\n\n  const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0)\n\n  return range >= selectionRange\n}\n", "import { lift as originalLift } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    lift: {\n      /**\n       * Removes an existing wrap if possible lifting the node out of it\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.lift('paragraph')\n       * @example editor.commands.lift('heading', { level: 1 })\n       */\n      lift: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const lift: RawCommands['lift'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (!isActive) {\n    return false\n  }\n\n  return originalLift(state, dispatch)\n}\n", "import { liftEmptyBlock as originalLiftEmptyBlock } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftEmptyBlock: {\n      /**\n       * If the cursor is in an empty textblock that can be lifted, lift the block.\n       * @example editor.commands.liftEmptyBlock()\n       */\n      liftEmptyBlock: () => ReturnType,\n    }\n  }\n}\n\nexport const liftEmptyBlock: RawCommands['liftEmptyBlock'] = () => ({ state, dispatch }) => {\n  return originalLiftEmptyBlock(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { liftListItem as originalLiftListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftListItem: {\n      /**\n       * Create a command to lift the list item around the selection up into a wrapping list.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.liftListItem('listItem')\n       */\n      liftListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const liftListItem: RawCommands['liftListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalLiftListItem(type)(state, dispatch)\n}\n", "import { newlineInCode as originalNewlineInCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    newlineInCode: {\n      /**\n       * Add a newline character in code.\n       * @example editor.commands.newlineInCode()\n       */\n      newlineInCode: () => ReturnType\n    }\n  }\n}\n\nexport const newlineInCode: RawCommands['newlineInCode'] = () => ({ state, dispatch }) => {\n  return originalNewlineInCode(state, dispatch)\n}\n", "import { Schema } from '@tiptap/pm/model'\n\n/**\n * Get the type of a schema item by its name.\n * @param name The name of the schema item\n * @param schema The Prosemiror schema to search in\n * @returns The type of the schema item (`node` or `mark`), or null if it doesn't exist\n */\nexport function getSchemaTypeNameByName(name: string, schema: Schema): 'node' | 'mark' | null {\n  if (schema.nodes[name]) {\n    return 'node'\n  }\n\n  if (schema.marks[name]) {\n    return 'mark'\n  }\n\n  return null\n}\n", "/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nexport function deleteProps(obj: Record<string, any>, propOrProps: string | string[]): Record<string, any> {\n  const props = typeof propOrProps === 'string'\n    ? [propOrProps]\n    : propOrProps\n\n  return Object\n    .keys(obj)\n    .reduce((newObj: Record<string, any>, prop) => {\n      if (!props.includes(prop)) {\n        newObj[prop] = obj[prop]\n      }\n\n      return newObj\n    }, {})\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName.js'\nimport { RawCommands } from '../types.js'\nimport { deleteProps } from '../utilities/deleteProps.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    resetAttributes: {\n      /**\n       * Resets some node attributes to the default value.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node to reset.\n       * @example editor.commands.resetAttributes('heading', 'level')\n       */\n      resetAttributes: (\n        typeOrName: string | NodeType | MarkType,\n        attributes: string | string[],\n      ) => ReturnType\n    }\n  }\n}\n\nexport const resetAttributes: RawCommands['resetAttributes'] = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes))\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              tr.addMark(\n                pos,\n                pos + node.nodeSize,\n                markType.create(deleteProps(mark.attrs, attributes)),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    scrollIntoView: {\n      /**\n       * Scroll the selection into view.\n       * @example editor.commands.scrollIntoView()\n       */\n      scrollIntoView: () => ReturnType,\n    }\n  }\n}\n\nexport const scrollIntoView: RawCommands['scrollIntoView'] = () => ({ tr, dispatch }) => {\n  if (dispatch) {\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectAll: {\n      /**\n       * Select the whole document.\n       * @example editor.commands.selectAll()\n       */\n      selectAll: () => ReturnType,\n    }\n  }\n}\n\nexport const selectAll: RawCommands['selectAll'] = () => ({ tr, commands }) => {\n  return commands.setTextSelection({\n    from: 0,\n    to: tr.doc.content.size,\n  })\n}\n", "import { selectNodeBackward as originalSelectNodeBackward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeBackward: {\n      /**\n       * Select a node backward.\n       * @example editor.commands.selectNodeBackward()\n       */\n      selectNodeBackward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeBackward: RawCommands['selectNodeBackward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeBackward(state, dispatch)\n}\n", "import { selectNodeForward as originalSelectNodeForward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeForward: {\n      /**\n       * Select a node forward.\n       * @example editor.commands.selectNodeForward()\n       */\n      selectNodeForward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeForward: RawCommands['selectNodeForward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeForward(state, dispatch)\n}\n", "import { selectParentNode as originalSelectParentNode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectParentNode: {\n      /**\n       * Select the parent node.\n       * @example editor.commands.selectParentNode()\n       */\n      selectParentNode: () => ReturnType\n    }\n  }\n}\n\nexport const selectParentNode: RawCommands['selectParentNode'] = () => ({ state, dispatch }) => {\n  return originalSelectParentNode(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockEnd as originalSelectTextblockEnd } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockEnd: {\n      /**\n       * Moves the cursor to the end of current text block.\n       * @example editor.commands.selectTextblockEnd()\n       */\n      selectTextblockEnd: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockEnd: RawCommands['selectTextblockEnd'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockEnd(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockStart as originalSelectTextblockStart } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockStart: {\n      /**\n       * Moves the cursor to the start of current text block.\n       * @example editor.commands.selectTextblockStart()\n       */\n      selectTextblockStart: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockStart: RawCommands['selectTextblockStart'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockStart(state, dispatch)\n}\n", "import { Node as ProseMirrorNode, ParseOptions, Schema } from '@tiptap/pm/model'\n\nimport { Content } from '../types.js'\nimport { createNodeFromContent } from './createNodeFromContent.js'\n\n/**\n * Create a new Prosemirror document node from content.\n * @param content The JSON or HTML content to create the document from\n * @param schema The Prosemirror schema to use for the document\n * @param parseOptions Options for the parser\n * @returns The created Prosemirror document node\n */\nexport function createDocument(\n  content: Content,\n  schema: Schema,\n  parseOptions: ParseOptions = {},\n): ProseMirrorNode {\n  return createNodeFromContent(content, schema, { slice: false, parseOptions }) as ProseMirrorNode\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { createDocument } from '../helpers/createDocument.js'\nimport { Content, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setContent: {\n      /**\n       * Replace the whole document with new content.\n       * @param content The new content.\n       * @param emitUpdate Whether to emit an update event.\n       * @param parseOptions Options for parsing the content.\n       * @example editor.commands.setContent('<p>Example text</p>')\n       */\n      setContent: (\n        /**\n         * The new content.\n         */\n        content: Content,\n\n        /**\n         * Whether to emit an update event.\n         * @default false\n         */\n        emitUpdate?: boolean,\n\n        /**\n         * Options for parsing the content.\n         * @default {}\n         */\n        parseOptions?: ParseOptions,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const setContent: RawCommands['setContent'] = (content, emitUpdate = false, parseOptions = {}) => ({ tr, editor, dispatch }) => {\n  const { doc } = tr\n  const document = createDocument(content, editor.schema, parseOptions)\n\n  if (dispatch) {\n    tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate)\n  }\n\n  return true\n}\n", "import { Mark, MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkType } from './getMarkType.js'\n\nexport function getMarkAttributes(\n  state: EditorState,\n  typeOrName: string | MarkType,\n): Record<string, any> {\n  const type = getMarkType(typeOrName, state.schema)\n  const { from, to, empty } = state.selection\n  const marks: Mark[] = []\n\n  if (empty) {\n    if (state.storedMarks) {\n      marks.push(...state.storedMarks)\n    }\n\n    marks.push(...state.selection.$head.marks())\n  } else {\n    state.doc.nodesBetween(from, to, node => {\n      marks.push(...node.marks)\n    })\n  }\n\n  const mark = marks.find(markItem => markItem.type.name === type.name)\n\n  if (!mark) {\n    return {}\n  }\n\n  return { ...mark.attrs }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { Transform } from '@tiptap/pm/transform'\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n * @param oldDoc The Prosemirror node to start from\n * @param transactions The transactions to combine\n * @returns A new `Transform` with all steps of the passed transactions\n */\nexport function combineTransactionSteps(\n  oldDoc: ProseMirrorNode,\n  transactions: Transaction[],\n): Transform {\n  const transform = new Transform(oldDoc)\n\n  transactions.forEach(transaction => {\n    transaction.steps.forEach(step => {\n      transform.step(step)\n    })\n  })\n\n  return transform\n}\n", "import { ContentMatch, NodeType } from '@tiptap/pm/model'\n\n/**\n * Gets the default block type at a given match\n * @param match The content match to get the default block type from\n * @returns The default block type or null\n */\nexport function defaultBlockAt(match: ContentMatch): NodeType | null {\n  for (let i = 0; i < match.edgeCount; i += 1) {\n    const { type } = match.edge(i)\n\n    if (type.isTextblock && !type.hasRequiredAttrs()) {\n      return type\n    }\n  }\n\n  return null\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate } from '../types.js'\n\n/**\n * Find children inside a Prosemirror node that match a predicate.\n * @param node The Prosemirror node to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nexport function findChildren(node: ProseMirrorNode, predicate: Predicate): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  node.descendants((child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate, Range } from '../types.js'\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n * @param node The Prosemirror node to search in\n * @param range The range to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nexport function findChildrenInRange(\n  node: ProseMirrorNode,\n  range: Range,\n  predicate: Predicate,\n): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  // if (range.from === range.to) {\n  //   const nodeAt = node.nodeAt(range.from)\n\n  //   if (nodeAt) {\n  //     nodesWithPos.push({\n  //       node: nodeAt,\n  //       pos: range.from,\n  //     })\n  //   }\n  // }\n\n  node.nodesBetween(range.from, range.to, (child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Predicate } from '../types.js'\n\n/**\n * Finds the closest parent node to a resolved position that matches a predicate.\n * @param $pos The resolved position to search from\n * @param predicate The predicate to match\n * @returns The closest parent node to the resolved position that matches the predicate\n * @example ```js\n * findParentNodeClosestToPos($from, node => node.type.name === 'paragraph')\n * ```\n */\nexport function findParentNodeClosestToPos(\n  $pos: ResolvedPos,\n  predicate: Predicate,\n):\n  | {\n      pos: number\n      start: number\n      depth: number\n      node: ProseMirrorNode\n    }\n  | undefined {\n  for (let i = $pos.depth; i > 0; i -= 1) {\n    const node = $pos.node(i)\n\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node,\n      }\n    }\n  }\n}\n", "import { Selection } from '@tiptap/pm/state'\n\nimport { Predicate } from '../types.js'\nimport { findParentNodeClosestToPos } from './findParentNodeClosestToPos.js'\n\n/**\n * Finds the closest parent node to the current selection that matches a predicate.\n * @param predicate The predicate to match\n * @returns A command that finds the closest parent node to the current selection that matches the predicate\n * @example ```js\n * findParentNode(node => node.type.name === 'paragraph')\n * ```\n */\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection) => findParentNodeClosestToPos(selection.$from, predicate)\n}\n", "import { DOMSerializer, Fragment, Schema } from '@tiptap/pm/model'\n\nexport function getHTMLFromFragment(fragment: Fragment, schema: Schema): string {\n  const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment)\n\n  const temporaryDocument = document.implementation.createHTMLDocument()\n  const container = temporaryDocument.createElement('div')\n\n  container.appendChild(documentFragment)\n\n  return container.innerHTML\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { Editor } from '../Editor.js'\nimport { ExtensionManager } from '../ExtensionManager.js'\nimport { Extensions } from '../types.js'\nimport { getSchemaByResolvedExtensions } from './getSchemaByResolvedExtensions.js'\n\nexport function getSchema(extensions: Extensions, editor?: Editor): Schema {\n  const resolvedExtensions = ExtensionManager.resolve(extensions)\n\n  return getSchemaByResolvedExtensions(resolvedExtensions, editor)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent } from '../types.js'\nimport { getHTMLFromFragment } from './getHTMLFromFragment.js'\nimport { getSchema } from './getSchema.js'\n\n/**\n * Generate HTML from a JSONContent\n * @param doc The JSONContent to generate HTML from\n * @param extensions The extensions to use for the schema\n * @returns The generated HTML\n */\nexport function generateHTML(doc: JSONContent, extensions: Extensions): string {\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getHTMLFromFragment(contentNode.content, schema)\n}\n", "import { DOMParser } from '@tiptap/pm/model'\n\nimport { Extensions } from '../types.js'\nimport { elementFromString } from '../utilities/elementFromString.js'\nimport { getSchema } from './getSchema.js'\n\n/**\n * Generate JSONContent from HTML\n * @param html The HTML to generate JSONContent from\n * @param extensions The extensions to use for the schema\n * @returns The generated JSONContent\n */\nexport function generateJSON(html: string, extensions: Extensions): Record<string, any> {\n  const schema = getSchema(extensions)\n  const dom = elementFromString(html)\n\n  return DOMParser.fromSchema(schema).parse(dom).toJSON()\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types.js'\nimport { getTextBetween } from './getTextBetween.js'\n\n/**\n * Gets the text of a Prosemirror node\n * @param node The Prosemirror node\n * @param options Options for the text serializer & block separator\n * @returns The text of the node\n * @example ```js\n * const text = getText(node, { blockSeparator: '\\n' })\n * ```\n */\nexport function getText(\n  node: ProseMirrorNode,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n) {\n  const range = {\n    from: 0,\n    to: node.content.size,\n  }\n\n  return getTextBetween(node, range, options)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent, TextSerializer } from '../types.js'\nimport { getSchema } from './getSchema.js'\nimport { getText } from './getText.js'\nimport { getTextSerializersFromSchema } from './getTextSerializersFromSchema.js'\n\n/**\n * Generate raw text from a JSONContent\n * @param doc The JSONContent to generate text from\n * @param extensions The extensions to use for the schema\n * @param options Options for the text generation f.e. blockSeparator or textSerializers\n * @returns The generated text\n */\nexport function generateText(\n  doc: JSONContent,\n  extensions: Extensions,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getText(contentNode, {\n    blockSeparator,\n    textSerializers: {\n      ...getTextSerializersFromSchema(schema),\n      ...textSerializers,\n    },\n  })\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getNodeType } from './getNodeType.js'\n\nexport function getNodeAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType,\n): Record<string, any> {\n  const type = getNodeType(typeOrName, state.schema)\n  const { from, to } = state.selection\n  const nodes: Node[] = []\n\n  state.doc.nodesBetween(from, to, node => {\n    nodes.push(node)\n  })\n\n  const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name)\n\n  if (!node) {\n    return {}\n  }\n\n  return { ...node.attrs }\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from './getMarkAttributes.js'\nimport { getNodeAttributes } from './getNodeAttributes.js'\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName.js'\n\n/**\n * Get node or mark attributes by type or name on the current editor state\n * @param state The current editor state\n * @param typeOrName The node or mark type or name\n * @returns The attributes of the node or mark or an empty object\n */\nexport function getAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType | MarkType,\n): Record<string, any> {\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (schemaType === 'node') {\n    return getNodeAttributes(state, typeOrName as NodeType)\n  }\n\n  if (schemaType === 'mark') {\n    return getMarkAttributes(state, typeOrName as MarkType)\n  }\n\n  return {}\n}\n", "/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nexport function removeDuplicates<T>(array: T[], by = JSON.stringify): T[] {\n  const seen: Record<any, any> = {}\n\n  return array.filter(item => {\n    const key = by(item)\n\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true)\n  })\n}\n", "import { Step, Transform } from '@tiptap/pm/transform'\n\nimport { Range } from '../types.js'\nimport { removeDuplicates } from '../utilities/removeDuplicates.js'\n\nexport type ChangedRange = {\n  oldRange: Range,\n  newRange: Range,\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes: ChangedRange[]): ChangedRange[] {\n  const uniqueChanges = removeDuplicates(changes)\n\n  return uniqueChanges.length === 1\n    ? uniqueChanges\n    : uniqueChanges.filter((change, index) => {\n      const rest = uniqueChanges.filter((_, i) => i !== index)\n\n      return !rest.some(otherChange => {\n        return change.oldRange.from >= otherChange.oldRange.from\n          && change.oldRange.to <= otherChange.oldRange.to\n          && change.newRange.from >= otherChange.newRange.from\n          && change.newRange.to <= otherChange.newRange.to\n      })\n    })\n}\n\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nexport function getChangedRanges(transform: Transform): ChangedRange[] {\n  const { mapping, steps } = transform\n  const changes: ChangedRange[] = []\n\n  mapping.maps.forEach((stepMap, index) => {\n    const ranges: Range[] = []\n\n    // This accounts for step changes where no range was actually altered\n    // e.g. when setting a mark, node attribute, etc.\n    // @ts-ignore\n    if (!stepMap.ranges.length) {\n      const { from, to } = steps[index] as Step & {\n        from?: number,\n        to?: number,\n      }\n\n      if (from === undefined || to === undefined) {\n        return\n      }\n\n      ranges.push({ from, to })\n    } else {\n      stepMap.forEach((from, to) => {\n        ranges.push({ from, to })\n      })\n    }\n\n    ranges.forEach(({ from, to }) => {\n      const newStart = mapping.slice(index).map(from, -1)\n      const newEnd = mapping.slice(index).map(to)\n      const oldStart = mapping.invert().map(newStart, -1)\n      const oldEnd = mapping.invert().map(newEnd)\n\n      changes.push({\n        oldRange: {\n          from: oldStart,\n          to: oldEnd,\n        },\n        newRange: {\n          from: newStart,\n          to: newEnd,\n        },\n      })\n    })\n  })\n\n  return simplifyChangedRanges(changes)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { JSONContent } from '../types.js'\n\ninterface DebugJSONContent extends JSONContent {\n  from: number\n  to: number\n}\n\nexport function getDebugJSON(node: ProseMirrorNode, startOffset = 0): DebugJSONContent {\n  const isTopNode = node.type === node.type.schema.topNodeType\n  const increment = isTopNode ? 0 : 1\n  const from = startOffset\n  const to = from + node.nodeSize\n  const marks = node.marks.map(mark => {\n    const output: { type: string; attrs?: Record<string, any> } = {\n      type: mark.type.name,\n    }\n\n    if (Object.keys(mark.attrs).length) {\n      output.attrs = { ...mark.attrs }\n    }\n\n    return output\n  })\n  const attrs = { ...node.attrs }\n  const output: DebugJSONContent = {\n    type: node.type.name,\n    from,\n    to,\n  }\n\n  if (Object.keys(attrs).length) {\n    output.attrs = attrs\n  }\n\n  if (marks.length) {\n    output.marks = marks\n  }\n\n  if (node.content.childCount) {\n    output.content = []\n\n    node.forEach((child, offset) => {\n      output.content?.push(getDebugJSON(child, startOffset + offset + increment))\n    })\n  }\n\n  if (node.text) {\n    output.text = node.text\n  }\n\n  return output\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { MarkRange } from '../types.js'\nimport { getMarkRange } from './getMarkRange.js'\n\nexport function getMarksBetween(from: number, to: number, doc: ProseMirrorNode): MarkRange[] {\n  const marks: MarkRange[] = []\n\n  // get all inclusive marks on empty selection\n  if (from === to) {\n    doc\n      .resolve(from)\n      .marks()\n      .forEach(mark => {\n        const $pos = doc.resolve(from - 1)\n        const range = getMarkRange($pos, mark.type)\n\n        if (!range) {\n          return\n        }\n\n        marks.push({\n          mark,\n          ...range,\n        })\n      })\n  } else {\n    doc.nodesBetween(from, to, (node, pos) => {\n      if (!node || node?.nodeSize === undefined) {\n        return\n      }\n\n      marks.push(\n        ...node.marks.map(mark => ({\n          from: pos,\n          to: pos + node.nodeSize,\n          mark,\n        })),\n      )\n    })\n  }\n\n  return marks\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\n/**\n * Finds the first node of a given type or name in the current selection.\n * @param state The editor state.\n * @param typeOrName The node type or name.\n * @param pos The position to start searching from.\n * @param maxDepth The maximum depth to search.\n * @returns The node and the depth as an array.\n */\nexport const getNodeAtPosition = (state: EditorState, typeOrName: string | NodeType, pos: number, maxDepth = 20) => {\n  const $pos = state.doc.resolve(pos)\n\n  let currentDepth = maxDepth\n  let node: Node | null = null\n\n  while (currentDepth > 0 && node === null) {\n    const currentNode = $pos.node(currentDepth)\n\n    if (currentNode?.type.name === typeOrName) {\n      node = currentNode\n    } else {\n      currentDepth -= 1\n    }\n  }\n\n  return [node, currentDepth] as [Node | null, number]\n}\n", "import { ExtensionAttribute } from '../types.js'\n\n/**\n * Return attributes of an extension that should be splitted by keepOnSplit flag\n * @param extensionAttributes Array of extension attributes\n * @param typeName The type of the extension\n * @param attributes The attributes of the extension\n * @returns The splitted attributes\n */\nexport function getSplittedAttributes(\n  extensionAttributes: ExtensionAttribute[],\n  typeName: string,\n  attributes: Record<string, any>,\n): Record<string, any> {\n  return Object.fromEntries(Object\n    .entries(attributes)\n    .filter(([name]) => {\n      const extensionAttribute = extensionAttributes.find(item => {\n        return item.type === typeName && item.name === name\n      })\n\n      if (!extensionAttribute) {\n        return false\n      }\n\n      return extensionAttribute.attribute.keepOnSplit\n    }))\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { MarkRange } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\nimport { getMarkType } from './getMarkType.js'\n\nexport function isMarkActive(\n  state: EditorState,\n  typeOrName: MarkType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { empty, ranges } = state.selection\n  const type = typeOrName ? getMarkType(typeOrName, state.schema) : null\n\n  if (empty) {\n    return !!(state.storedMarks || state.selection.$from.marks())\n      .filter(mark => {\n        if (!type) {\n          return true\n        }\n\n        return type.name === mark.type.name\n      })\n      .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }))\n  }\n\n  let selectionRange = 0\n  const markRanges: MarkRange[] = []\n\n  ranges.forEach(({ $from, $to }) => {\n    const from = $from.pos\n    const to = $to.pos\n\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (!node.isText && !node.marks.length) {\n        return\n      }\n\n      const relativeFrom = Math.max(from, pos)\n      const relativeTo = Math.min(to, pos + node.nodeSize)\n      const range = relativeTo - relativeFrom\n\n      selectionRange += range\n\n      markRanges.push(\n        ...node.marks.map(mark => ({\n          mark,\n          from: relativeFrom,\n          to: relativeTo,\n        })),\n      )\n    })\n  })\n\n  if (selectionRange === 0) {\n    return false\n  }\n\n  // calculate range of matched mark\n  const matchedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === markRange.mark.type.name\n    })\n    .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // calculate range of marks that excludes the searched mark\n  // for example `code` doesn’t allow any other marks\n  const excludedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return markRange.mark.type !== type && markRange.mark.type.excludes(type)\n    })\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // we only include the result of `excludedRange`\n  // if there is a match at all\n  const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange\n\n  return range >= selectionRange\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName.js'\nimport { isMarkActive } from './isMarkActive.js'\nimport { isNodeActive } from './isNodeActive.js'\n\nexport function isActive(\n  state: EditorState,\n  name: string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  if (!name) {\n    return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes)\n  }\n\n  const schemaType = getSchemaTypeNameByName(name, state.schema)\n\n  if (schemaType === 'node') {\n    return isNodeActive(state, name, attributes)\n  }\n\n  if (schemaType === 'mark') {\n    return isMarkActive(state, name, attributes)\n  }\n\n  return false\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { findParentNode } from './findParentNode.js'\n\nexport const isAtEndOfNode = (state: EditorState, nodeType?: string) => {\n  const { $from, $to, $anchor } = state.selection\n\n  if (nodeType) {\n    const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection)\n\n    if (!parentNode) {\n      return false\n    }\n\n    const $parentPos = state.doc.resolve(parentNode.pos + 1)\n\n    if ($anchor.pos + 1 === $parentPos.end()) {\n      return true\n    }\n\n    return false\n  }\n\n  if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\n    return false\n  }\n\n  return true\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nexport const isAtStartOfNode = (state: EditorState) => {\n  const { $from, $to } = state.selection\n\n  if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\n    return false\n  }\n\n  return true\n}\n", "import { getExtensionField } from '../helpers/getExtensionField.js'\nimport { NodeConfig } from '../index.js'\nimport { Extensions } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\nimport { splitExtensions } from './splitExtensions.js'\n\nexport function isList(name: string, extensions: Extensions): boolean {\n  const { nodeExtensions } = splitExtensions(extensions)\n  const extension = nodeExtensions.find(item => item.name === name)\n\n  if (!extension) {\n    return false\n  }\n\n  const context = {\n    name: extension.name,\n    options: extension.options,\n    storage: extension.storage,\n  }\n  const group = callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context))\n\n  if (typeof group !== 'string') {\n    return false\n  }\n\n  return group.split(' ').includes('list')\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nexport function isNodeEmpty(node: ProseMirrorNode): boolean {\n  const defaultContent = node.type.createAndFill()?.toJSON()\n  const content = node.toJSON()\n\n  return JSON.stringify(defaultContent) === JSON.stringify(content)\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nexport function isNodeSelection(value: unknown): value is NodeSelection {\n  return value instanceof NodeSelection\n}\n", "import { EditorView } from '@tiptap/pm/view'\n\nimport { minMax } from '../utilities/minMax.js'\n\nexport function posToDOMRect(view: EditorView, from: number, to: number): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n", "import { MarkType, ResolvedPos } from '@tiptap/pm/model'\nimport { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from '../helpers/getMarkAttributes.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { isTextSelection } from '../helpers/index.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMark: {\n      /**\n       * Add a mark with new attributes.\n       * @param typeOrName The mark type or name.\n       * @example editor.commands.setMark('bold', { level: 1 })\n       */\n      setMark: (typeOrName: string | MarkType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nfunction canSetMark(state: EditorState, tr: Transaction, newMarkType: MarkType) {\n  const { selection } = tr\n  let cursor: ResolvedPos | null = null\n\n  if (isTextSelection(selection)) {\n    cursor = selection.$cursor\n  }\n\n  if (cursor) {\n    const currentMarks = state.storedMarks ?? cursor.marks()\n\n    // There can be no current marks that exclude the new mark\n    return (\n      !!newMarkType.isInSet(currentMarks)\n      || !currentMarks.some(mark => mark.type.excludes(newMarkType))\n    )\n  }\n\n  const { ranges } = selection\n\n  return ranges.some(({ $from, $to }) => {\n    let someNodeSupportsMark = $from.depth === 0\n      ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n      : false\n\n    state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n      // If we already found a mark that we can enable, return false to bypass the remaining search\n      if (someNodeSupportsMark) {\n        return false\n      }\n\n      if (node.isInline) {\n        const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType)\n        const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n          || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType))\n\n        someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType\n      }\n      return !someNodeSupportsMark\n    })\n\n    return someNodeSupportsMark\n  })\n}\nexport const setMark: RawCommands['setMark'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n  const type = getMarkType(typeOrName, state.schema)\n\n  if (dispatch) {\n    if (empty) {\n      const oldAttributes = getMarkAttributes(state, type)\n\n      tr.addStoredMark(\n        type.create({\n          ...oldAttributes,\n          ...attributes,\n        }),\n      )\n    } else {\n      ranges.forEach(range => {\n        const from = range.$from.pos\n        const to = range.$to.pos\n\n        state.doc.nodesBetween(from, to, (node, pos) => {\n          const trimmedFrom = Math.max(pos, from)\n          const trimmedTo = Math.min(pos + node.nodeSize, to)\n          const someHasMark = node.marks.find(mark => mark.type === type)\n\n          // if there is already a mark of this type\n          // we know that we have to merge its attributes\n          // otherwise we add a fresh new mark\n          if (someHasMark) {\n            node.marks.forEach(mark => {\n              if (type === mark.type) {\n                tr.addMark(\n                  trimmedFrom,\n                  trimmedTo,\n                  type.create({\n                    ...mark.attrs,\n                    ...attributes,\n                  }),\n                )\n              }\n            })\n          } else {\n            tr.addMark(trimmedFrom, trimmedTo, type.create(attributes))\n          }\n        })\n      })\n    }\n  }\n\n  return canSetMark(state, tr, type)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMeta: {\n      /**\n       * Store a metadata property in the current transaction.\n       * @param key The key of the metadata property.\n       * @param value The value to store.\n       * @example editor.commands.setMeta('foo', 'bar')\n       */\n      setMeta: (key: string, value: any) => ReturnType,\n    }\n  }\n}\n\nexport const setMeta: RawCommands['setMeta'] = (key, value) => ({ tr }) => {\n  tr.setMeta(key, value)\n\n  return true\n}\n", "import { setBlockType } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNode: {\n      /**\n       * Replace a given range with a node.\n       * @param typeOrName The type or name of the node\n       * @param attributes The attributes of the node\n       * @example editor.commands.setNode('paragraph')\n       */\n      setNode: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const setNode: RawCommands['setNode'] = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  // TODO: use a fallback like insertContent?\n  if (!type.isTextblock) {\n    console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.')\n\n    return false\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, attributes)(state)\n\n        if (canSetBlock) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .command(({ state: updatedState }) => {\n        return setBlockType(type, attributes)(updatedState, dispatch)\n      })\n      .run()\n  )\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNodeSelection: {\n      /**\n       * Creates a NodeSelection.\n       * @param position - Position of the node.\n       * @example editor.commands.setNodeSelection(10)\n       */\n      setNodeSelection: (position: number) => ReturnType\n    }\n  }\n}\n\nexport const setNodeSelection: RawCommands['setNodeSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const from = minMax(position, 0, doc.content.size)\n    const selection = NodeSelection.create(doc, from)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { Range, RawCommands } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setTextSelection: {\n      /**\n       * Creates a TextSelection.\n       * @param position The position of the selection.\n       * @example editor.commands.setTextSelection(10)\n       */\n      setTextSelection: (position: number | Range) => ReturnType\n    }\n  }\n}\n\nexport const setTextSelection: RawCommands['setTextSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const { from, to } = typeof position === 'number' ? { from: position, to: position } : position\n    const minPos = TextSelection.atStart(doc).from\n    const maxPos = TextSelection.atEnd(doc).to\n    const resolvedFrom = minMax(from, minPos, maxPos)\n    const resolvedEnd = minMax(to, minPos, maxPos)\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { sinkListItem as originalSinkListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    sinkListItem: {\n      /**\n       * Sink the list item down into an inner list.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.sinkListItem('listItem')\n       */\n      sinkListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const sinkListItem: RawCommands['sinkListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalSinkListItem(type)(state, dispatch)\n}\n", "import { EditorState, NodeSelection, TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { defaultBlockAt } from '../helpers/defaultBlockAt.js'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes.js'\nimport { RawCommands } from '../types.js'\n\nfunction ensureMarks(state: EditorState, splittableMarks?: string[]) {\n  const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n\n  if (marks) {\n    const filteredMarks = marks.filter(mark => splittableMarks?.includes(mark.type.name))\n\n    state.tr.ensureMarks(filteredMarks)\n  }\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitBlock: {\n      /**\n       * Forks a new node from an existing node.\n       * @param options.keepMarks Keep marks from the previous node.\n       * @example editor.commands.splitBlock()\n       * @example editor.commands.splitBlock({ keepMarks: true })\n       */\n      splitBlock: (options?: { keepMarks?: boolean }) => ReturnType\n    }\n  }\n}\n\nexport const splitBlock: RawCommands['splitBlock'] = ({ keepMarks = true } = {}) => ({\n  tr, state, dispatch, editor,\n}) => {\n  const { selection, doc } = tr\n  const { $from, $to } = selection\n  const extensionAttributes = editor.extensionManager.attributes\n  const newAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  if (selection instanceof NodeSelection && selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n      return false\n    }\n\n    if (dispatch) {\n      if (keepMarks) {\n        ensureMarks(state, editor.extensionManager.splittableMarks)\n      }\n\n      tr.split($from.pos).scrollIntoView()\n    }\n\n    return true\n  }\n\n  if (!$from.parent.isBlock) {\n    return false\n  }\n\n  if (dispatch) {\n    const atEnd = $to.parentOffset === $to.parent.content.size\n\n    if (selection instanceof TextSelection) {\n      tr.deleteSelection()\n    }\n\n    const deflt = $from.depth === 0\n      ? undefined\n      : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n\n    let types = atEnd && deflt\n      ? [\n        {\n          type: deflt,\n          attrs: newAttributes,\n        },\n      ]\n      : undefined\n\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n\n    if (\n      !types\n        && !can\n        && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)\n    ) {\n      can = true\n      types = deflt\n        ? [\n          {\n            type: deflt,\n            attrs: newAttributes,\n          },\n        ]\n        : undefined\n    }\n\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n\n      if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n        const first = tr.mapping.map($from.before())\n        const $first = tr.doc.resolve(first)\n\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n        }\n      }\n    }\n\n    if (keepMarks) {\n      ensureMarks(state, editor.extensionManager.splittableMarks)\n    }\n\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import {\n  Fragment, Node as ProseMirrorNode, NodeType, Slice,\n} from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitListItem: {\n      /**\n       * Splits one list item into two list items.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.splitListItem('listItem')\n       */\n      splitListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const splitListItem: RawCommands['splitListItem'] = typeOrName => ({\n  tr, state, dispatch, editor,\n}) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const { $from, $to } = state.selection\n\n  // @ts-ignore\n  // eslint-disable-next-line\n    const node: ProseMirrorNode = state.selection.node\n\n  if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n    return false\n  }\n\n  const grandParent = $from.node(-1)\n\n  if (grandParent.type !== type) {\n    return false\n  }\n\n  const extensionAttributes = editor.extensionManager.attributes\n\n  if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n    // In an empty block. If this is a nested list, the wrapping\n    // list item should be split. Otherwise, bail out and let next\n    // command handle lifting.\n    if (\n      $from.depth === 2\n        || $from.node(-3).type !== type\n        || $from.index(-2) !== $from.node(-2).childCount - 1\n    ) {\n      return false\n    }\n\n    if (dispatch) {\n      let wrap = Fragment.empty\n      // eslint-disable-next-line\n        const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3\n\n      // Build a fragment containing empty versions of the structure\n      // from the outer list item to the parent node of the cursor\n      for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n        wrap = Fragment.from($from.node(d).copy(wrap))\n      }\n\n      // eslint-disable-next-line\n        const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3\n\n      // Add a second list item with an empty default start node\n      const newNextTypeAttributes = getSplittedAttributes(\n        extensionAttributes,\n        $from.node().type.name,\n        $from.node().attrs,\n      )\n      const nextType = type.contentMatch.defaultType?.createAndFill(newNextTypeAttributes) || undefined\n\n      wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined))\n\n      const start = $from.before($from.depth - (depthBefore - 1))\n\n      tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0))\n\n      let sel = -1\n\n      tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n        if (sel > -1) {\n          return false\n        }\n\n        if (n.isTextblock && n.content.size === 0) {\n          sel = pos + 1\n        }\n      })\n\n      if (sel > -1) {\n        tr.setSelection(TextSelection.near(tr.doc.resolve(sel)))\n      }\n\n      tr.scrollIntoView()\n    }\n\n    return true\n  }\n\n  const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n\n  const newTypeAttributes = getSplittedAttributes(\n    extensionAttributes,\n    grandParent.type.name,\n    grandParent.attrs,\n  )\n  const newNextTypeAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  tr.delete($from.pos, $to.pos)\n\n  const types = nextType\n    ? [\n      { type, attrs: newTypeAttributes },\n      { type: nextType, attrs: newNextTypeAttributes },\n    ]\n    : [{ type, attrs: newTypeAttributes }]\n\n  if (!canSplit(tr.doc, $from.pos, 2)) {\n    return false\n  }\n\n  if (dispatch) {\n    const { selection, storedMarks } = state\n    const { splittableMarks } = editor.extensionManager\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n    tr.split($from.pos, 2, types).scrollIntoView()\n\n    if (!marks || !dispatch) {\n      return true\n    }\n\n    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n    tr.ensureMarks(filteredMarks)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { canJoin } from '@tiptap/pm/transform'\n\nimport { findParentNode } from '../helpers/findParentNode.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isList } from '../helpers/isList.js'\nimport { RawCommands } from '../types.js'\n\nconst joinListBackwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth)\n\n  if (before === undefined) {\n    return true\n  }\n\n  const nodeBefore = tr.doc.nodeAt(before)\n  const canJoinBackwards = list.node.type === nodeBefore?.type && canJoin(tr.doc, list.pos)\n\n  if (!canJoinBackwards) {\n    return true\n  }\n\n  tr.join(list.pos)\n\n  return true\n}\n\nconst joinListForwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const after = tr.doc.resolve(list.start).after(list.depth)\n\n  if (after === undefined) {\n    return true\n  }\n\n  const nodeAfter = tr.doc.nodeAt(after)\n  const canJoinForwards = list.node.type === nodeAfter?.type && canJoin(tr.doc, after)\n\n  if (!canJoinForwards) {\n    return true\n  }\n\n  tr.join(after)\n\n  return true\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleList: {\n      /**\n       * Toggle between different list types.\n       * @param listTypeOrName The type or name of the list.\n       * @param itemTypeOrName The type or name of the list item.\n       * @param keepMarks Keep marks when toggling.\n       * @param attributes Attributes for the new list.\n       * @example editor.commands.toggleList('bulletList', 'listItem')\n       */\n      toggleList: (listTypeOrName: string | NodeType, itemTypeOrName: string | NodeType, keepMarks?: boolean, attributes?: Record<string, any>) => ReturnType;\n    }\n  }\n}\n\nexport const toggleList: RawCommands['toggleList'] = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({\n  editor, tr, state, dispatch, chain, commands, can,\n}) => {\n  const { extensions, splittableMarks } = editor.extensionManager\n  const listType = getNodeType(listTypeOrName, state.schema)\n  const itemType = getNodeType(itemTypeOrName, state.schema)\n  const { selection, storedMarks } = state\n  const { $from, $to } = selection\n  const range = $from.blockRange($to)\n\n  const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n  if (!range) {\n    return false\n  }\n\n  const parentList = findParentNode(node => isList(node.type.name, extensions))(selection)\n\n  if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n    // remove list\n    if (parentList.node.type === listType) {\n      return commands.liftListItem(itemType)\n    }\n\n    // change list type\n    if (\n      isList(parentList.node.type.name, extensions)\n        && listType.validContent(parentList.node.content)\n        && dispatch\n    ) {\n      return chain()\n        .command(() => {\n          tr.setNodeMarkup(parentList.pos, listType)\n\n          return true\n        })\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run()\n    }\n  }\n  if (!keepMarks || !marks || !dispatch) {\n\n    return chain()\n      // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n        tr.ensureMarks(filteredMarks)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  )\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { isMarkActive } from '../helpers/isMarkActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleMark: {\n      /**\n       * Toggle a mark on and off.\n       * @param typeOrName The mark type or name.\n       * @param attributes The attributes of the mark.\n       * @param options.extendEmptyMarkRange Removes the mark even across the current selection. Defaults to `false`.\n       * @example editor.commands.toggleMark('bold')\n       */\n      toggleMark: (\n        /**\n         * The mark type or name.\n         */\n        typeOrName: string | MarkType,\n\n        /**\n         * The attributes of the mark.\n         */\n        attributes?: Record<string, any>,\n\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleMark: RawCommands['toggleMark'] = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n  const { extendEmptyMarkRange = false } = options\n  const type = getMarkType(typeOrName, state.schema)\n  const isActive = isMarkActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.unsetMark(type, { extendEmptyMarkRange })\n  }\n\n  return commands.setMark(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleNode: {\n      /**\n       * Toggle a node with another node.\n       * @param typeOrName The type or name of the node.\n       * @param toggleTypeOrName The type or name of the node to toggle.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.toggleNode('heading', 'paragraph')\n       */\n      toggleNode: (\n        typeOrName: string | NodeType,\n        toggleTypeOrName: string | NodeType,\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleNode: RawCommands['toggleNode'] = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const toggleType = getNodeType(toggleTypeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.setNode(toggleType)\n  }\n\n  return commands.setNode(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleWrap: {\n      /**\n       * Wraps nodes in another node, or removes an existing wrap.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.toggleWrap('blockquote')\n       */\n      toggleWrap: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const toggleWrap: RawCommands['toggleWrap'] = (typeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.lift(type)\n  }\n\n  return commands.wrapIn(type, attributes)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    undoInputRule: {\n      /**\n       * Undo an input rule.\n       * @example editor.commands.undoInputRule()\n       */\n      undoInputRule: () => ReturnType,\n    }\n  }\n}\n\nexport const undoInputRule: RawCommands['undoInputRule'] = () => ({ state, dispatch }) => {\n  const plugins = state.plugins\n\n  for (let i = 0; i < plugins.length; i += 1) {\n    const plugin = plugins[i]\n    let undoable\n\n    // @ts-ignore\n    // eslint-disable-next-line\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        const tr = state.tr\n        const toUndo = undoable.transform\n\n        for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        }\n\n        if (undoable.text) {\n          const marks = tr.doc.resolve(undoable.from).marks()\n\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetAllMarks: {\n      /**\n       * Remove all marks in the current selection.\n       * @example editor.commands.unsetAllMarks()\n       */\n      unsetAllMarks: () => ReturnType,\n    }\n  }\n}\n\nexport const unsetAllMarks: RawCommands['unsetAllMarks'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n\n  if (empty) {\n    return true\n  }\n\n  if (dispatch) {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos)\n    })\n  }\n\n  return true\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkRange } from '../helpers/getMarkRange.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetMark: {\n      /**\n       * Remove all marks in the current selection.\n       * @param typeOrName The mark type or name.\n       * @param options.extendEmptyMarkRange Removes the mark even across the current selection. Defaults to `false`.\n       * @example editor.commands.unsetMark('bold')\n       */\n      unsetMark: (\n        /**\n         * The mark type or name.\n         */\n        typeOrName: string | MarkType,\n\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const unsetMark: RawCommands['unsetMark'] = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n  const { extendEmptyMarkRange = false } = options\n  const { selection } = tr\n  const type = getMarkType(typeOrName, state.schema)\n  const { $from, empty, ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  if (empty && extendEmptyMarkRange) {\n    let { from, to } = selection\n    const attrs = $from.marks().find(mark => mark.type === type)?.attrs\n    const range = getMarkRange($from, type, attrs)\n\n    if (range) {\n      from = range.from\n      to = range.to\n    }\n\n    tr.removeMark(from, to, type)\n  } else {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos, type)\n    })\n  }\n\n  tr.removeStoredMark(type)\n\n  return true\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    updateAttributes: {\n      /**\n       * Update attributes of a node or mark.\n       * @param typeOrName The type or name of the node or mark.\n       * @param attributes The attributes of the node or mark.\n       * @example editor.commands.updateAttributes('mention', { userId: \"2\" })\n       */\n      updateAttributes: (\n        /**\n         * The type or name of the node or mark.\n         */\n        typeOrName: string | NodeType | MarkType,\n\n        /**\n         * The attributes of the node or mark.\n         */\n        attributes: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const updateAttributes: RawCommands['updateAttributes'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      const from = range.$from.pos\n      const to = range.$to.pos\n\n      state.doc.nodesBetween(from, to, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, {\n            ...node.attrs,\n            ...attributes,\n          })\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              const trimmedFrom = Math.max(pos, from)\n              const trimmedTo = Math.min(pos + node.nodeSize, to)\n\n              tr.addMark(\n                trimmedFrom,\n                trimmedTo,\n                markType.create({\n                  ...mark.attrs,\n                  ...attributes,\n                }),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { wrapIn as originalWrapIn } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapIn: {\n      /**\n       * Wraps nodes in another node.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.wrapIn('blockquote')\n       */\n      wrapIn: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapIn: RawCommands['wrapIn'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapIn(type, attributes)(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { wrapInList as originalWrapInList } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapInList: {\n      /**\n       * Wrap a node in a list.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.wrapInList('bulletList')\n       */\n      wrapInList: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapInList: RawCommands['wrapInList'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapInList(type, attributes)(state, dispatch)\n}\n", "import * as commands from '../commands/index.js'\nimport { Extension } from '../Extension.js'\n\nexport * from '../commands/index.js'\n\nexport const Commands = Extension.create({\n  name: 'commands',\n\n  addCommands() {\n    return {\n      ...commands,\n    }\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const Editable = Extension.create({\n  name: 'editable',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.editor.options.editable,\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const FocusEvents = Extension.create({\n  name: 'focusEvents',\n\n  addProseMirrorPlugins() {\n    const { editor } = this\n\n    return [\n      new Plugin({\n        key: new PluginKey('focusEvents'),\n        props: {\n          handleDOMEvents: {\n            focus: (view, event: Event) => {\n              editor.isFocused = true\n\n              const transaction = editor.state.tr\n                .setMeta('focus', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n            blur: (view, event: Event) => {\n              editor.isFocused = false\n\n              const transaction = editor.state.tr\n                .setMeta('blur', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey, Selection } from '@tiptap/pm/state'\n\nimport { CommandManager } from '../CommandManager.js'\nimport { Extension } from '../Extension.js'\nimport { createChainableState } from '../helpers/createChainableState.js'\nimport { isiOS } from '../utilities/isiOS.js'\nimport { isMacOS } from '../utilities/isMacOS.js'\n\nexport const Keymap = Extension.create({\n  name: 'keymap',\n\n  addKeyboardShortcuts() {\n    const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n      () => commands.undoInputRule(),\n\n      // maybe convert first text block node to default node\n      () => commands.command(({ tr }) => {\n        const { selection, doc } = tr\n        const { empty, $anchor } = selection\n        const { pos, parent } = $anchor\n        const $parentPos = $anchor.parent.isTextblock && pos > 0 ? tr.doc.resolve(pos - 1) : $anchor\n        const parentIsIsolating = $parentPos.parent.type.spec.isolating\n\n        const parentPos = $anchor.pos - $anchor.parentOffset\n\n        const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\n          ? parentPos === $anchor.pos\n          : Selection.atStart(doc).from === pos\n\n        if (\n          !empty\n          || !parent.type.isTextblock\n          || parent.textContent.length\n          || !isAtStart\n          || (isAtStart && $anchor.parent.type.name === 'paragraph') // prevent clearNodes when no nodes to clear, otherwise history stack is appended\n        ) {\n          return false\n        }\n\n        return commands.clearNodes()\n      }),\n\n      () => commands.deleteSelection(),\n      () => commands.joinBackward(),\n      () => commands.selectNodeBackward(),\n    ])\n\n    const handleDelete = () => this.editor.commands.first(({ commands }) => [\n      () => commands.deleteSelection(),\n      () => commands.deleteCurrentNode(),\n      () => commands.joinForward(),\n      () => commands.selectNodeForward(),\n    ])\n\n    const handleEnter = () => this.editor.commands.first(({ commands }) => [\n      () => commands.newlineInCode(),\n      () => commands.createParagraphNear(),\n      () => commands.liftEmptyBlock(),\n      () => commands.splitBlock(),\n    ])\n\n    const baseKeymap = {\n      Enter: handleEnter,\n      'Mod-Enter': () => this.editor.commands.exitCode(),\n      Backspace: handleBackspace,\n      'Mod-Backspace': handleBackspace,\n      'Shift-Backspace': handleBackspace,\n      Delete: handleDelete,\n      'Mod-Delete': handleDelete,\n      'Mod-a': () => this.editor.commands.selectAll(),\n    }\n\n    const pcKeymap = {\n      ...baseKeymap,\n    }\n\n    const macKeymap = {\n      ...baseKeymap,\n      'Ctrl-h': handleBackspace,\n      'Alt-Backspace': handleBackspace,\n      'Ctrl-d': handleDelete,\n      'Ctrl-Alt-Backspace': handleDelete,\n      'Alt-Delete': handleDelete,\n      'Alt-d': handleDelete,\n      'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n      'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n    }\n\n    if (isiOS() || isMacOS()) {\n      return macKeymap\n    }\n\n    return pcKeymap\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // With this plugin we check if the whole document was selected and deleted.\n      // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n      // to a paragraph if necessary.\n      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\n      // with many other commands.\n      new Plugin({\n        key: new PluginKey('clearDocument'),\n        appendTransaction: (transactions, oldState, newState) => {\n          const docChanges = transactions.some(transaction => transaction.docChanged)\n            && !oldState.doc.eq(newState.doc)\n\n          if (!docChanges) {\n            return\n          }\n\n          const { empty, from, to } = oldState.selection\n          const allFrom = Selection.atStart(oldState.doc).from\n          const allEnd = Selection.atEnd(oldState.doc).to\n          const allWasSelected = from === allFrom && to === allEnd\n\n          if (empty || !allWasSelected) {\n            return\n          }\n\n          const isEmpty = newState.doc.textBetween(0, newState.doc.content.size, ' ', ' ').length === 0\n\n          if (!isEmpty) {\n            return\n          }\n\n          const tr = newState.tr\n          const state = createChainableState({\n            state: newState,\n            transaction: tr,\n          })\n          const { commands } = new CommandManager({\n            editor: this.editor,\n            state,\n          })\n\n          commands.clearNodes()\n\n          if (!tr.steps.length) {\n            return\n          }\n\n          return tr\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const Tabindex = Extension.create({\n  name: 'tabindex',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('tabindex'),\n        props: {\n          attributes: this.editor.isEditable ? { tabindex: '0' } : {},\n        },\n      }),\n    ]\n  },\n})\n", "import {\n  Fragment, Node, ResolvedPos,\n} from '@tiptap/pm/model'\n\nimport { Editor } from './Editor.js'\nimport { Content, Range } from './types.js'\n\nexport class NodePos {\n  private resolvedPos: ResolvedPos\n\n  private isBlock: boolean\n\n  private editor: Editor\n\n  private get name(): string {\n    return this.node.type.name\n  }\n\n  constructor(pos: ResolvedPos, editor: Editor, isBlock = false, node: Node | null = null) {\n    this.isBlock = isBlock\n    this.resolvedPos = pos\n    this.editor = editor\n    this.currentNode = node\n  }\n\n  private currentNode: Node | null = null\n\n  get node(): Node {\n    return this.currentNode || this.resolvedPos.node()\n  }\n\n  get element(): HTMLElement {\n    return this.editor.view.domAtPos(this.pos).node as HTMLElement\n  }\n\n  public actualDepth: number | null = null\n\n  get depth(): number {\n    return this.actualDepth ?? this.resolvedPos.depth\n  }\n\n  get pos(): number {\n    return this.resolvedPos.pos\n  }\n\n  get content(): Fragment {\n    return this.node.content\n  }\n\n  set content(content: Content) {\n    let from = this.from\n    let to = this.to\n\n    if (this.isBlock) {\n      if (this.content.size === 0) {\n        console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`)\n        return\n      }\n\n      from = this.from + 1\n      to = this.to - 1\n    }\n\n    this.editor.commands.insertContentAt({ from, to }, content)\n  }\n\n  get attributes(): { [key: string]: any } {\n    return this.node.attrs\n  }\n\n  get textContent(): string {\n    return this.node.textContent\n  }\n\n  get size(): number {\n    return this.node.nodeSize\n  }\n\n  get from(): number {\n    if (this.isBlock) {\n      return this.pos\n    }\n\n    return this.resolvedPos.start(this.resolvedPos.depth)\n  }\n\n  get range(): Range {\n    return {\n      from: this.from,\n      to: this.to,\n    }\n  }\n\n  get to(): number {\n    if (this.isBlock) {\n      return this.pos + this.size\n    }\n\n    return this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1)\n  }\n\n  get parent(): NodePos | null {\n    if (this.depth === 0) {\n      return null\n    }\n\n    const parentPos = this.resolvedPos.start(this.resolvedPos.depth - 1)\n    const $pos = this.resolvedPos.doc.resolve(parentPos)\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get before(): NodePos | null {\n    let $pos = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2))\n\n    if ($pos.depth !== this.depth) {\n      $pos = this.resolvedPos.doc.resolve(this.from - 3)\n    }\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get after(): NodePos | null {\n    let $pos = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1))\n\n    if ($pos.depth !== this.depth) {\n      $pos = this.resolvedPos.doc.resolve(this.to + 3)\n    }\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get children(): NodePos[] {\n    const children: NodePos[] = []\n\n    this.node.content.forEach((node, offset) => {\n      const isBlock = node.isBlock && !node.isTextblock\n\n      const targetPos = this.pos + offset + 1\n      const $pos = this.resolvedPos.doc.resolve(targetPos)\n\n      if (!isBlock && $pos.depth <= this.depth) {\n        return\n      }\n\n      const childNodePos = new NodePos($pos, this.editor, isBlock, isBlock ? node : null)\n\n      if (isBlock) {\n        childNodePos.actualDepth = this.depth + 1\n      }\n\n      children.push(new NodePos($pos, this.editor, isBlock, isBlock ? node : null))\n    })\n\n    return children\n  }\n\n  get firstChild(): NodePos | null {\n    return this.children[0] || null\n  }\n\n  get lastChild(): NodePos | null {\n    const children = this.children\n\n    return children[children.length - 1] || null\n  }\n\n  closest(selector: string, attributes: { [key: string]: any } = {}): NodePos | null {\n    let node: NodePos | null = null\n    let currentNode = this.parent\n\n    while (currentNode && !node) {\n      if (currentNode.node.type.name === selector) {\n        if (Object.keys(attributes).length > 0) {\n          const nodeAttributes = currentNode.node.attrs\n          const attrKeys = Object.keys(attributes)\n\n          for (let index = 0; index < attrKeys.length; index += 1) {\n            const key = attrKeys[index]\n\n            if (nodeAttributes[key] !== attributes[key]) {\n              break\n            }\n          }\n        } else {\n          node = currentNode\n        }\n      }\n\n      currentNode = currentNode.parent\n    }\n\n    return node\n  }\n\n  querySelector(selector: string, attributes: { [key: string]: any } = {}): NodePos | null {\n    return this.querySelectorAll(selector, attributes, true)[0] || null\n  }\n\n  querySelectorAll(selector: string, attributes: { [key: string]: any } = {}, firstItemOnly = false): NodePos[] {\n    let nodes: NodePos[] = []\n\n    if (!this.children || this.children.length === 0) {\n      return nodes\n    }\n    const attrKeys = Object.keys(attributes)\n\n    /**\n     * Finds all children recursively that match the selector and attributes\n     * If firstItemOnly is true, it will return the first item found\n     */\n    this.children.forEach(childPos => {\n      // If we already found a node and we only want the first item, we dont need to keep going\n      if (firstItemOnly && nodes.length > 0) {\n        return\n      }\n\n      if (childPos.node.type.name === selector) {\n        const doesAllAttributesMatch = attrKeys.every(key => attributes[key] === childPos.node.attrs[key])\n\n        if (doesAllAttributesMatch) {\n          nodes.push(childPos)\n        }\n      }\n\n      // If we already found a node and we only want the first item, we can stop here and skip the recursion\n      if (firstItemOnly && nodes.length > 0) {\n        return\n      }\n\n      nodes = nodes.concat(childPos.querySelectorAll(selector, attributes, firstItemOnly))\n    })\n\n    return nodes\n  }\n\n  setAttribute(attributes: { [key: string]: any }) {\n    const oldSelection = this.editor.state.selection\n\n    this.editor.chain().setTextSelection(this.from).updateAttributes(this.node.type.name, attributes).setTextSelection(oldSelection.from)\n      .run()\n  }\n}\n", "export const style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 1px !important;\n  height: 1px !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`\n", "export function createStyleTag(style: string, nonce?: string, suffix?: string): HTMLStyleElement {\n  const tiptapStyleTag = (<HTMLStyleElement>document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`))\n\n  if (tiptapStyleTag !== null) {\n    return tiptapStyleTag\n  }\n\n  const styleNode = document.createElement('style')\n\n  if (nonce) {\n    styleNode.setAttribute('nonce', nonce)\n  }\n\n  styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '')\n  styleNode.innerHTML = style\n  document.getElementsByTagName('head')[0].appendChild(styleNode)\n\n  return styleNode\n}\n", "import {\n  MarkType, NodeType, Schema,\n} from '@tiptap/pm/model'\nimport {\n  EditorState, Plugin, PluginKey, Transaction,\n} from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\n\nimport { CommandManager } from './CommandManager.js'\nimport { EventEmitter } from './EventEmitter.js'\nimport { ExtensionManager } from './ExtensionManager.js'\nimport {\n  ClipboardTextSerializer, Commands, Editable, FocusEvents, Keymap, Tabindex,\n} from './extensions/index.js'\nimport { createDocument } from './helpers/createDocument.js'\nimport { getAttributes } from './helpers/getAttributes.js'\nimport { getHTMLFromFragment } from './helpers/getHTMLFromFragment.js'\nimport { getText } from './helpers/getText.js'\nimport { getTextSerializersFromSchema } from './helpers/getTextSerializersFromSchema.js'\nimport { isActive } from './helpers/isActive.js'\nimport { isNodeEmpty } from './helpers/isNodeEmpty.js'\nimport { resolveFocusPosition } from './helpers/resolveFocusPosition.js'\nimport { NodePos } from './NodePos.js'\nimport { style } from './style.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  EditorEvents,\n  EditorOptions,\n  JSONContent,\n  SingleCommands,\n  TextSerializer,\n} from './types.js'\nimport { createStyleTag } from './utilities/createStyleTag.js'\nimport { isFunction } from './utilities/isFunction.js'\n\nexport * as extensions from './extensions/index.js'\n\nexport interface HTMLElement {\n  editor?: Editor\n}\n\nexport class Editor extends EventEmitter<EditorEvents> {\n  private commandManager!: CommandManager\n\n  public extensionManager!: ExtensionManager\n\n  private css!: HTMLStyleElement\n\n  public schema!: Schema\n\n  public view!: EditorView\n\n  public isFocused = false\n\n  public extensionStorage: Record<string, any> = {}\n\n  public options: EditorOptions = {\n    element: document.createElement('div'),\n    content: '',\n    injectCSS: true,\n    injectNonce: undefined,\n    extensions: [],\n    autofocus: false,\n    editable: true,\n    editorProps: {},\n    parseOptions: {},\n    coreExtensionOptions: {},\n    enableInputRules: true,\n    enablePasteRules: true,\n    enableCoreExtensions: true,\n    onBeforeCreate: () => null,\n    onCreate: () => null,\n    onUpdate: () => null,\n    onSelectionUpdate: () => null,\n    onTransaction: () => null,\n    onFocus: () => null,\n    onBlur: () => null,\n    onDestroy: () => null,\n  }\n\n  constructor(options: Partial<EditorOptions> = {}) {\n    super()\n    this.setOptions(options)\n    this.createExtensionManager()\n    this.createCommandManager()\n    this.createSchema()\n    this.on('beforeCreate', this.options.onBeforeCreate)\n    this.emit('beforeCreate', { editor: this })\n    this.createView()\n    this.injectCSS()\n    this.on('create', this.options.onCreate)\n    this.on('update', this.options.onUpdate)\n    this.on('selectionUpdate', this.options.onSelectionUpdate)\n    this.on('transaction', this.options.onTransaction)\n    this.on('focus', this.options.onFocus)\n    this.on('blur', this.options.onBlur)\n    this.on('destroy', this.options.onDestroy)\n\n    window.setTimeout(() => {\n      if (this.isDestroyed) {\n        return\n      }\n\n      this.commands.focus(this.options.autofocus)\n      this.emit('create', { editor: this })\n    }, 0)\n  }\n\n  /**\n   * Returns the editor storage.\n   */\n  public get storage(): Record<string, any> {\n    return this.extensionStorage\n  }\n\n  /**\n   * An object of all registered commands.\n   */\n  public get commands(): SingleCommands {\n    return this.commandManager.commands\n  }\n\n  /**\n   * Create a command chain to call multiple commands at once.\n   */\n  public chain(): ChainedCommands {\n    return this.commandManager.chain()\n  }\n\n  /**\n   * Check if a command or a command chain can be executed. Without executing it.\n   */\n  public can(): CanCommands {\n    return this.commandManager.can()\n  }\n\n  /**\n   * Inject CSS styles.\n   */\n  private injectCSS(): void {\n    if (this.options.injectCSS && document) {\n      this.css = createStyleTag(style, this.options.injectNonce)\n    }\n  }\n\n  /**\n   * Update editor options.\n   *\n   * @param options A list of options\n   */\n  public setOptions(options: Partial<EditorOptions> = {}): void {\n    this.options = {\n      ...this.options,\n      ...options,\n    }\n\n    if (!this.view || !this.state || this.isDestroyed) {\n      return\n    }\n\n    if (this.options.editorProps) {\n      this.view.setProps(this.options.editorProps)\n    }\n\n    this.view.updateState(this.state)\n  }\n\n  /**\n   * Update editable state of the editor.\n   */\n  public setEditable(editable: boolean, emitUpdate = true): void {\n    this.setOptions({ editable })\n\n    if (emitUpdate) {\n      this.emit('update', { editor: this, transaction: this.state.tr })\n    }\n  }\n\n  /**\n   * Returns whether the editor is editable.\n   */\n  public get isEditable(): boolean {\n    // since plugins are applied after creating the view\n    // `editable` is always `true` for one tick.\n    // that’s why we also have to check for `options.editable`\n    return this.options.editable && this.view && this.view.editable\n  }\n\n  /**\n   * Returns the editor state.\n   */\n  public get state(): EditorState {\n    return this.view.state\n  }\n\n  /**\n   * Register a ProseMirror plugin.\n   *\n   * @param plugin A ProseMirror plugin\n   * @param handlePlugins Control how to merge the plugin into the existing plugins.\n   */\n  public registerPlugin(\n    plugin: Plugin,\n    handlePlugins?: (newPlugin: Plugin, plugins: Plugin[]) => Plugin[],\n  ): void {\n    const plugins = isFunction(handlePlugins)\n      ? handlePlugins(plugin, [...this.state.plugins])\n      : [...this.state.plugins, plugin]\n\n    const state = this.state.reconfigure({ plugins })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Unregister a ProseMirror plugin.\n   *\n   * @param nameOrPluginKey The plugins name\n   */\n  public unregisterPlugin(nameOrPluginKey: string | PluginKey): void {\n    if (this.isDestroyed) {\n      return\n    }\n\n    // @ts-ignore\n    const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key\n\n    const state = this.state.reconfigure({\n      // @ts-ignore\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(name)),\n    })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Creates an extension manager.\n   */\n  private createExtensionManager(): void {\n\n    const coreExtensions = this.options.enableCoreExtensions ? [\n      Editable,\n      ClipboardTextSerializer.configure({\n        blockSeparator: this.options.coreExtensionOptions?.clipboardTextSerializer?.blockSeparator,\n      }),\n      Commands,\n      FocusEvents,\n      Keymap,\n      Tabindex,\n    ] : []\n    const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n      return ['extension', 'node', 'mark'].includes(extension?.type)\n    })\n\n    this.extensionManager = new ExtensionManager(allExtensions, this)\n  }\n\n  /**\n   * Creates an command manager.\n   */\n  private createCommandManager(): void {\n    this.commandManager = new CommandManager({\n      editor: this,\n    })\n  }\n\n  /**\n   * Creates a ProseMirror schema.\n   */\n  private createSchema(): void {\n    this.schema = this.extensionManager.schema\n  }\n\n  /**\n   * Creates a ProseMirror view.\n   */\n  private createView(): void {\n    const doc = createDocument(this.options.content, this.schema, this.options.parseOptions)\n    const selection = resolveFocusPosition(doc, this.options.autofocus)\n\n    this.view = new EditorView(this.options.element, {\n      ...this.options.editorProps,\n      dispatchTransaction: this.dispatchTransaction.bind(this),\n      state: EditorState.create({\n        doc,\n        selection: selection || undefined,\n      }),\n    })\n\n    // `editor.view` is not yet available at this time.\n    // Therefore we will add all plugins and node views directly afterwards.\n    const newState = this.state.reconfigure({\n      plugins: this.extensionManager.plugins,\n    })\n\n    this.view.updateState(newState)\n\n    this.createNodeViews()\n    this.prependClass()\n\n    // Let’s store the editor instance in the DOM element.\n    // So we’ll have access to it for tests.\n    const dom = this.view.dom as HTMLElement\n\n    dom.editor = this\n  }\n\n  /**\n   * Creates all node views.\n   */\n  public createNodeViews(): void {\n    this.view.setProps({\n      nodeViews: this.extensionManager.nodeViews,\n    })\n  }\n\n  /**\n   * Prepend class name to element.\n   */\n  public prependClass(): void {\n    this.view.dom.className = `tiptap ${this.view.dom.className}`\n  }\n\n  public isCapturingTransaction = false\n\n  private capturedTransaction: Transaction | null = null\n\n  public captureTransaction(fn: Function) {\n    this.isCapturingTransaction = true\n    fn()\n    this.isCapturingTransaction = false\n\n    const tr = this.capturedTransaction\n\n    this.capturedTransaction = null\n\n    return tr\n  }\n\n  /**\n   * The callback over which to send transactions (state updates) produced by the view.\n   *\n   * @param transaction An editor state transaction\n   */\n  private dispatchTransaction(transaction: Transaction): void {\n    // if the editor / the view of the editor was destroyed\n    // the transaction should not be dispatched as there is no view anymore.\n    if (this.view.isDestroyed) {\n      return\n    }\n\n    if (this.isCapturingTransaction) {\n      if (!this.capturedTransaction) {\n        this.capturedTransaction = transaction\n\n        return\n      }\n\n      transaction.steps.forEach(step => this.capturedTransaction?.step(step))\n\n      return\n    }\n\n    const state = this.state.apply(transaction)\n    const selectionHasChanged = !this.state.selection.eq(state.selection)\n\n    this.view.updateState(state)\n    this.emit('transaction', {\n      editor: this,\n      transaction,\n    })\n\n    if (selectionHasChanged) {\n      this.emit('selectionUpdate', {\n        editor: this,\n        transaction,\n      })\n    }\n\n    const focus = transaction.getMeta('focus')\n    const blur = transaction.getMeta('blur')\n\n    if (focus) {\n      this.emit('focus', {\n        editor: this,\n        event: focus.event,\n        transaction,\n      })\n    }\n\n    if (blur) {\n      this.emit('blur', {\n        editor: this,\n        event: blur.event,\n        transaction,\n      })\n    }\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return\n    }\n\n    this.emit('update', {\n      editor: this,\n      transaction,\n    })\n  }\n\n  /**\n   * Get attributes of the currently selected node or mark.\n   */\n  public getAttributes(nameOrType: string | NodeType | MarkType): Record<string, any> {\n    return getAttributes(this.state, nameOrType)\n  }\n\n  /**\n   * Returns if the currently selected node or mark is active.\n   *\n   * @param name Name of the node or mark\n   * @param attributes Attributes of the node or mark\n   */\n  public isActive(name: string, attributes?: {}): boolean\n  public isActive(attributes: {}): boolean\n  public isActive(nameOrAttributes: string, attributesOrUndefined?: {}): boolean {\n    const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null\n\n    const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes\n\n    return isActive(this.state, name, attributes)\n  }\n\n  /**\n   * Get the document as JSON.\n   */\n  public getJSON(): JSONContent {\n    return this.state.doc.toJSON()\n  }\n\n  /**\n   * Get the document as HTML.\n   */\n  public getHTML(): string {\n    return getHTMLFromFragment(this.state.doc.content, this.schema)\n  }\n\n  /**\n   * Get the document as text.\n   */\n  public getText(options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  }): string {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n\n    return getText(this.state.doc, {\n      blockSeparator,\n      textSerializers: {\n        ...getTextSerializersFromSchema(this.schema),\n        ...textSerializers,\n      },\n    })\n  }\n\n  /**\n   * Check if there is no content.\n   */\n  public get isEmpty(): boolean {\n    return isNodeEmpty(this.state.doc)\n  }\n\n  /**\n   * Get the number of characters for the current document.\n   *\n   * @deprecated\n   */\n  public getCharacterCount(): number {\n    console.warn(\n      '[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.',\n    )\n\n    return this.state.doc.content.size - 2\n  }\n\n  /**\n   * Destroy the editor.\n   */\n  public destroy(): void {\n    this.emit('destroy')\n\n    if (this.view) {\n      this.view.destroy()\n    }\n\n    this.removeAllListeners()\n  }\n\n  /**\n   * Check if the editor is already destroyed.\n   */\n  public get isDestroyed(): boolean {\n    // @ts-ignore\n    return !this.view?.docView\n  }\n\n  public $node(selector: string, attributes?: { [key: string]: any }): NodePos | null {\n    return this.$doc?.querySelector(selector, attributes) || null\n  }\n\n  public $nodes(selector: string, attributes?: { [key: string]: any }): NodePos[] | null {\n    return this.$doc?.querySelectorAll(selector, attributes) || null\n  }\n\n  public $pos(pos: number) {\n    const $pos = this.state.doc.resolve(pos)\n\n    return new NodePos($pos, this)\n  }\n\n  get $doc() {\n    return this.$pos(0)\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween.js'\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function markInputRule(config: {\n  find: InputRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        const markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function nodeInputRule(config: {\n  /**\n   * The regex to match.\n   */\n  find: InputRuleFinder\n\n  /**\n   * The node type to add.\n   */\n  type: NodeType\n\n  /**\n   * A function that returns the attributes for the node\n   * can also be an object of attributes\n   */\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const { tr } = state\n      const start = range.from\n      let end = range.to\n\n      const newNode = config.type.create(attributes)\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n        let matchStart = start + offset\n\n        if (matchStart > end) {\n          matchStart = end\n        } else {\n          end = matchStart + match[1].length\n        }\n\n        // insert last typed character\n        const lastChar = match[0][match[0].length - 1]\n\n        tr.insertText(lastChar, start + match[0].length - 1)\n\n        // insert node from input rule\n        tr.replaceWith(matchStart, end, newNode)\n      } else if (match[0]) {\n        tr.insert(start - 1, config.type.create(attributes)).delete(\n          tr.mapping.map(start),\n          tr.mapping.map(end),\n        )\n      }\n\n      tr.scrollIntoView()\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function textblockTypeInputRule(config: {\n  find: InputRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const $start = state.doc.resolve(range.from)\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n\n      if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n        return null\n      }\n\n      state.tr\n        .delete(range.from, range.to)\n        .setBlockType(range.from, range.from, config.type, attributes)\n    },\n  })\n}\n", "import { InputRule, InputRuleFinder } from '../InputRule.js'\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function textInputRule(config: {\n  find: InputRuleFinder,\n  replace: string,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Node as ProseMirrorNode, NodeType } from '@tiptap/pm/model'\nimport { canJoin, findWrapping } from '@tiptap/pm/transform'\n\nimport { Editor } from '../Editor.js'\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there’s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function wrappingInputRule(config: {\n  find: InputRuleFinder,\n  type: NodeType,\n  keepMarks?: boolean,\n  keepAttributes?: boolean,\n  editor?: Editor\n  getAttributes?:\n  | Record<string, any>\n  | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n  | false\n  | null\n  ,\n  joinPredicate?: (match: ExtendedRegExpMatchArray, node: ProseMirrorNode) => boolean,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({\n      state, range, match, chain,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const tr = state.tr.delete(range.from, range.to)\n      const $start = tr.doc.resolve(range.from)\n      const blockRange = $start.blockRange()\n      const wrapping = blockRange && findWrapping(blockRange, config.type, attributes)\n\n      if (!wrapping) {\n        return null\n      }\n\n      tr.wrap(blockRange, wrapping)\n\n      if (config.keepMarks && config.editor) {\n        const { selection, storedMarks } = state\n        const { splittableMarks } = config.editor.extensionManager\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n        if (marks) {\n          const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n          tr.ensureMarks(filteredMarks)\n        }\n      }\n      if (config.keepAttributes) {\n        /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n        const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList'\n\n        chain().updateAttributes(nodeType, attributes).run()\n      }\n\n      const before = tr.doc.resolve(range.from - 1).nodeBefore\n\n      if (\n        before\n        && before.type === config.type\n        && canJoin(tr.doc, range.from - 1)\n        && (!config.joinPredicate || config.joinPredicate(match, before))\n      ) {\n        tr.join(range.from - 1)\n      }\n    },\n  })\n}\n", "import {\n  DOMOutputSpec, Mark as ProseMirrorMark, MarkSpec, MarkType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { MarkConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Node } from './Node.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  export interface MarkConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * The extension name - this must be unique.\n     * It will be used to identify the extension.\n     *\n     * @example 'myExtension'\n     */\n    name: string\n\n    /**\n     * The priority of your extension. The higher, the later it will be called\n     * and will take precedence over other extensions with a lower priority.\n     * @default 1000\n     * @example 1001\n     */\n    priority?: number\n\n    /**\n     * The default options for this extension.\n     * @example\n     * defaultOptions: {\n     *   myOption: 'foo',\n     *   myOtherOption: 10,\n     * }\n     */\n    defaultOptions?: Options\n\n    /**\n     * This method will add options to this extension\n     * @see https://tiptap.dev/guide/custom-extensions#settings\n     * @example\n     * addOptions() {\n     *  return {\n     *    myOption: 'foo',\n     *    myOtherOption: 10,\n     * }\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * The default storage this extension can save data to.\n     * @see https://tiptap.dev/guide/custom-extensions#storage\n     * @example\n     * defaultStorage: {\n     *   prefetchedUsers: [],\n     *   loading: false,\n     * }\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * This function adds globalAttributes to specific nodes.\n     * @see https://tiptap.dev/guide/custom-extensions#global-attributes\n     * @example\n     * addGlobalAttributes() {\n     *   return [\n     *     {\n             // Extend the following extensions\n     *       types: [\n     *         'heading',\n     *         'paragraph',\n     *       ],\n     *       // … with those attributes\n     *       attributes: {\n     *         textAlign: {\n     *           default: 'left',\n     *           renderHTML: attributes => ({\n     *             style: `text-align: ${attributes.textAlign}`,\n     *           }),\n     *           parseHTML: element => element.style.textAlign || 'left',\n     *         },\n     *       },\n     *     },\n     *   ]\n     * }\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * This function adds commands to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addCommands() {\n     *   return {\n     *     myCommand: () => ({ chain }) => chain().setMark('type', 'foo').run(),\n     *   }\n     * }\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * This function registers keyboard shortcuts.\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addKeyboardShortcuts() {\n     *   return {\n     *     'Mod-l': () => this.editor.commands.toggleBulletList(),\n     *   }\n     * },\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * This function adds input rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#input-rules\n     * @example\n     * addInputRules() {\n     *   return [\n     *     markInputRule({\n     *       find: inputRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * This function adds paste rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#paste-rules\n     * @example\n     * addPasteRules() {\n     *   return [\n     *     markPasteRule({\n     *       find: pasteRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * This function adds Prosemirror plugins to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#prosemirror-plugins\n     * @example\n     * addProseMirrorPlugins() {\n     *   return [\n     *     customPlugin(),\n     *   ]\n     * }\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * This function adds additional extensions to the editor. This is useful for\n     * building extension kits.\n     * @example\n     * addExtensions() {\n     *   return [\n     *     BulletList,\n     *     OrderedList,\n     *     ListItem\n     *   ]\n     * }\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * This function extends the schema of the node.\n     * @example\n     * extendNodeSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * This function extends the schema of the mark.\n     * @example\n     * extendMarkSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Keep mark after split node\n     */\n    keepOnSplit?: boolean | (() => boolean)\n\n    /**\n     * Inclusive\n     */\n    inclusive?:\n      | MarkSpec['inclusive']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['inclusive']\n          editor?: Editor\n        }) => MarkSpec['inclusive'])\n\n    /**\n     * Excludes\n     */\n    excludes?:\n      | MarkSpec['excludes']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['excludes']\n          editor?: Editor\n        }) => MarkSpec['excludes'])\n\n    /**\n     * Marks this Mark as exitable\n     */\n    exitable?: boolean | (() => boolean)\n\n    /**\n     * Group\n     */\n    group?:\n      | MarkSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => MarkSpec['group'])\n\n    /**\n     * Spanning\n     */\n    spanning?:\n      | MarkSpec['spanning']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['spanning']\n          editor?: Editor\n        }) => MarkSpec['spanning'])\n\n    /**\n     * Code\n     */\n    code?:\n      | boolean\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => boolean)\n\n    /**\n     * Parse HTML\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => MarkSpec['parseDOM']\n\n    /**\n     * Render HTML\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            mark: ProseMirrorMark\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * Attributes\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\n/**\n * The Mark class is used to create custom mark extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nexport class Mark<Options = any, Storage = any> {\n  type = 'mark'\n\n  name = 'mark'\n\n  parent: Mark | null = null\n\n  child: Mark | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: MarkConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<MarkConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<MarkConfig<O, S>> = {}) {\n    return new Mark<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<MarkConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Mark<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  static handleExit({ editor, mark }: { editor: Editor; mark: Mark }) {\n    const { tr } = editor.state\n    const currentPos = editor.state.selection.$from\n    const isAtEnd = currentPos.pos === currentPos.end()\n\n    if (isAtEnd) {\n      const currentMarks = currentPos.marks()\n      const isInMark = !!currentMarks.find(m => m?.type.name === mark.name)\n\n      if (!isInMark) {\n        return false\n      }\n\n      const removeMark = currentMarks.find(m => m?.type.name === mark.name)\n\n      if (removeMark) {\n        tr.removeStoredMark(removeMark)\n      }\n      tr.insertText(' ', currentPos.pos)\n\n      editor.view.dispatch(tr)\n\n      return true\n    }\n\n    return false\n  }\n}\n", "import {\n  DOMOutputSpec, Node as ProseMirrorNode, NodeSpec, NodeType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { NodeConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  NodeViewRenderer,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * The extension name - this must be unique.\n     * It will be used to identify the extension.\n     *\n     * @example 'myExtension'\n     */\n    name: string\n\n    /**\n     * The priority of your extension. The higher, the later it will be called\n     * and will take precedence over other extensions with a lower priority.\n     * @default 1000\n     * @example 1001\n     */\n    priority?: number\n\n    /**\n     * The default options for this extension.\n     * @example\n     * defaultOptions: {\n     *   myOption: 'foo',\n     *   myOtherOption: 10,\n     * }\n     */\n    defaultOptions?: Options\n\n    /**\n     * This method will add options to this extension\n     * @see https://tiptap.dev/guide/custom-extensions#settings\n     * @example\n     * addOptions() {\n     *  return {\n     *    myOption: 'foo',\n     *    myOtherOption: 10,\n     * }\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * The default storage this extension can save data to.\n     * @see https://tiptap.dev/guide/custom-extensions#storage\n     * @example\n     * defaultStorage: {\n     *   prefetchedUsers: [],\n     *   loading: false,\n     * }\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * This function adds globalAttributes to specific nodes.\n     * @see https://tiptap.dev/guide/custom-extensions#global-attributes\n     * @example\n     * addGlobalAttributes() {\n     *   return [\n     *     {\n             // Extend the following extensions\n     *       types: [\n     *         'heading',\n     *         'paragraph',\n     *       ],\n     *       // … with those attributes\n     *       attributes: {\n     *         textAlign: {\n     *           default: 'left',\n     *           renderHTML: attributes => ({\n     *             style: `text-align: ${attributes.textAlign}`,\n     *           }),\n     *           parseHTML: element => element.style.textAlign || 'left',\n     *         },\n     *       },\n     *     },\n     *   ]\n     * }\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * This function adds commands to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addCommands() {\n     *   return {\n     *     myCommand: () => ({ chain }) => chain().setMark('type', 'foo').run(),\n     *   }\n     * }\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * This function registers keyboard shortcuts.\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addKeyboardShortcuts() {\n     *   return {\n     *     'Mod-l': () => this.editor.commands.toggleBulletList(),\n     *   }\n     * },\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * This function adds input rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#input-rules\n     * @example\n     * addInputRules() {\n     *   return [\n     *     markInputRule({\n     *       find: inputRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * This function adds paste rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#paste-rules\n     * @example\n     * addPasteRules() {\n     *   return [\n     *     markPasteRule({\n     *       find: pasteRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * This function adds Prosemirror plugins to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#prosemirror-plugins\n     * @example\n     * addProseMirrorPlugins() {\n     *   return [\n     *     customPlugin(),\n     *   ]\n     * }\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * This function adds additional extensions to the editor. This is useful for\n     * building extension kits.\n     * @example\n     * addExtensions() {\n     *   return [\n     *     BulletList,\n     *     OrderedList,\n     *     ListItem\n     *   ]\n     * }\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * This function extends the schema of the node.\n     * @example\n     * extendNodeSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * This function extends the schema of the mark.\n     * @example\n     * extendMarkSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendMarkSchema']\n            editor?: Editor\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Node View\n     */\n    addNodeView?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['addNodeView']\n        }) => NodeViewRenderer)\n      | null\n\n    /**\n     * Defines if this node should be a top level node (doc)\n     * @default false\n     * @example true\n     */\n    topNode?: boolean\n\n    /**\n     * The content expression for this node, as described in the [schema\n     * guide](/docs/guide/#schema.content_expressions). When not given,\n     * the node does not allow any content.\n     *\n     * You can read more about it on the Prosemirror documentation here\n     * @see https://prosemirror.net/docs/guide/#schema.content_expressions\n     * @default undefined\n     * @example content: 'block+'\n     * @example content: 'headline paragraph block*'\n     */\n    content?:\n      | NodeSpec['content']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['content']\n          editor?: Editor\n        }) => NodeSpec['content'])\n\n    /**\n     * The marks that are allowed inside of this node. May be a\n     * space-separated string referring to mark names or groups, `\"_\"`\n     * to explicitly allow all marks, or `\"\"` to disallow marks. When\n     * not given, nodes with inline content default to allowing all\n     * marks, other nodes default to not allowing marks.\n     *\n     * @example marks: 'strong em'\n     */\n    marks?:\n      | NodeSpec['marks']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['marks']\n          editor?: Editor\n        }) => NodeSpec['marks'])\n\n    /**\n     * The group or space-separated groups to which this node belongs,\n     * which can be referred to in the content expressions for the\n     * schema.\n     *\n     * By default Tiptap uses the groups 'block' and 'inline' for nodes. You\n     * can also use custom groups if you want to group specific nodes together\n     * and handle them in your schema.\n     * @example group: 'block'\n     * @example group: 'inline'\n     * @example group: 'customBlock' // this uses a custom group\n     */\n    group?:\n      | NodeSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => NodeSpec['group'])\n\n    /**\n     * Should be set to true for inline nodes. (Implied for text nodes.)\n     */\n    inline?:\n      | NodeSpec['inline']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['inline']\n          editor?: Editor\n        }) => NodeSpec['inline'])\n\n    /**\n     * Can be set to true to indicate that, though this isn't a [leaf\n     * node](https://prosemirror.net/docs/ref/#model.NodeType.isLeaf), it doesn't have directly editable\n     * content and should be treated as a single unit in the view.\n     *\n     * @example atom: true\n     */\n    atom?:\n      | NodeSpec['atom']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['atom']\n          editor?: Editor\n        }) => NodeSpec['atom'])\n\n    /**\n     * Controls whether nodes of this type can be selected as a [node\n     * selection](https://prosemirror.net/docs/ref/#state.NodeSelection). Defaults to true for non-text\n     * nodes.\n     *\n     * @default true\n     * @example selectable: false\n     */\n    selectable?:\n      | NodeSpec['selectable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['selectable']\n          editor?: Editor\n        }) => NodeSpec['selectable'])\n\n    /**\n     * Determines whether nodes of this type can be dragged without\n     * being selected. Defaults to false.\n     *\n     * @default: false\n     * @example: draggable: true\n     */\n    draggable?:\n      | NodeSpec['draggable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['draggable']\n          editor?: Editor\n        }) => NodeSpec['draggable'])\n\n    /**\n     * Can be used to indicate that this node contains code, which\n     * causes some commands to behave differently.\n     */\n    code?:\n      | NodeSpec['code']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => NodeSpec['code'])\n\n    /**\n     * Controls way whitespace in this a node is parsed. The default is\n     * `\"normal\"`, which causes the [DOM parser](https://prosemirror.net/docs/ref/#model.DOMParser) to\n     * collapse whitespace in normal mode, and normalize it (replacing\n     * newlines and such with spaces) otherwise. `\"pre\"` causes the\n     * parser to preserve spaces inside the node. When this option isn't\n     * given, but [`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) is true, `whitespace`\n     * will default to `\"pre\"`. Note that this option doesn't influence\n     * the way the node is rendered—that should be handled by `toDOM`\n     * and/or styling.\n     */\n    whitespace?:\n      | NodeSpec['whitespace']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['whitespace']\n          editor?: Editor\n        }) => NodeSpec['whitespace'])\n\n    /**\n     * When enabled, enables both\n     * [`definingAsContext`](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext) and\n     * [`definingForContent`](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n     *\n     * @default false\n     * @example isolating: true\n     */\n    defining?:\n      | NodeSpec['defining']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['defining']\n          editor?: Editor\n        }) => NodeSpec['defining'])\n\n    /**\n     * When enabled (default is false), the sides of nodes of this type\n     * count as boundaries that regular editing operations, like\n     * backspacing or lifting, won't cross. An example of a node that\n     * should probably have this enabled is a table cell.\n     */\n    isolating?:\n      | NodeSpec['isolating']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['isolating']\n          editor?: Editor\n        }) => NodeSpec['isolating'])\n\n    /**\n     * Associates DOM parser information with this node, which can be\n     * used by [`DOMParser.fromSchema`](https://prosemirror.net/docs/ref/#model.DOMParser^fromSchema) to\n     * automatically derive a parser. The `node` field in the rules is\n     * implied (the name of this node will be filled in automatically).\n     * If you supply your own parser, you do not need to also specify\n     * parsing rules in your schema.\n     *\n     * @example parseHTML: [{ tag: 'div', attrs: { 'data-id': 'my-block' } }]\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => NodeSpec['parseDOM']\n\n    /**\n     * A description of a DOM structure. Can be either a string, which is\n     * interpreted as a text node, a DOM node, which is interpreted as\n     * itself, a `{dom, contentDOM}` object, or an array.\n     *\n     * An array describes a DOM element. The first value in the array\n     * should be a string—the name of the DOM element, optionally prefixed\n     * by a namespace URL and a space. If the second element is plain\n     * object, it is interpreted as a set of attributes for the element.\n     * Any elements after that (including the 2nd if it's not an attribute\n     * object) are interpreted as children of the DOM elements, and must\n     * either be valid `DOMOutputSpec` values, or the number zero.\n     *\n     * The number zero (pronounced “hole”) is used to indicate the place\n     * where a node's child nodes should be inserted. If it occurs in an\n     * output spec, it should be the only child element in its parent\n     * node.\n     *\n     * @example toDOM: ['div[data-id=\"my-block\"]', { class: 'my-block' }, 0]\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * renders the node as text\n     * @example renderText: () => 'foo\n     */\n    renderText?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderText']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            pos: number\n            parent: ProseMirrorNode\n            index: number\n          },\n        ) => string)\n      | null\n\n    /**\n     * Add attributes to the node\n     * @example addAttributes: () => ({ class: 'foo' })\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\n/**\n * The Node class is used to create custom node extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nexport class Node<Options = any, Storage = any> {\n  type = 'node'\n\n  name = 'node'\n\n  parent: Node | null = null\n\n  child: Node | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: NodeConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<NodeConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<NodeConfig<O, S>> = {}) {\n    return new Node<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<NodeConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Node<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "export function isAndroid(): boolean {\n  return navigator.platform === 'Android' || /android/i.test(navigator.userAgent)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { NodeSelection } from '@tiptap/pm/state'\nimport { NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\n\nimport { Editor as CoreEditor } from './Editor.js'\nimport { Node } from './Node.js'\nimport { DecorationWithType, NodeViewRendererOptions, NodeViewRendererProps } from './types.js'\nimport { isAndroid } from './utilities/isAndroid.js'\nimport { isiOS } from './utilities/isiOS.js'\n\n/**\n * Node views are used to customize the rendered DOM structure of a node.\n * @see https://tiptap.dev/guide/node-views\n */\nexport class NodeView<\n  Component,\n  NodeEditor extends CoreEditor = CoreEditor,\n  Options extends NodeViewRendererOptions = NodeViewRendererOptions,\n> implements ProseMirrorNodeView {\n  component: Component\n\n  editor: NodeEditor\n\n  options: Options\n\n  extension: Node\n\n  node: ProseMirrorNode\n\n  decorations: DecorationWithType[]\n\n  getPos: any\n\n  isDragging = false\n\n  constructor(component: Component, props: NodeViewRendererProps, options?: Partial<Options>) {\n    this.component = component\n    this.editor = props.editor as NodeEditor\n    this.options = {\n      stopEvent: null,\n      ignoreMutation: null,\n      ...options,\n    } as Options\n    this.extension = props.extension\n    this.node = props.node\n    this.decorations = props.decorations as DecorationWithType[]\n    this.getPos = props.getPos\n    this.mount()\n  }\n\n  mount() {\n    // eslint-disable-next-line\n    return\n  }\n\n  get dom(): HTMLElement {\n    return this.editor.view.dom as HTMLElement\n  }\n\n  get contentDOM(): HTMLElement | null {\n    return null\n  }\n\n  onDragStart(event: DragEvent) {\n    const { view } = this.editor\n    const target = event.target as HTMLElement\n\n    // get the drag handle element\n    // `closest` is not available for text nodes so we may have to use its parent\n    const dragHandle = target.nodeType === 3\n      ? target.parentElement?.closest('[data-drag-handle]')\n      : target.closest('[data-drag-handle]')\n\n    if (!this.dom || this.contentDOM?.contains(target) || !dragHandle) {\n      return\n    }\n\n    let x = 0\n    let y = 0\n\n    // calculate offset for drag element if we use a different drag handle element\n    if (this.dom !== dragHandle) {\n      const domBox = this.dom.getBoundingClientRect()\n      const handleBox = dragHandle.getBoundingClientRect()\n\n      // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n      const offsetX = event.offsetX ?? (event as any).nativeEvent?.offsetX\n      const offsetY = event.offsetY ?? (event as any).nativeEvent?.offsetY\n\n      x = handleBox.x - domBox.x + offsetX\n      y = handleBox.y - domBox.y + offsetY\n    }\n\n    event.dataTransfer?.setDragImage(this.dom, x, y)\n\n    // we need to tell ProseMirror that we want to move the whole node\n    // so we create a NodeSelection\n    const selection = NodeSelection.create(view.state.doc, this.getPos())\n    const transaction = view.state.tr.setSelection(selection)\n\n    view.dispatch(transaction)\n  }\n\n  stopEvent(event: Event) {\n    if (!this.dom) {\n      return false\n    }\n\n    if (typeof this.options.stopEvent === 'function') {\n      return this.options.stopEvent({ event })\n    }\n\n    const target = event.target as HTMLElement\n    const isInElement = this.dom.contains(target) && !this.contentDOM?.contains(target)\n\n    // any event from child nodes should be handled by ProseMirror\n    if (!isInElement) {\n      return false\n    }\n\n    const isDragEvent = event.type.startsWith('drag')\n    const isDropEvent = event.type === 'drop'\n    const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable\n\n    // any input event within node views should be ignored by ProseMirror\n    if (isInput && !isDropEvent && !isDragEvent) {\n      return true\n    }\n\n    const { isEditable } = this.editor\n    const { isDragging } = this\n    const isDraggable = !!this.node.type.spec.draggable\n    const isSelectable = NodeSelection.isSelectable(this.node)\n    const isCopyEvent = event.type === 'copy'\n    const isPasteEvent = event.type === 'paste'\n    const isCutEvent = event.type === 'cut'\n    const isClickEvent = event.type === 'mousedown'\n\n    // ProseMirror tries to drag selectable nodes\n    // even if `draggable` is set to `false`\n    // this fix prevents that\n    if (!isDraggable && isSelectable && isDragEvent) {\n      event.preventDefault()\n    }\n\n    if (isDraggable && isDragEvent && !isDragging) {\n      event.preventDefault()\n      return false\n    }\n\n    // we have to store that dragging started\n    if (isDraggable && isEditable && !isDragging && isClickEvent) {\n      const dragHandle = target.closest('[data-drag-handle]')\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle))\n\n      if (isValidDragHandle) {\n        this.isDragging = true\n\n        document.addEventListener(\n          'dragend',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'drop',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'mouseup',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n      }\n    }\n\n    // these events are handled by prosemirror\n    if (\n      isDragging\n      || isDropEvent\n      || isCopyEvent\n      || isPasteEvent\n      || isCutEvent\n      || (isClickEvent && isSelectable)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n    if (!this.dom || !this.contentDOM) {\n      return true\n    }\n\n    if (typeof this.options.ignoreMutation === 'function') {\n      return this.options.ignoreMutation({ mutation })\n    }\n\n    // a leaf/atom node is like a black box for ProseMirror\n    // and should be fully handled by the node view\n    if (this.node.isLeaf || this.node.isAtom) {\n      return true\n    }\n\n    // ProseMirror should handle any selections\n    if (mutation.type === 'selection') {\n      return false\n    }\n\n    // try to prevent a bug on iOS and Android that will break node views on enter\n    // this is because ProseMirror can’t preventDispatch on enter\n    // this will lead to a re-render of the node view on enter\n    // see: https://github.com/ueberdosis/tiptap/issues/1214\n    // see: https://github.com/ueberdosis/tiptap/issues/2534\n    if (\n      this.dom.contains(mutation.target)\n      && mutation.type === 'childList'\n      && (isiOS() || isAndroid())\n      && this.editor.isFocused\n    ) {\n      const changedNodes = [\n        ...Array.from(mutation.addedNodes),\n        ...Array.from(mutation.removedNodes),\n      ] as HTMLElement[]\n\n      // we’ll check if every changed node is contentEditable\n      // to make sure it’s probably mutated by ProseMirror\n      if (changedNodes.every(node => node.isContentEditable)) {\n        return false\n      }\n    }\n\n    // we will allow mutation contentDOM with attributes\n    // so we can for example adding classes within our node view\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n      return true\n    }\n\n    // ProseMirror should handle any changes within contentDOM\n    if (this.contentDOM.contains(mutation.target)) {\n      return false\n    }\n\n    return true\n  }\n\n  updateAttributes(attributes: {}) {\n    this.editor.commands.command(({ tr }) => {\n      const pos = this.getPos()\n\n      tr.setNodeMarkup(pos, undefined, {\n        ...this.node.attrs,\n        ...attributes,\n      })\n\n      return true\n    })\n  }\n\n  deleteNode(): void {\n    const from = this.getPos()\n    const to = from + this.node.nodeSize\n\n    this.editor.commands.deleteRange({ from, to })\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween.js'\nimport { PasteRule, PasteRuleFinder } from '../PasteRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport function markPasteRule(config: {\n  find: PasteRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray, event: ClipboardEvent) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({\n      state, range, match, pasteEvent,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n      let markEnd = range.to\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "// source: https://stackoverflow.com/a/6969486\nexport function escapeForRegEx(string: string): string {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n}\n", "export function isString(value: any): value is string {\n  return typeof value === 'string'\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { PasteRule, PasteRuleFinder } from '../PasteRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/index.js'\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport function nodePasteRule(config: {\n  find: PasteRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray, event: ClipboardEvent) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler({\n      match, chain, range, pasteEvent,\n    }) {\n      const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      if (match.input) {\n        chain().deleteRange(range).insertContentAt(range.from, {\n          type: config.type.name,\n          attrs: attributes,\n        })\n      }\n    },\n  })\n}\n", "import { PasteRule, PasteRuleFinder } from '../PasteRule.js'\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport function textPasteRule(config: {\n  find: PasteRuleFinder,\n  replace: string,\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Transaction } from '@tiptap/pm/state'\n\nexport interface TrackerResult {\n  position: number\n  deleted: boolean\n}\n\nexport class Tracker {\n  transaction: Transaction\n\n  currentStep: number\n\n  constructor(transaction: Transaction) {\n    this.transaction = transaction\n    this.currentStep = this.transaction.steps.length\n  }\n\n  map(position: number): TrackerResult {\n    let deleted = false\n\n    const mappedPosition = this.transaction.steps\n      .slice(this.currentStep)\n      .reduce((newPosition, step) => {\n        const mapResult = step.getMap().mapResult(newPosition)\n\n        if (mapResult.deleted) {\n          deleted = true\n        }\n\n        return mapResult.pos\n      }, position)\n\n    return {\n      position: mappedPosition,\n      deleted,\n    }\n  }\n}\n", "import { css } from \"lit\";\n\n// https://github.com/ueberdosis/tiptap/blob/main/packages/core/src/style.ts\nexport const tipTapCoreStyles = css`\n  .ProseMirror {\n    position: relative;\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    white-space: break-spaces;\n    -webkit-font-variant-ligatures: none;\n    font-variant-ligatures: none;\n    font-feature-settings: \"liga\" 0;\n  }\n\n  .ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n    white-space: pre-wrap;\n  }\n  .ProseMirror pre {\n    white-space: pre-wrap;\n  }\n  img.ProseMirror-separator {\n    display: inline !important;\n    border: none !important;\n    margin: 0 !important;\n    width: 1px !important;\n    height: 1px !important;\n  }\n  .ProseMirror-gapcursor {\n    display: none;\n    pointer-events: none;\n    position: absolute;\n    margin: 0;\n    min-width: 1px;\n  }\n  .ProseMirror-gapcursor:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: -2px;\n    width: 20px;\n    border-top: 1px solid black;\n    animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n  }\n  @keyframes ProseMirror-cursor-blink {\n    to {\n      visibility: hidden;\n    }\n  }\n  .ProseMirror-hideselection *::selection {\n    background: transparent;\n  }\n  .ProseMirror-hideselection *::-moz-selection {\n    background: transparent;\n  }\n  .ProseMirror-hideselection * {\n    caret-color: transparent;\n  }\n  .ProseMirror-focused .ProseMirror-gapcursor {\n    display: block;\n  }\n  .tippy-box[data-animation=\"fade\"][data-state=\"hidden\"] {\n    opacity: 0;\n  }\n`;\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  /**\n   * HTML attributes to add to the blockquote element\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nexport const inputRegex = /^\\s*>\\s$/\n\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface BoldOptions {\n  /**\n   * HTML attributes to add to the bold element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bold: {\n      /**\n       * Set a bold mark\n       */\n      setBold: () => ReturnType,\n      /**\n       * Toggle a bold mark\n       */\n      toggleBold: () => ReturnType,\n      /**\n       * Unset a bold mark\n       */\n      unsetBold: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches bold text via `**` as input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/\n\n/**\n * Matches bold text via `**` while pasting.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g\n\n/**\n * Matches bold text via `__` as input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/\n\n/**\n * Matches bold text via `__` while pasting.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g\n\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nexport const Bold = Mark.create<BoldOptions>({\n  name: 'bold',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'strong',\n      },\n      {\n        tag: 'b',\n        getAttrs: node => (node as HTMLElement).style.fontWeight !== 'normal' && null,\n      },\n      {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value as string) && null,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleBold: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetBold: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  /**\n   * The HTML attributes for a list item node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * The node type for bulletList nodes\n   * @default 'bulletList'\n   * @example 'myCustomBulletList'\n   */\n  bulletListTypeName: string\n\n  /**\n   * The node type for orderedList nodes\n   * @default 'orderedList'\n   * @example 'myCustomOrderedList'\n   */\n  orderedListTypeName: string\n}\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import {\n  getMarkAttributes,\n  Mark,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface TextStyleOptions {\n  /**\n   * HTML attributes to add to the span element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textStyle: {\n      /**\n       * Remove spans without inline style attributes.\n       * @example editor.commands.removeEmptyTextStyle()\n       */\n      removeEmptyTextStyle: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create text styles. It is required by default\n * for the `textColor` and `backgroundColor` extensions.\n * @see https://www.tiptap.dev/api/marks/text-style\n */\nexport const TextStyle = Mark.create<TextStyleOptions>({\n  name: 'textStyle',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span',\n        getAttrs: element => {\n          const hasStyles = (element as HTMLElement).hasAttribute('style')\n\n          if (!hasStyles) {\n            return false\n          }\n\n          return {}\n        },\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({ state, commands }) => {\n        const attributes = getMarkAttributes(state, this.type)\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value)\n\n        if (hasStyles) {\n          return true\n        }\n\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nimport ListItem from '../../extension-list-item/src/index.js'\nimport TextStyle from '../../extension-text-style/src/index.js'\n\nexport interface BulletListOptions {\n  /**\n   * The node name for the list items\n   * @default 'listItem'\n   * @example 'paragraph'\n   */\n  itemTypeName: string,\n\n  /**\n   * HTML attributes to add to the bullet list element\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * Keep the marks when splitting the list\n   * @default false\n   * @example true\n   */\n  keepMarks: boolean,\n\n  /**\n   * Keep the attributes when splitting the list\n   * @default false\n   * @example true\n   */\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bulletList: {\n      /**\n       * Toggle a bullet list\n       */\n      toggleBulletList: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a bullet list to a dash or asterisk.\n */\nexport const inputRegex = /^\\s*([-+*])\\s$/\n\n/**\n * This extension allows you to create bullet lists.\n * This requires the ListItem extension\n * @see https://tiptap.dev/api/nodes/bullet-list\n * @see https://tiptap.dev/api/nodes/list-item.\n */\nexport const BulletList = Node.create<BulletListOptions>({\n  name: 'bulletList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  parseHTML() {\n    return [\n      { tag: 'ul' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: () => { return this.editor.getAttributes(TextStyle.name) },\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface CodeOptions {\n  /**\n   * The HTML attributes applied to the code element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    code: {\n      /**\n       * Set a code mark\n       */\n      setCode: () => ReturnType,\n      /**\n       * Toggle inline code\n       */\n      toggleCode: () => ReturnType,\n      /**\n       * Unset a code mark\n       */\n      unsetCode: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches inline code.\n */\nexport const inputRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))$/\n\n/**\n * Matches inline code while pasting.\n */\nexport const pasteRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))/g\n\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nexport const Code = Mark.create<CodeOptions>({\n  name: 'code',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  excludes: '_',\n\n  code: true,\n\n  exitable: true,\n\n  parseHTML() {\n    return [\n      { tag: 'code' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleCode: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetCode: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\nimport { Plugin, PluginKey, TextSelection } from '@tiptap/pm/state'\n\nexport interface CodeBlockOptions {\n  /**\n   * Adds a prefix to language classes that are applied to code tags.\n   * @default 'language-'\n   */\n  languageClassPrefix: string\n  /**\n   * Define whether the node should be exited on triple enter.\n   * @default true\n   */\n  exitOnTripleEnter: boolean\n  /**\n   * Define whether the node should be exited on arrow down if there is no node after it.\n   * @default true\n   */\n  exitOnArrowDown: boolean\n  /**\n   * Custom HTML attributes that should be added to the rendered HTML tag.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    codeBlock: {\n      /**\n       * Set a code block\n       * @param attributes Code block attributes\n       * @example editor.commands.setCodeBlock({ language: 'javascript' })\n       */\n      setCodeBlock: (attributes?: { language: string }) => ReturnType\n      /**\n       * Toggle a code block\n       * @param attributes Code block attributes\n       * @example editor.commands.toggleCodeBlock({ language: 'javascript' })\n       */\n      toggleCodeBlock: (attributes?: { language: string }) => ReturnType\n    }\n  }\n}\n\n/**\n * Matches a code block with backticks.\n */\nexport const backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/\n\n/**\n * Matches a code block with tildes.\n */\nexport const tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/\n\n/**\n * This extension allows you to create code blocks.\n * @see https://tiptap.dev/api/nodes/code-block\n */\nexport const CodeBlock = Node.create<CodeBlockOptions>({\n  name: 'codeBlock',\n\n  addOptions() {\n    return {\n      languageClassPrefix: 'language-',\n      exitOnTripleEnter: true,\n      exitOnArrowDown: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'text*',\n\n  marks: '',\n\n  group: 'block',\n\n  code: true,\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      language: {\n        default: null,\n        parseHTML: element => {\n          const { languageClassPrefix } = this.options\n          const classNames = [...(element.firstElementChild?.classList || [])]\n          const languages = classNames\n            .filter(className => className.startsWith(languageClassPrefix))\n            .map(className => className.replace(languageClassPrefix, ''))\n          const language = languages[0]\n\n          if (!language) {\n            return null\n          }\n\n          return language\n        },\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'pre',\n        preserveWhitespace: 'full',\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'pre',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      [\n        'code',\n        {\n          class: node.attrs.language\n            ? this.options.languageClassPrefix + node.attrs.language\n            : null,\n        },\n        0,\n      ],\n    ]\n  },\n\n  addCommands() {\n    return {\n      setCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.setNode(this.name, attributes)\n        },\n      toggleCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.toggleNode(this.name, 'paragraph', attributes)\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n\n      // remove code block when at start of document or code block is empty\n      Backspace: () => {\n        const { empty, $anchor } = this.editor.state.selection\n        const isAtStart = $anchor.pos === 1\n\n        if (!empty || $anchor.parent.type.name !== this.name) {\n          return false\n        }\n\n        if (isAtStart || !$anchor.parent.textContent.length) {\n          return this.editor.commands.clearNodes()\n        }\n\n        return false\n      },\n\n      // exit node on triple enter\n      Enter: ({ editor }) => {\n        if (!this.options.exitOnTripleEnter) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n        const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n')\n\n        if (!isAtEnd || !endsWithDoubleNewline) {\n          return false\n        }\n\n        return editor\n          .chain()\n          .command(({ tr }) => {\n            tr.delete($from.pos - 2, $from.pos)\n\n            return true\n          })\n          .exitCode()\n          .run()\n      },\n\n      // exit node on arrow down\n      ArrowDown: ({ editor }) => {\n        if (!this.options.exitOnArrowDown) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection, doc } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n\n        if (!isAtEnd) {\n          return false\n        }\n\n        const after = $from.after()\n\n        if (after === undefined) {\n          return false\n        }\n\n        const nodeAfter = doc.nodeAt(after)\n\n        if (nodeAfter) {\n          return false\n        }\n\n        return editor.commands.exitCode()\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      textblockTypeInputRule({\n        find: backtickInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n      textblockTypeInputRule({\n        find: tildeInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // this plugin creates a code block for pasted content from VS Code\n      // we can also detect the copied code language\n      new Plugin({\n        key: new PluginKey('codeBlockVSCodeHandler'),\n        props: {\n          handlePaste: (view, event) => {\n            if (!event.clipboardData) {\n              return false\n            }\n\n            // don’t create a new code block within code blocks\n            if (this.editor.isActive(this.type.name)) {\n              return false\n            }\n\n            const text = event.clipboardData.getData('text/plain')\n            const vscode = event.clipboardData.getData('vscode-editor-data')\n            const vscodeData = vscode ? JSON.parse(vscode) : undefined\n            const language = vscodeData?.mode\n\n            if (!text || !language) {\n              return false\n            }\n\n            const { tr } = view.state\n\n            // create an empty code block´\n            // if the cursor is at the absolute end of the document, insert the code block before the cursor instead\n            // of replacing the selection as the replaceSelectionWith function will cause the insertion to\n            // happen at the previous node\n            if (view.state.selection.from === view.state.doc.nodeSize - (1 + (view.state.selection.$to.depth * 2))) {\n              tr.insert(view.state.selection.from - 1, this.type.create({ language }))\n            } else {\n              tr.replaceSelectionWith(this.type.create({ language }))\n            }\n\n            // put cursor inside the newly created code block\n            tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))))\n\n            // add text to code block\n            // strip carriage return chars from text pasted as code\n            // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n            tr.insertText(text.replace(/\\r\\n?/g, '\\n'))\n\n            // store meta information\n            // this is useful for other plugins that depends on the paste event\n            // like the paste rule plugin\n            tr.setMeta('paste', true)\n\n            view.dispatch(tr)\n\n            return true\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Node } from '@tiptap/core'\n\n/**\n * The default document node which represents the top level node of the editor.\n * @see https://tiptap.dev/api/nodes/document\n */\nexport const Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'block+',\n})\n", "import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n", "import { Extension } from '@tiptap/core'\nimport { dropCursor } from '@tiptap/pm/dropcursor'\n\nexport interface DropcursorOptions {\n  /**\n   * The color of the drop cursor\n   * @default 'currentColor'\n   * @example 'red'\n   */\n  color: string | undefined,\n\n  /**\n   * The width of the drop cursor\n   * @default 1\n   * @example 2\n  */\n  width: number | undefined,\n\n  /**\n   * The class of the drop cursor\n   * @default undefined\n   * @example 'drop-cursor'\n  */\n  class: string | undefined,\n}\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nexport const Dropcursor = Extension.create<DropcursorOptions>({\n  name: 'dropCursor',\n\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      dropCursor(this.options),\n    ]\n  },\n})\n", "import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n", "import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from '@tiptap/pm/gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * A function to determine whether the gap cursor is allowed at the current position. Must return `true` or `false`.\n     * @default null\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\n/**\n * This extension allows you to add a gap cursor to your editor.\n * A gap cursor is a cursor that appears when you click on a place\n * where no content is present, for example inbetween nodes.\n * @see https://tiptap.dev/api/extensions/gapcursor\n */\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  /**\n   * Controls if marks should be kept after being split by a hard break.\n   * @default true\n   * @example false\n   */\n  keepMarks: boolean,\n\n  /**\n   * HTML attributes to add to the hard break element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       * @example editor.commands.setHardBreak()\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { selection, storedMarks } = state\n\n            if (selection.$from.parent.type.spec.isolating) {\n              return false\n            }\n\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = storedMarks\n              || (selection.$to.parentOffset && selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n", "import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\n\n/**\n * The heading level options.\n */\nexport type Level = 1 | 2 | 3 | 4 | 5 | 6\n\nexport interface HeadingOptions {\n  /**\n   * The available heading levels.\n   * @default [1, 2, 3, 4, 5, 6]\n   * @example [1, 2, 3]\n   */\n  levels: Level[],\n\n  /**\n   * The HTML attributes for a heading node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    heading: {\n      /**\n       * Set a heading node\n       * @param attributes The heading attributes\n       * @example editor.commands.setHeading({ level: 1 })\n       */\n      setHeading: (attributes: { level: Level }) => ReturnType,\n      /**\n       * Toggle a heading node\n       * @param attributes The heading attributes\n       * @example editor.commands.toggleHeading({ level: 1 })\n       */\n      toggleHeading: (attributes: { level: Level }) => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create headings.\n * @see https://www.tiptap.dev/api/nodes/heading\n */\nexport const Heading = Node.create<HeadingOptions>({\n  name: 'heading',\n\n  addOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6],\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'inline*',\n\n  group: 'block',\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return this.options.levels\n      .map((level: Level) => ({\n        tag: `h${level}`,\n        attrs: { level },\n      }))\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level)\n    const level = hasLevel\n      ? node.attrs.level\n      : this.options.levels[0]\n\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.setNode(this.name, attributes)\n      },\n      toggleHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.toggleNode(this.name, 'paragraph', attributes)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n      },\n    }), {})\n  },\n\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{1,${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: {\n          level,\n        },\n      })\n    })\n  },\n})\n", "var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) \u2192 RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) \u2192 RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) \u2192 T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) \u2192 ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) \u2192 U, ?number, ?number) \u2192 [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) \u2192 RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n", "import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' \u2014 a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(map) {\n    let result = [];\n    map.forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return null;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    return pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist });\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\nfunction buildCommand(redo, scroll) {\n    return (state, dispatch) => {\n        let hist = historyKey.getState(state);\n        if (!hist || (redo ? hist.undone : hist.done).eventCount == 0)\n            return false;\n        if (dispatch) {\n            let tr = histTransaction(hist, state, redo);\n            if (tr)\n                dispatch(scroll ? tr.scrollIntoView() : tr);\n        }\n        return true;\n    };\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = buildCommand(false, true);\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = buildCommand(true, true);\n/**\nA command function that undoes the last change. Don't scroll the\nselection into view.\n*/\nconst undoNoScroll = buildCommand(false, false);\n/**\nA command function that redoes the last undone change. Don't\nscroll the selection into view.\n*/\nconst redoNoScroll = buildCommand(true, false);\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, redoNoScroll, undo, undoDepth, undoNoScroll };\n", "import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  /**\n   * The amount of history events that are collected before the oldest events are discarded.\n   * @default 100\n   * @example 50\n   */\n  depth: number,\n\n  /**\n   * The delay (in milliseconds) between changes after which a new group should be started.\n   * @default 500\n   * @example 1000\n   */\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       * @example editor.commands.undo()\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       * @example editor.commands.redo()\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to undo and redo recent changes.\n * @see https://www.tiptap.dev/api/extensions/history\n *\n * **Important**: If the `@tiptap/extension-collaboration` package is used, make sure to remove\n * the `history` extension, as it is not compatible with the `collaboration` extension.\n *\n * `@tiptap/extension-collaboration` uses its own history implementation.\n */\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      'Mod-y': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n", "import { mergeAttributes, Node, nodeInputRule } from '@tiptap/core'\nimport { NodeSelection, TextSelection } from '@tiptap/pm/state'\n\nexport interface HorizontalRuleOptions {\n  /**\n   * The HTML attributes for a horizontal rule node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       * @example editor.commands.setHorizontalRule()\n       */\n      setHorizontalRule: () => ReturnType\n    }\n  }\n}\n\n/**\n * This extension allows you to insert horizontal rules.\n * @see https://www.tiptap.dev/api/nodes/horizontal-rule\n */\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'hr' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule:\n        () => ({ chain, state }) => {\n          const { $to: $originTo } = state.selection\n\n          const currentChain = chain()\n\n          if ($originTo.parentOffset === 0) {\n            currentChain.insertContentAt(Math.max($originTo.pos - 2, 0), { type: this.name })\n          } else {\n            currentChain.insertContent({ type: this.name })\n          }\n\n          return (\n            currentChain\n              // set cursor after horizontal rule\n              .command(({ tr, dispatch }) => {\n                if (dispatch) {\n                  const { $to } = tr.selection\n                  const posAfter = $to.end()\n\n                  if ($to.nodeAfter) {\n                    if ($to.nodeAfter.isTextblock) {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1))\n                    } else if ($to.nodeAfter.isBlock) {\n                      tr.setSelection(NodeSelection.create(tr.doc, $to.pos))\n                    } else {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos))\n                    }\n                  } else {\n                    // add node after horizontal rule if it’s the end of the document\n                    const node = $to.parent.type.contentMatch.defaultType?.create()\n\n                    if (node) {\n                      tr.insert(posAfter, node)\n                      tr.setSelection(TextSelection.create(tr.doc, posAfter + 1))\n                    }\n                  }\n\n                  tr.scrollIntoView()\n                }\n\n                return true\n              })\n              .run()\n          )\n        },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ItalicOptions {\n  /**\n   * HTML attributes to add to the italic element.\n   * @default {}\n   * @example { class: 'foo' }\n  */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    italic: {\n      /**\n       * Set an italic mark\n       * @example editor.commands.setItalic()\n       */\n      setItalic: () => ReturnType,\n      /**\n       * Toggle an italic mark\n       * @example editor.commands.toggleItalic()\n       */\n      toggleItalic: () => ReturnType,\n      /**\n       * Unset an italic mark\n       * @example editor.commands.unsetItalic()\n       */\n      unsetItalic: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an italic to a *italic* on input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))$/\n\n/**\n * Matches an italic to a *italic* on paste.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))/g\n\n/**\n * Matches an italic to a _italic_ on input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))$/\n\n/**\n * Matches an italic to a _italic_ on paste.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))/g\n\n/**\n * This extension allows you to create italic text.\n * @see https://www.tiptap.dev/api/marks/italic\n */\nexport const Italic = Mark.create<ItalicOptions>({\n  name: 'italic',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'em',\n      },\n      {\n        tag: 'i',\n        getAttrs: node => (node as HTMLElement).style.fontStyle !== 'normal' && null,\n      },\n      {\n        style: 'font-style=italic',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleItalic: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetItalic: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  /**\n   * The HTML attributes for a list item node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * The node type for bulletList nodes\n   * @default 'bulletList'\n   * @example 'myCustomBulletList'\n   */\n  bulletListTypeName: string\n\n  /**\n   * The node type for orderedList nodes\n   * @default 'orderedList'\n   * @example 'myCustomOrderedList'\n   */\n  orderedListTypeName: string\n}\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  /**\n   * The HTML attributes for a list item node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * The node type for bulletList nodes\n   * @default 'bulletList'\n   * @example 'myCustomBulletList'\n   */\n  bulletListTypeName: string\n\n  /**\n   * The node type for orderedList nodes\n   * @default 'orderedList'\n   * @example 'myCustomOrderedList'\n   */\n  orderedListTypeName: string\n}\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import {\n  getMarkAttributes,\n  Mark,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface TextStyleOptions {\n  /**\n   * HTML attributes to add to the span element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textStyle: {\n      /**\n       * Remove spans without inline style attributes.\n       * @example editor.commands.removeEmptyTextStyle()\n       */\n      removeEmptyTextStyle: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create text styles. It is required by default\n * for the `textColor` and `backgroundColor` extensions.\n * @see https://www.tiptap.dev/api/marks/text-style\n */\nexport const TextStyle = Mark.create<TextStyleOptions>({\n  name: 'textStyle',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span',\n        getAttrs: element => {\n          const hasStyles = (element as HTMLElement).hasAttribute('style')\n\n          if (!hasStyles) {\n            return false\n          }\n\n          return {}\n        },\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({ state, commands }) => {\n        const attributes = getMarkAttributes(state, this.type)\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value)\n\n        if (hasStyles) {\n          return true\n        }\n\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nimport ListItem from '../../extension-list-item/src/index.js'\nimport TextStyle from '../../extension-text-style/src/index.js'\n\nexport interface OrderedListOptions {\n  /**\n   * The node type name for list items.\n   * @default 'listItem'\n   * @example 'myListItem'\n   */\n  itemTypeName: string,\n\n  /**\n   * The HTML attributes for an ordered list node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * Keep the marks when splitting a list item.\n   * @default false\n   * @example true\n   */\n  keepMarks: boolean,\n\n  /**\n   * Keep the attributes when splitting a list item.\n   * @default false\n   * @example true\n   */\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    orderedList: {\n      /**\n       * Toggle an ordered list\n       * @example editor.commands.toggleOrderedList()\n       */\n      toggleOrderedList: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an ordered list to a 1. on input (or any number followed by a dot).\n */\nexport const inputRegex = /^(\\d+)\\.\\s$/\n\n/**\n * This extension allows you to create ordered lists.\n * This requires the ListItem extension\n * @see https://www.tiptap.dev/api/nodes/ordered-list\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const OrderedList = Node.create<OrderedListOptions>({\n  name: 'orderedList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: element => {\n          return element.hasAttribute('start')\n            ? parseInt(element.getAttribute('start') || '', 10)\n            : 1\n        },\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'ol',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { start, ...attributesWithoutStart } = HTMLAttributes\n\n    return start === 1\n      ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n      : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleOrderedList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({ start: +match[1] }),\n      joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyle.name) }),\n        joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ParagraphOptions {\n  /**\n   * The HTML attributes for a paragraph node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    paragraph: {\n      /**\n       * Toggle a paragraph\n       * @example editor.commands.toggleParagraph()\n       */\n      setParagraph: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create paragraphs.\n * @see https://www.tiptap.dev/api/nodes/paragraph\n */\nexport const Paragraph = Node.create<ParagraphOptions>({\n  name: 'paragraph',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  content: 'inline*',\n\n  parseHTML() {\n    return [\n      { tag: 'p' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => ({ commands }) => {\n        return commands.setNode(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n    }\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  /**\n   * HTML attributes to add to the strike element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    strike: {\n      /**\n       * Set a strike mark\n       * @example editor.commands.setStrike()\n       */\n      setStrike: () => ReturnType,\n      /**\n       * Toggle a strike mark\n       * @example editor.commands.toggleStrike()\n       */\n      toggleStrike: () => ReturnType,\n      /**\n       * Unset a strike mark\n       * @example editor.commands.unsetStrike()\n       */\n      unsetStrike: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nexport const inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/\n\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nexport const pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g\n\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-s': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { Node } from '@tiptap/core'\n\n/**\n * This extension allows you to create text nodes.\n * @see https://www.tiptap.dev/api/nodes/text\n */\nexport const Text = Node.create({\n  name: 'text',\n  group: 'inline',\n})\n", "import { Extension } from '@tiptap/core'\nimport { Blockquote, BlockquoteOptions } from '@tiptap/extension-blockquote'\nimport { Bold, BoldOptions } from '@tiptap/extension-bold'\nimport { BulletList, BulletListOptions } from '@tiptap/extension-bullet-list'\nimport { Code, CodeOptions } from '@tiptap/extension-code'\nimport { CodeBlock, CodeBlockOptions } from '@tiptap/extension-code-block'\nimport { Document } from '@tiptap/extension-document'\nimport { Dropcursor, DropcursorOptions } from '@tiptap/extension-dropcursor'\nimport { Gapcursor } from '@tiptap/extension-gapcursor'\nimport { HardBreak, HardBreakOptions } from '@tiptap/extension-hard-break'\nimport { Heading, HeadingOptions } from '@tiptap/extension-heading'\nimport { History, HistoryOptions } from '@tiptap/extension-history'\nimport { HorizontalRule, HorizontalRuleOptions } from '@tiptap/extension-horizontal-rule'\nimport { Italic, ItalicOptions } from '@tiptap/extension-italic'\nimport { ListItem, ListItemOptions } from '@tiptap/extension-list-item'\nimport { OrderedList, OrderedListOptions } from '@tiptap/extension-ordered-list'\nimport { Paragraph, ParagraphOptions } from '@tiptap/extension-paragraph'\nimport { Strike, StrikeOptions } from '@tiptap/extension-strike'\nimport { Text } from '@tiptap/extension-text'\n\nexport interface StarterKitOptions {\n  /**\n   * If set to false, the blockquote extension will not be registered\n   * @example blockquote: false\n   */\n  blockquote: Partial<BlockquoteOptions> | false,\n\n  /**\n   * If set to false, the bold extension will not be registered\n   * @example bold: false\n   */\n  bold: Partial<BoldOptions> | false,\n\n  /**\n   * If set to false, the bulletList extension will not be registered\n   * @example bulletList: false\n   */\n  bulletList: Partial<BulletListOptions> | false,\n\n  /**\n   * If set to false, the code extension will not be registered\n   * @example code: false\n   */\n  code: Partial<CodeOptions> | false,\n\n  /**\n   * If set to false, the codeBlock extension will not be registered\n   * @example codeBlock: false\n   */\n  codeBlock: Partial<CodeBlockOptions> | false,\n\n  /**\n   * If set to false, the document extension will not be registered\n   * @example document: false\n   */\n  document: false,\n\n  /**\n   * If set to false, the dropcursor extension will not be registered\n   * @example dropcursor: false\n   */\n  dropcursor: Partial<DropcursorOptions> | false,\n\n  /**\n   * If set to false, the gapcursor extension will not be registered\n   * @example gapcursor: false\n   */\n  gapcursor: false,\n\n  /**\n   * If set to false, the hardBreak extension will not be registered\n   * @example hardBreak: false\n   */\n  hardBreak: Partial<HardBreakOptions> | false,\n\n  /**\n   * If set to false, the heading extension will not be registered\n   * @example heading: false\n   */\n  heading: Partial<HeadingOptions> | false,\n\n  /**\n   * If set to false, the history extension will not be registered\n   * @example history: false\n   */\n  history: Partial<HistoryOptions> | false,\n\n  /**\n   * If set to false, the horizontalRule extension will not be registered\n   * @example horizontalRule: false\n   */\n  horizontalRule: Partial<HorizontalRuleOptions> | false,\n\n  /**\n   * If set to false, the italic extension will not be registered\n   * @example italic: false\n   */\n  italic: Partial<ItalicOptions> | false,\n\n  /**\n   * If set to false, the listItem extension will not be registered\n   * @example listItem: false\n   */\n  listItem: Partial<ListItemOptions> | false,\n\n  /**\n   * If set to false, the orderedList extension will not be registered\n   * @example orderedList: false\n   */\n  orderedList: Partial<OrderedListOptions> | false,\n\n  /**\n   * If set to false, the paragraph extension will not be registered\n   * @example paragraph: false\n   */\n  paragraph: Partial<ParagraphOptions> | false,\n\n  /**\n   * If set to false, the strike extension will not be registered\n   * @example strike: false\n   */\n  strike: Partial<StrikeOptions> | false,\n\n  /**\n   * If set to false, the text extension will not be registered\n   * @example text: false\n   */\n  text: false,\n}\n\n/**\n * The starter kit is a collection of essential editor extensions.\n *\n * It’s a good starting point for building your own editor.\n */\nexport const StarterKit = Extension.create<StarterKitOptions>({\n  name: 'starterKit',\n\n  addExtensions() {\n    const extensions = []\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options?.blockquote))\n    }\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options?.bold))\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options?.bulletList))\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options?.code))\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options?.codeBlock))\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options?.document))\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options?.dropcursor))\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options?.gapcursor))\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options?.hardBreak))\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options?.heading))\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options?.history))\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options?.horizontalRule))\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options?.italic))\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options?.listItem))\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options?.orderedList))\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options?.paragraph))\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options?.strike))\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options?.text))\n    }\n\n    return extensions\n  },\n})\n", "/** uuid generator for attaching unique ids to attachments that need uploading. */\nexport function uuidv4(): string {\n  // @ts-expect-error\n  const crypto = window.crypto || window.msCrypto;\n  // @ts-expect-error\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c: any) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16),\n  );\n}\n", "import { html, svg, SVGTemplateResult } from \"lit\";\n\nfunction toSvg(path: SVGTemplateResult, size: number = 24) {\n  return html`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n    viewBox=\"0 0 ${size} ${size}\"\n    width=\"${size}\"\n    height=\"${size}\"\n    part=\"toolbar__icon\"\n  >\n    ${path}\n  </svg>`;\n}\n\n// @TODO: Make a lazy loading SVG component.\nexport const bold = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M6 4.75c0-.69.56-1.25 1.25-1.25h5a4.75 4.75 0 013.888 7.479A5 5 0 0114 20.5H7.25c-.69 0-1.25-.56-1.25-1.25V4.75zM8.5 13v5H14a2.5 2.5 0 000-5H8.5zm0-2.5h3.751A2.25 2.25 0 0012.25 6H8.5v4.5z\"></path>`,\n);\n\nexport const italics = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M10 4.75a.75.75 0 01.75-.75h8.5a.75.75 0 010 1.5h-3.514l-5.828 13h3.342a.75.75 0 010 1.5h-8.5a.75.75 0 010-1.5h3.514l5.828-13H10.75a.75.75 0 01-.75-.75z\"></path>`,\n);\n\nexport const strike = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M12.36 5C9.37 5 8.105 6.613 8.105 7.848c0 .411.072.744.193 1.02a.75.75 0 01-1.373.603 3.993 3.993 0 01-.32-1.623c0-2.363 2.271-4.348 5.755-4.348 1.931 0 3.722.794 4.814 1.5a.75.75 0 11-.814 1.26c-.94-.607-2.448-1.26-4-1.26zm4.173 7.5h3.717a.75.75 0 000-1.5H3.75a.75.75 0 000 1.5h9.136c1.162.28 2.111.688 2.76 1.211.642.518.979 1.134.979 1.898a2.63 2.63 0 01-.954 2.036c-.703.601-1.934 1.105-3.999 1.105-2.018 0-3.529-.723-4.276-1.445a.75.75 0 10-1.042 1.08c1.066 1.028 2.968 1.865 5.318 1.865 2.295 0 3.916-.56 4.974-1.464a4.131 4.131 0 001.479-3.177c0-1.296-.608-2.316-1.538-3.066a5.77 5.77 0 00-.054-.043z\"></path>`,\n);\n\nexport const link = toSvg(\n  svg`<path d=\"M14.78 3.653a3.936 3.936 0 115.567 5.567l-3.627 3.627a3.936 3.936 0 01-5.88-.353.75.75 0 00-1.18.928 5.436 5.436 0 008.12.486l3.628-3.628a5.436 5.436 0 10-7.688-7.688l-3 3a.75.75 0 001.06 1.061l3-3z\"></path> <path d=\"M7.28 11.153a3.936 3.936 0 015.88.353.75.75 0 001.18-.928 5.436 5.436 0 00-8.12-.486L2.592 13.72a5.436 5.436 0 107.688 7.688l3-3a.75.75 0 10-1.06-1.06l-3 3a3.936 3.936 0 01-5.567-5.568l3.627-3.627z\"></path>`,\n);\n\nexport const heading = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M6.25 4a.75.75 0 01.75.75V11h10V4.75a.75.75 0 011.5 0v14.5a.75.75 0 01-1.5 0V12.5H7v6.75a.75.75 0 01-1.5 0V4.75A.75.75 0 016.25 4z\"></path>`,\n);\n\nexport const blockQuote = toSvg(\n  svg`<path d=\"M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z\" /> <path d=\"M7.066 6.76A1.665 1.665 0 0 0 4 7.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 0 0 .6.58c1.486-1.54 1.293-3.214.682-4.112zm4 0A1.665 1.665 0 0 0 8 7.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 0 0 .6.58c1.486-1.54 1.293-3.214.682-4.112z\" />`,\n  16,\n);\n\nexport const codeBlock = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M8.78 4.97a.75.75 0 010 1.06L2.81 12l5.97 5.97a.75.75 0 11-1.06 1.06l-6.5-6.5a.75.75 0 010-1.06l6.5-6.5a.75.75 0 011.06 0zm6.44 0a.75.75 0 000 1.06L21.19 12l-5.97 5.97a.75.75 0 101.06 1.06l6.5-6.5a.75.75 0 000-1.06l-6.5-6.5a.75.75 0 00-1.06 0z\"></path>`,\n);\n\nexport const bulletList = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M4 7a1 1 0 100-2 1 1 0 000 2zm4.75-1.5a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zM5 12a1 1 0 11-2 0 1 1 0 012 0zm-1 7a1 1 0 100-2 1 1 0 000 2z\"></path>`,\n);\n\nexport const orderedList = toSvg(svg`<path\n    d=\"M3.604 3.089A.75.75 0 014 3.75V8.5h.75a.75.75 0 010 1.5h-3a.75.75 0 110-1.5h.75V5.151l-.334.223a.75.75 0 01-.832-1.248l1.5-1a.75.75 0 01.77-.037zM8.75 5.5a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zm0 6a.75.75 0 000 1.5h11.5a.75.75 0 000-1.5H8.75zM5.5 15.75c0-.704-.271-1.286-.72-1.686a2.302 2.302 0 00-1.53-.564c-.535 0-1.094.178-1.53.565-.449.399-.72.982-.72 1.685a.75.75 0 001.5 0c0-.296.104-.464.217-.564A.805.805 0 013.25 15c.215 0 .406.072.533.185.113.101.217.268.217.565 0 .332-.069.48-.21.657-.092.113-.216.24-.403.419l-.147.14c-.152.144-.33.313-.52.504l-1.5 1.5a.75.75 0 00-.22.53v.25c0 .414.336.75.75.75H5A.75.75 0 005 19H3.31l.47-.47c.176-.176.333-.324.48-.465l.165-.156a5.98 5.98 0 00.536-.566c.358-.447.539-.925.539-1.593z\"></path>`);\n\nexport const attachFiles = toSvg(\n  svg`<path d=\"M4.5 3a2.5 2.5 0 0 1 5 0v9a1.5 1.5 0 0 1-3 0V5a.5.5 0 0 1 1 0v7a.5.5 0 0 0 1 0V3a1.5 1.5 0 1 0-3 0v9a2.5 2.5 0 0 0 5 0V5a.5.5 0 0 1 1 0v7a3.5 3.5 0 1 1-7 0V3z\" />`,\n  16,\n);\n\nexport const undo = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5z\" />`,\n  16,\n);\n\nexport const redo = toSvg(\n  svg`<path fill-rule=\"evenodd\" d=\"M1.5 1.5A.5.5 0 0 0 1 2v4.8a2.5 2.5 0 0 0 2.5 2.5h9.793l-3.347 3.346a.5.5 0 0 0 .708.708l4.2-4.2a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 8.3H3.5A1.5 1.5 0 0 1 2 6.8V2a.5.5 0 0 0-.5-.5z\" />`,\n  16,\n);\n\nexport const close = toSvg(\n  svg`<path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />`,\n  16,\n);\n\nexport const increaseIndentation = toSvg(\n  svg`<path d=\"M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm.646 2.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708-.708L4.293 8 2.646 6.354a.5.5 0 0 1 0-.708zM7 6.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 3a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm-5 3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z\"/>`,\n  16,\n);\n\nexport const decreaseIndentation = toSvg(\n  svg`<path d=\"M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm10.646 2.146a.5.5 0 0 1 .708.708L11.707 8l1.647 1.646a.5.5 0 0 1-.708.708l-2-2a.5.5 0 0 1 0-.708l2-2zM2 6.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 3a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z\"/>`,\n  16,\n);\n", "/**\n * A function that handles returning human readable file sizes.\n */\nexport function toMemorySize(bytes: number) {\n  const kilobytes = bytes / 1024;\n\n  if (kilobytes < 1) {\n    return bytes.toString() + \"B\";\n  }\n\n  const megabytes = kilobytes / 1024;\n\n  if (megabytes < 1) {\n    return kilobytes.toFixed(0).toString() + \" KB\";\n  }\n\n  return megabytes.toFixed(0).toString() + \" MB\";\n}\n", "import { css } from \"lit\";\n\nexport const normalize = css`\n  [hidden] {\n    display: none !important;\n  }\n\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  button {\n    background-color: inherit;\n    border: none;\n    color: inherit;\n    cursor: pointer;\n  }\n`;\n", "export const isiOS = /Mac|iOS|iPhone|iPad|iPod/i.test(\n  window.navigator.platform,\n);\n\nexport const modifierKey = isiOS ? \"cmd\" : \"ctrl\";\nexport const fileUploadErrorMessage = \"Unable to upload this file.\";\nexport const captionPlaceholder = \"Add a caption...\";\n\nexport const translations = {\n  attachFiles: \"Attach Files\",\n  bold: `Bold <${modifierKey}+b>`,\n  italics: `Italicize <${modifierKey}+i>`,\n  strike: `Strikethrough <${modifierKey}+shift+x>`,\n  link: `Link <${modifierKey}+k>`,\n  heading: `Heading <${modifierKey}+alt+1>`,\n  blockQuote: `Blockquote <${modifierKey}+shift+b>`,\n  codeBlock: `Codeblock <${modifierKey}+e>`,\n  bulletList: `Bullet List <${modifierKey}+shift+7>`,\n  orderedList: `Ordered List <${modifierKey}+shift+8>`,\n  undo: `Undo <${modifierKey}+z>`,\n  redo: `Redo <${modifierKey}+shift+z>`,\n  linkDialogLink: \"Link\",\n  linkDialogUnlink: \"Unlink\",\n  placeholder: \"Write something...\",\n  increaseIndentation: \"Increase indentation\",\n  decreaseIndentation: \"Decrease indentation\",\n  fileUploadErrorMessage: fileUploadErrorMessage,\n  captionPlaceholder: captionPlaceholder,\n} as const;\n", "import { css, html, TemplateResult } from \"lit\";\n\nimport { close } from \"../../internal/icons.js\";\nimport { toMemorySize } from \"../../internal/to-memory-size.js\";\nimport { normalize } from \"../styles/normalize.js\";\nimport { BaseElement } from \"../../internal/elements/base-element.js\";\nimport { fileUploadErrorMessage } from \"../translations.js\";\n\nexport const LOADING_STATES = Object.freeze({\n  notStarted: \"not-started\",\n  loading: \"loading\",\n  error: \"error\",\n  success: \"success\",\n});\n\nexport type LoadingState = (typeof LOADING_STATES)[keyof typeof LOADING_STATES];\n/**\n * An attachment editor element for managing tip-tap attachments. This encompasses the\n *   delete button, tooltip, and progress handler.\n */\nexport class AttachmentEditor extends BaseElement {\n  fileName?: string;\n  fileSize?: number;\n  progress?: number;\n  showMetadata?: boolean;\n  loadingState?: LoadingState;\n  fileUploadErrorMessage?: TemplateResult | string;\n  removeFigure: () => void;\n\n  constructor() {\n    super();\n    this.loadingState = \"not-started\";\n    this.fileUploadErrorMessage = fileUploadErrorMessage;\n\n    this.removeFigure = () => {};\n  }\n\n  static baseName = \"rhino-attachment-editor\";\n\n  close() {\n    return html`${close}`;\n  }\n\n  static get properties() {\n    return {\n      fileName: { attribute: \"file-name\", type: String },\n      fileSize: { attribute: \"file-size\", type: Number },\n      progress: { type: Number },\n      class: { attribute: \"class\", type: String },\n      loadingState: { attribute: \"loading-state\" },\n      fileUploadErrorMessage: { state: true },\n      showMetadata: {\n        attribute: \"show-metadata\",\n        reflect: true,\n        type: Boolean,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.classList.add(\"rhino-attachment-editor\");\n  }\n\n  static get styles() {\n    return css`\n      ${normalize}\n\n      :host {\n        position: absolute;\n        width: 100%;\n        pointer-events: none;\n        top: 0;\n        left: 0;\n        height: 100%;\n        z-index: 0;\n        --rhino-error-background-color: hsl(0 100% 89%);\n        --rhino-error-text-color: hsl(0 66% 30%);\n        --rhino-error-border-color: hsl(0 66% 30%);\n      }\n\n      button {\n        background-color: white;\n        border: 1px solid var(--rhino-button-active-border-color);\n        border-radius: 9999px;\n        display: flex;\n        align-items: center;\n        padding: 0.15rem;\n        position: absolute;\n        top: 0;\n        right: 50%;\n        transform: translate(50%, -20px);\n        pointer-events: all;\n      }\n\n      button svg {\n        height: 1.5rem;\n        width: 1.5rem;\n      }\n\n      button:is(:focus, :hover):not([aria-disabled=\"true\"], :disabled) {\n        outline: transparent;\n        background-color: rgb(240, 240, 240);\n      }\n\n      .file-metadata {\n        position: absolute;\n        left: 50%;\n        top: 2em;\n        transform: translate(-50%, 0);\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        max-width: 90%;\n        padding: 0.4rem 0.6rem;\n        outline: 1px solid white;\n        font-size: 0.8rem;\n        color: #fff;\n        background-color: hsla(0 0% 0% / 70%);\n        border-radius: 3px;\n      }\n\n      .file-name {\n        display: inline-block;\n        max-width: 100%;\n        vertical-align: bottom;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .file-size {\n        margin-left: 0.2em;\n        white-space: nowrap;\n      }\n\n      .file-progress-container {\n        top: 50%;\n        transform: translate(0px, -50%);\n        left: 5%;\n        width: 90%;\n        position: absolute;\n        z-index: 1;\n      }\n\n      .file-progress {\n        --border-radius: 8px;\n        --progress-value-color: blue;\n        --progress-background-color: #eee;\n        height: 10px;\n        padding: 0;\n        margin: 0;\n        opacity: 0.9;\n        width: 100%;\n        transition: opacity 200ms ease-out visibility 200ms ease-out;\n        border-radius: var(--border-radius);\n        background-color: var(--progress-background-color);\n        border: 1px solid gray;\n      }\n\n      progress::-webkit-progress-bar {\n        background-color: var(--progress-background-color);\n        border-radius: var(--border-radius);\n      }\n      progress::-webkit-progress-value {\n        background-color: var(--progress-value-color);\n        border-radius: var(--border-radius);\n      }\n      progress::-moz-progress-bar {\n        /* style rules */\n        border-radius: var(--border-radius);\n        background-color: var(--progress-value-color);\n      }\n\n      :host([loading-state=\"error\"]) .file-progress-error {\n        background-color: var(--rhino-error-background-color);\n        color: var(--rhino-error-text-color);\n        border: 1px solid var(--rhino-error-border-color);\n        padding: 0.4em 0.6em;\n        margin-top: 0.25rem;\n        display: inline-block;\n        border-radius: 8px;\n      }\n\n      :host([loading-state=\"error\"]) .file-progress {\n        background-color: var(--rhino-error-background-color);\n        border-color: var(--rhino-error-border-color);\n      }\n\n      .file-progress[value=\"100\"] {\n        opacity: 0;\n        visibility: hidden;\n      }\n    `;\n  }\n\n  toFileSize(): string {\n    if (this.fileSize) return toMemorySize(this.fileSize);\n\n    return \"\";\n  }\n\n  render() {\n    return html`\n      <button\n        class=\"delete-button\"\n        part=\"delete-button\"\n        @pointerdown=${(e: PointerEvent) => {\n          e.preventDefault();\n          this.removeFigure();\n        }}\n      >\n        ${this.close()}\n      </button>\n\n      <span\n        part=\"file-metadata\"\n        class=\"file-metadata\"\n        ?hidden=${!this.showMetadata || !(this.fileName || this.toFileSize())}\n      >\n        <span class=\"file-name\" part=\"file-name\">${this.fileName}</span>\n        <span class=\"file-size\" part=\"file-size\">${this.toFileSize()}</span>\n      </span>\n      <div class=\"file-progress-container\" part=\"file-progress-container\">\n        <progress\n          id=\"file-progress\"\n          class=\"file-progress\"\n          part=\"file-progress\"\n          value=${this.progress || 0}\n          min=\"0\"\n          max=\"100\"\n        ></progress>\n        <label\n          for=\"file-progress\"\n          class=\"file-progress-error\"\n          part=\"file-progress-error\"\n        >\n          ${this.loadingState === \"error\" ? this.fileUploadErrorMessage : null}\n        </label>\n      </div>\n    `;\n  }\n}\n", "import type { Maybe } from \"../types.js\";\nimport { toMemorySize } from \"./to-memory-size.js\";\n\ninterface CaptionParams {\n  fileName?: Maybe<string>;\n  fileSize?: Maybe<string | number>;\n}\n\nexport function toDefaultCaption({\n  fileName,\n  fileSize,\n}: CaptionParams): string {\n  if (!fileName || !fileSize) {\n    return \"\";\n  }\n\n  return `${fileName} \u00B7 ${toMemorySize(Number(fileSize))}`;\n}\n", "import { Maybe } from \"../types.js\";\nimport { uuidv4 } from \"../internal/uuidv4.js\";\nimport { EditorView } from \"@tiptap/pm/view\";\nimport { LOADING_STATES } from \"./elements/attachment-editor.js\";\nimport { toDefaultCaption } from \"../internal/to-default-caption.js\";\n\nexport interface AttachmentManagerAttributes {\n  src: string;\n\n  file?: Maybe<File>;\n\n  attachmentId?: Maybe<string>;\n  imageId?: Maybe<string>;\n  sgid?: Maybe<string>;\n  contentType?: Maybe<string>;\n  fileName?: Maybe<string>;\n  fileSize?: Maybe<number>;\n  content?: Maybe<string>;\n  caption?: Maybe<string>;\n  url?: Maybe<string>;\n  width?: Maybe<number>;\n  height?: Maybe<number>;\n  previewable?: Maybe<boolean>;\n}\n\n/**\n * An attachment manager that matches the interface of Trix's attachment manager.\n *   This is what gets built on \"rhino-attachment-add\"\n */\nexport class AttachmentManager implements AttachmentManagerAttributes {\n  attributes: AttachmentManagerAttributes;\n  editorView: EditorView;\n\n  static get previewableRegex() {\n    return /^image(\\/(gif|png|jpe?g)|$)/;\n  }\n\n  static isPreviewable(str: string) {\n    // (this || AttachmentManager) works around a strange bug in ESBuild v0.14.17 around how it transpiles static functions.\n    return (this || AttachmentManager).previewableRegex.test(str);\n  }\n\n  constructor(obj: AttachmentManagerAttributes, editorView: EditorView) {\n    this.editorView = editorView;\n    this.attributes = {\n      attachmentId: uuidv4(),\n      content: null,\n      imageId: uuidv4(),\n      sgid: null,\n      url: null,\n      ...obj,\n    };\n\n    this.attributes.previewable = this.isPreviewable;\n  }\n\n  setUploadProgress(progress: number): void {\n    if (this.content == null) {\n      this.setNodeMarkup({\n        progress,\n        loadingState:\n          progress >= 100 ? LOADING_STATES.success : LOADING_STATES.loading,\n      });\n    }\n  }\n\n  setAttributes(obj: Partial<AttachmentManagerAttributes>) {\n    this.attributes = Object.assign(this.attributes, obj);\n\n    /**\n     * These are the old Trix custom attachment APIs.\n     */\n    if (obj.content) {\n      this.setNodeMarkup({\n        sgid: this.attributes.sgid,\n        content: this.attributes.content,\n        previewable: this.isPreviewable,\n      });\n\n      return;\n    }\n\n    /**\n     * Sometimes we don't have a URL. We need that.\n     */\n    if (!obj.url) {\n      return;\n    }\n    if (this.isPreviewable) {\n      /** This preloads the image so we don't show a big flash. */\n      const image = new Image();\n\n      image.setAttribute(\"src\", obj.url);\n\n      image.onload = () => {\n        this.attributes.width = image.naturalWidth;\n        this.attributes.height = image.naturalHeight;\n\n        this.setNodeMarkup({\n          sgid: this.attributes.sgid,\n          url: this.attributes.url,\n          src: this.attributes.url,\n          href: this.attributes.url + \"?content-disposition=attachment\",\n          width: this.attributes.width,\n          height: this.attributes.height,\n          contentType: this.contentType,\n          previewable: this.isPreviewable,\n        });\n        image.remove();\n      };\n      return;\n    }\n\n    /**\n     * These are non-previewable assets like CSVs, Word docs, etc.\n     */\n    this.setNodeMarkup({\n      sgid: this.attributes.sgid,\n      url: this.attributes.url,\n      contentType: this.contentType,\n      previewable: this.isPreviewable,\n    });\n  }\n\n  /**\n   * Helper function to set the markup for an attachment. We map a uuid to the \"attachmentId\"\n   * of the TipTap node to guarantee we're targeting the right one.\n   */\n  setNodeMarkup(obj: Record<string, unknown>) {\n    const view = this.editorView;\n\n    if (view == null) return;\n\n    view.state.doc.descendants((descendantNode, position: number) => {\n      if (descendantNode.attrs.attachmentId === this.attachmentId) {\n        view.dispatch(\n          view.state.tr.setNodeMarkup(position, undefined, {\n            ...descendantNode.attrs,\n            ...obj,\n          }),\n        );\n      }\n    });\n  }\n\n  /**\n   * This is an internal ID used for finding newly attached attachments in the TipTap editor.\n   * This is used primarily for direct upload purposes.\n   * This generally won't exist when a node is recreated from you database.\n   */\n  get attachmentId() {\n    return this.attributes.attachmentId;\n  }\n\n  /**\n   * This is an internal ID used for finding newly attached images in the TipTap editor.\n   * This is used primarily for direct upload purposes.\n   * This generally won't exist when a node is recreated from you database.\n   */\n  get imageId() {\n    return this.attributes.imageId;\n  }\n\n  /**\n   * `src` (when present) always maps to a URL.createObjectURL.\n   */\n  get src() {\n    return this.attributes.src;\n  }\n\n  set src(val: string) {\n    this.attributes.src = val;\n  }\n\n  get sgid() {\n    return this.attributes.sgid;\n  }\n\n  get file() {\n    return this.attributes.file;\n  }\n\n  get contentType() {\n    return this.attributes.contentType || this.file?.type;\n  }\n\n  get fileName() {\n    return this.attributes.fileName || this.file?.name;\n  }\n\n  get fileSize() {\n    return this.attributes.fileSize || this.file?.size;\n  }\n\n  /**\n   * This field is populated by the old Trix custom attachment API and denotes if we're using a custom\n   * attachment.\n   */\n  get content() {\n    return this.attributes.content;\n  }\n\n  set content(val: Maybe<string>) {\n    this.attributes.content = val;\n  }\n\n  get height() {\n    return this.attributes.height;\n  }\n\n  get width() {\n    return this.attributes.width;\n  }\n\n  get isPreviewable() {\n    const isPreviewable = (\n      this.constructor as unknown as typeof AttachmentManager\n    ).isPreviewable;\n\n    const contentType = this.contentType;\n\n    return isPreviewable(contentType || \"\");\n  }\n\n  get caption() {\n    const defaultCaption = toDefaultCaption({\n      fileName: this.attributes.fileName,\n      fileSize: this.attributes.fileSize,\n    });\n    // We want to set a real caption for non-previewable assets to prevent them from getting cleared out.\n    if (this.isPreviewable) {\n      return defaultCaption;\n    }\n\n    return this.attributes.caption || defaultCaption || \"\";\n  }\n}\n", "import { Selection, Transaction } from \"@tiptap/pm/state\";\nimport { ReplaceAroundStep, ReplaceStep } from \"@tiptap/pm/transform\";\n\n// source: https://github.com/ueberdosis/tiptap/blob/8c6751f0c638effb22110b62b40a1632ea6867c9/packages/core/src/helpers/selectionToInsertionEnd.ts\nexport function selectionToInsertionEnd(\n  tr: Transaction,\n  startLen: number,\n  bias: number,\n) {\n  const last = tr.steps.length - 1;\n\n  if (last < startLen) {\n    return;\n  }\n\n  const step = tr.steps[last];\n\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n    return;\n  }\n\n  const map = tr.mapping.maps[last];\n  let end = 0;\n\n  map.forEach((_from, _to, _newFrom, newTo) => {\n    if (end === 0) {\n      end = newTo;\n    }\n  });\n\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n", "export function findAttribute(element: HTMLElement, attribute: string) {\n  const attr = element\n    .closest(\"action-text-attachment\")\n    ?.getAttribute(attribute);\n  if (attr) return attr;\n\n  const attrs = element\n    .closest(\"[data-trix-attachment]\")\n    ?.getAttribute(\"data-trix-attachment\");\n  if (!attrs) return null;\n\n  return JSON.parse(attrs)[attribute];\n}\n", "import type { Node as PMNode, ResolvedPos } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\nimport type {\n  FindPredicate,\n  FindResult,\n  DomAtPos,\n  NodeTypeParam,\n} from './types';\nimport { equalNodeType, isNodeSelection } from './helpers';\n\n// Iterates over parent nodes, returning the closest node and its start position `predicate` returns truthy for. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const predicate = node => node.type === schema.nodes.blockquote;\n// const parent = findParentNode(predicate)(selection);\n// ```\nexport const findParentNode =\n  (predicate: FindPredicate) =>\n  (\n    { $from, $to }: Selection,\n    validateSameParent: boolean = false\n  ): FindResult => {\n    // Check if parent are different\n    if (validateSameParent && !$from.sameParent($to)) {\n      // If they are, I need to find a common parent\n      let depth = Math.min($from.depth, $to.depth);\n      while (depth >= 0) {\n        const fromNode = $from.node(depth);\n        const toNode = $to.node(depth);\n        if (toNode === fromNode) {\n          // The have the same parent\n          if (predicate(fromNode)) {\n            // Check the predicate\n            return {\n              // Return the resolved pos\n              pos: depth > 0 ? $from.before(depth) : 0,\n              start: $from.start(depth),\n              depth: depth,\n              node: fromNode,\n            };\n          }\n        }\n        depth = depth - 1; // Keep looking\n      }\n      return;\n    }\n\n    return findParentNodeClosestToPos($from, predicate);\n  };\n\n// Iterates over parent nodes starting from the given `$pos`, returning the closest node and its start position `predicate` returns truthy for. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const predicate = node => node.type === schema.nodes.blockquote;\n// const parent = findParentNodeClosestToPos(state.doc.resolve(5), predicate);\n// ```\nexport const findParentNodeClosestToPos = (\n  $pos: ResolvedPos,\n  predicate: FindPredicate\n): FindResult => {\n  for (let i = $pos.depth; i > 0; i--) {\n    const node = $pos.node(i);\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node,\n      };\n    }\n  }\n};\n\n// Iterates over parent nodes, returning DOM reference of the closest node `predicate` returns truthy for.\n//\n// ```javascript\n// const domAtPos = view.domAtPos.bind(view);\n// const predicate = node => node.type === schema.nodes.table;\n// const parent = findParentDomRef(predicate, domAtPos)(selection); // <table>\n// ```\nexport const findParentDomRef =\n  (predicate: FindPredicate, domAtPos: DomAtPos) =>\n  (selection: Selection): Node | undefined => {\n    const parent = findParentNode(predicate)(selection);\n    if (parent) {\n      return findDomRefAtPos(parent.pos, domAtPos);\n    }\n  };\n\n// Checks if there's a parent node `predicate` returns truthy for.\n//\n// ```javascript\n// if (hasParentNode(node => node.type === schema.nodes.table)(selection)) {\n//   // ....\n// }\n// ```\nexport const hasParentNode =\n  (predicate: FindPredicate) =>\n  (selection: Selection): boolean => {\n    return !!findParentNode(predicate)(selection);\n  };\n\n// Iterates over parent nodes, returning closest node of a given `nodeType`. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const parent = findParentNodeOfType(schema.nodes.paragraph)(selection);\n// ```\nexport const findParentNodeOfType =\n  (nodeType: NodeTypeParam) =>\n  (selection: Selection): FindResult => {\n    return findParentNode((node) => equalNodeType(nodeType, node))(selection);\n  };\n\n// Iterates over parent nodes starting from the given `$pos`, returning closest node of a given `nodeType`. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const parent = findParentNodeOfTypeClosestToPos(state.doc.resolve(10), schema.nodes.paragraph);\n// ```\nexport const findParentNodeOfTypeClosestToPos = (\n  $pos: ResolvedPos,\n  nodeType: NodeTypeParam\n): FindResult => {\n  return findParentNodeClosestToPos($pos, (node: PMNode) =>\n    equalNodeType(nodeType, node)\n  );\n};\n\n// Checks if there's a parent node of a given `nodeType`.\n//\n// ```javascript\n// if (hasParentNodeOfType(schema.nodes.table)(selection)) {\n//   // ....\n// }\n// ```\nexport const hasParentNodeOfType =\n  (nodeType: NodeTypeParam) =>\n  (selection: Selection): boolean => {\n    return hasParentNode((node) => equalNodeType(nodeType, node))(selection);\n  };\n\n// Iterates over parent nodes, returning DOM reference of the closest node of a given `nodeType`.\n//\n// ```javascript\n// const domAtPos = view.domAtPos.bind(view);\n// const parent = findParentDomRefOfType(schema.nodes.codeBlock, domAtPos)(selection); // <pre>\n// ```\nexport const findParentDomRefOfType =\n  (nodeType: NodeTypeParam, domAtPos: DomAtPos) =>\n  (selection: Selection): Node | undefined => {\n    return findParentDomRef(\n      (node) => equalNodeType(nodeType, node),\n      domAtPos\n    )(selection);\n  };\n\n// Returns a node of a given `nodeType` if it is selected. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const { extension, inlineExtension, bodiedExtension } = schema.nodes;\n// const selectedNode = findSelectedNodeOfType([\n//   extension,\n//   inlineExtension,\n//   bodiedExtension,\n// ])(selection);\n// ```\nexport const findSelectedNodeOfType =\n  (nodeType: NodeTypeParam) =>\n  (selection: Selection): FindResult => {\n    if (isNodeSelection(selection)) {\n      const { node, $from } = selection;\n      if (equalNodeType(nodeType, node)) {\n        return {\n          node,\n          start: $from.start(),\n          pos: $from.pos,\n          depth: $from.depth,\n        };\n      }\n    }\n  };\n\n// Returns position of the previous node.\n//\n// ```javascript\n// const pos = findPositionOfNodeBefore(tr.selection);\n// ```\nexport const findPositionOfNodeBefore = (\n  selection: Selection\n): number | undefined => {\n  const { nodeBefore } = selection.$from;\n  const maybeSelection = Selection.findFrom(selection.$from, -1);\n  if (maybeSelection && nodeBefore) {\n    // leaf node\n    const parent = findParentNodeOfType(nodeBefore.type)(maybeSelection);\n    if (parent) {\n      return parent.pos;\n    }\n    return maybeSelection.$from.pos;\n  }\n};\n\n// Returns DOM reference of a node at a given `position`. If the node type is of type `TEXT_NODE` it will return the reference of the parent node.\n//\n// ```javascript\n// const domAtPos = view.domAtPos.bind(view);\n// const ref = findDomRefAtPos($from.pos, domAtPos);\n// ```\nexport const findDomRefAtPos = (position: number, domAtPos: DomAtPos): Node => {\n  const dom = domAtPos(position);\n  const node = dom.node.childNodes[dom.offset];\n\n  if (dom.node.nodeType === Node.TEXT_NODE && dom.node.parentNode) {\n    return dom.node.parentNode;\n  }\n\n  if (!node || node.nodeType === Node.TEXT_NODE) {\n    return dom.node;\n  }\n\n  return node;\n};\n", "import { Selection, NodeSelection, type Transaction } from 'prosemirror-state';\nimport { Fragment, Node as PMNode, type ResolvedPos } from 'prosemirror-model';\nimport { setTextSelection } from './transforms';\nimport type { NodeTypeParam, Content } from './types';\n\n// Checks if current selection is a `NodeSelection`.\n//\n// ```javascript\n// if (isNodeSelection(tr.selection)) {\n//   // ...\n// }\n// ```\nexport const isNodeSelection = (\n  selection: Selection\n): selection is NodeSelection => {\n  return selection instanceof NodeSelection;\n};\n\n// Checks if the type a given `node` equals to a given `nodeType`.\nexport const equalNodeType = (\n  nodeType: NodeTypeParam,\n  node: PMNode\n): boolean => {\n  return (\n    (Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1) ||\n    node.type === nodeType\n  );\n};\n\n// Creates a new transaction object from a given transaction\nexport const cloneTr = (tr: Transaction): Transaction => {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now());\n};\n\n// Returns a `replace` transaction that replaces a node at a given position with the given `content`.\n// It will return the original transaction if replacing is not possible.\n// `position` should point at the position immediately before the node.\nexport const replaceNodeAtPos =\n  (position: number, content: Content) =>\n  (tr: Transaction): Transaction => {\n    const node = tr.doc.nodeAt(position);\n    const $pos = tr.doc.resolve(position);\n    if (!node) {\n      return tr;\n    }\n\n    if (canReplace($pos, content)) {\n      tr = tr.replaceWith(position, position + node.nodeSize, content);\n      const start = tr.selection.$from.pos - 1;\n      // put cursor inside of the inserted node\n      tr = setTextSelection(Math.max(start, 0), -1)(tr);\n      // move cursor to the start of the node\n      tr = setTextSelection(tr.selection.$from.start())(tr);\n      return cloneTr(tr);\n    }\n    return tr;\n  };\n\n// Checks if replacing a node at a given `$pos` inside of the `doc` node with the given `content` is possible.\nexport const canReplace = ($pos: ResolvedPos, content: Content): boolean => {\n  const node = $pos.node($pos.depth);\n  return (\n    node &&\n    node.type.validContent(\n      content instanceof Fragment ? content : Fragment.from(content)\n    )\n  );\n};\n\n// Returns a `delete` transaction that removes a node at a given position with the given `node`.\n// `position` should point at the position immediately before the node.\nexport const removeNodeAtPos =\n  (position: number) =>\n  (tr: Transaction): Transaction => {\n    const node = tr.doc.nodeAt(position);\n    if (!node) {\n      return tr;\n    }\n\n    return cloneTr(tr.delete(position, position + node.nodeSize));\n  };\n\n// Checks if a given `content` can be inserted at the given `$pos`\n//\n// ```javascript\n// const { selection: { $from } } = state;\n// const node = state.schema.nodes.atom.createChecked();\n// if (canInsert($from, node)) {\n//   // ...\n// }\n// ```\nexport const canInsert = ($pos: ResolvedPos, content: Content): boolean => {\n  const index = $pos.index();\n\n  if (content instanceof Fragment) {\n    return $pos.parent.canReplace(index, index, content);\n  } else if (content instanceof PMNode) {\n    return $pos.parent.canReplaceWith(index, index, content.type);\n  }\n  return false;\n};\n\n// Checks if a given `node` is an empty paragraph\nexport const isEmptyParagraph = (node: PMNode): boolean => {\n  return !node || (node.type.name === 'paragraph' && node.nodeSize === 2);\n};\n\nexport const checkInvalidMovements = (\n  originIndex: number,\n  targetIndex: number,\n  targets: number[],\n  type: unknown\n): boolean => {\n  const direction = originIndex > targetIndex ? -1 : 1;\n  const errorMessage = `Target position is invalid, you can't move the ${type} ${originIndex} to ${targetIndex}, the target can't be split. You could use tryToFit option.`;\n\n  if (direction === 1) {\n    if (targets.slice(0, targets.length - 1).indexOf(targetIndex) !== -1) {\n      throw new Error(errorMessage);\n    }\n  } else {\n    if (targets.slice(1).indexOf(targetIndex) !== -1) {\n      throw new Error(errorMessage);\n    }\n  }\n\n  return true;\n};\n", "import { NodeSelection, Selection, type Transaction } from 'prosemirror-state';\nimport {\n  Fragment,\n  Node as PMNode,\n  type NodeType,\n  Mark,\n} from 'prosemirror-model';\nimport { findParentNodeOfType, findPositionOfNodeBefore } from './selection';\nimport {\n  cloneTr,\n  isNodeSelection,\n  replaceNodeAtPos,\n  removeNodeAtPos,\n  canInsert,\n  isEmptyParagraph,\n} from './helpers';\nimport type { Attrs, NodeTypeParam, Content } from './types';\n\n// Returns a new transaction that removes a node of a given `nodeType`. It will return an original transaction if parent node hasn't been found.\n//\n// ```javascript\n// dispatch(\n//   removeParentNodeOfType(schema.nodes.table)(tr)\n// );\n// ```\nexport const removeParentNodeOfType =\n  (nodeType: NodeTypeParam) =>\n  (tr: Transaction): Transaction => {\n    const parent = findParentNodeOfType(nodeType)(tr.selection);\n    if (parent) {\n      return removeNodeAtPos(parent.pos)(tr);\n    }\n    return tr;\n  };\n\n// Returns a new transaction that replaces parent node of a given `nodeType` with the given `content`. It will return an original transaction if either parent node hasn't been found or replacing is not possible.\n//\n// ```javascript\n// const node = schema.nodes.paragraph.createChecked({}, schema.text('new'));\n//\n// dispatch(\n//  replaceParentNodeOfType(schema.nodes.table, node)(tr)\n// );\n// ```\nexport const replaceParentNodeOfType =\n  (nodeType: NodeTypeParam, content: Content) =>\n  (tr: Transaction): Transaction => {\n    if (!Array.isArray(nodeType)) {\n      nodeType = [nodeType];\n    }\n    for (let i = 0, count = nodeType.length; i < count; i++) {\n      const parent = findParentNodeOfType(nodeType[i])(tr.selection);\n      if (parent) {\n        const newTr = replaceNodeAtPos(parent.pos, content)(tr);\n        if (newTr !== tr) {\n          return newTr;\n        }\n      }\n    }\n    return tr;\n  };\n\n// Returns a new transaction that removes selected node. It will return an original transaction if current selection is not a `NodeSelection`.\n//\n// ```javascript\n// dispatch(\n//   removeSelectedNode(tr)\n// );\n// ```\nexport const removeSelectedNode = (tr: Transaction): Transaction => {\n  if (isNodeSelection(tr.selection)) {\n    const from = tr.selection.$from.pos;\n    const to = tr.selection.$to.pos;\n    return cloneTr(tr.delete(from, to));\n  }\n  return tr;\n};\n\n// Returns a new transaction that replaces selected node with a given `node`, keeping NodeSelection on the new `node`.\n// It will return the original transaction if either current selection is not a NodeSelection or replacing is not possible.\n//\n// ```javascript\n// const node = schema.nodes.paragraph.createChecked({}, schema.text('new'));\n// dispatch(\n//   replaceSelectedNode(node)(tr)\n// );\n// ```\nexport const replaceSelectedNode =\n  (content: Content) =>\n  (tr: Transaction): Transaction => {\n    if (isNodeSelection(tr.selection)) {\n      const { $from, $to } = tr.selection;\n      if (\n        (content instanceof Fragment &&\n          $from.parent.canReplace(\n            $from.index(),\n            $from.indexAfter(),\n            content\n          )) ||\n        (content instanceof PMNode &&\n          $from.parent.canReplaceWith(\n            $from.index(),\n            $from.indexAfter(),\n            content.type\n          ))\n      ) {\n        return cloneTr(\n          tr\n            .replaceWith($from.pos, $to.pos, content)\n            // restore node selection\n            .setSelection(new NodeSelection(tr.doc.resolve($from.pos)))\n        );\n      }\n    }\n    return tr;\n  };\n\n// Returns a new transaction that tries to find a valid cursor selection starting at the given `position`\n// and searching back if `dir` is negative, and forward if positive.\n// If a valid cursor position hasn't been found, it will return the original transaction.\n//\n// ```javascript\n// dispatch(\n//   setTextSelection(5)(tr)\n// );\n// ```\nexport const setTextSelection =\n  (position: number, dir = 1) =>\n  (tr: Transaction): Transaction => {\n    const nextSelection = Selection.findFrom(\n      tr.doc.resolve(position),\n      dir,\n      true\n    );\n    if (nextSelection) {\n      return tr.setSelection(nextSelection);\n    }\n    return tr;\n  };\n\nconst isSelectableNode = (node: Content): node is PMNode =>\n  Boolean(node instanceof PMNode && node.type && node.type.spec.selectable);\nconst shouldSelectNode = (node: Content): boolean =>\n  isSelectableNode(node) && node.type.isLeaf;\n\nconst setSelection = (\n  node: Content,\n  pos: number,\n  tr: Transaction\n): Transaction => {\n  if (shouldSelectNode(node)) {\n    return tr.setSelection(new NodeSelection(tr.doc.resolve(pos)));\n  }\n  return setTextSelection(pos)(tr);\n};\n\n// Returns a new transaction that inserts a given `content` at the current cursor position, or at a given `position`, if it is allowed by schema. If schema restricts such nesting, it will try to find an appropriate place for a given node in the document, looping through parent nodes up until the root document node.\n// If `tryToReplace` is true and current selection is a NodeSelection, it will replace selected node with inserted content if its allowed by schema.\n// If cursor is inside of an empty paragraph, it will try to replace that paragraph with the given content. If insertion is successful and inserted node has content, it will set cursor inside of that content.\n// It will return an original transaction if the place for insertion hasn't been found.\n//\n// ```javascript\n// const node = schema.nodes.extension.createChecked({});\n// dispatch(\n//   safeInsert(node)(tr)\n// );\n// ```\nexport const safeInsert =\n  (content: Content, position?: number, tryToReplace?: boolean) =>\n  (tr: Transaction): Transaction => {\n    const hasPosition = typeof position === 'number';\n    const { $from } = tr.selection;\n    const $insertPos = hasPosition\n      ? tr.doc.resolve(position)\n      : isNodeSelection(tr.selection)\n      ? tr.doc.resolve($from.pos + 1)\n      : $from;\n    const { parent } = $insertPos;\n\n    // try to replace selected node\n    if (isNodeSelection(tr.selection) && tryToReplace) {\n      const oldTr = tr;\n      tr = replaceSelectedNode(content)(tr);\n      if (oldTr !== tr) {\n        return tr;\n      }\n    }\n\n    // try to replace an empty paragraph\n    if (isEmptyParagraph(parent)) {\n      const oldTr = tr;\n      tr = replaceParentNodeOfType(parent.type, content)(tr);\n      if (oldTr !== tr) {\n        const pos = isSelectableNode(content)\n          ? // for selectable node, selection position would be the position of the replaced parent\n            $insertPos.before($insertPos.depth)\n          : $insertPos.pos;\n        return setSelection(content, pos, tr);\n      }\n    }\n\n    // given node is allowed at the current cursor position\n    if (canInsert($insertPos, content)) {\n      tr.insert($insertPos.pos, content);\n      const pos = hasPosition\n        ? $insertPos.pos\n        : isSelectableNode(content)\n        ? // for atom nodes selection position after insertion is the previous pos\n          tr.selection.$anchor.pos - 1\n        : tr.selection.$anchor.pos;\n      return cloneTr(setSelection(content, pos, tr));\n    }\n\n    // looking for a place in the doc where the node is allowed\n    for (let i = $insertPos.depth; i > 0; i--) {\n      const pos = $insertPos.after(i);\n      const $pos = tr.doc.resolve(pos);\n      if (canInsert($pos, content)) {\n        tr.insert(pos, content);\n        return cloneTr(setSelection(content, pos, tr));\n      }\n    }\n    return tr;\n  };\n\n// Returns a transaction that changes the type, attributes, and/or marks of the parent node of a given `nodeType`.\n//\n// ```javascript\n// const node = schema.nodes.extension.createChecked({});\n// dispatch(\n//   setParentNodeMarkup(schema.nodes.panel, null, { panelType })(tr);\n// );\n// ```\nexport const setParentNodeMarkup =\n  (\n    nodeType: NodeTypeParam,\n    type: NodeType | null,\n    attrs?: Attrs | null,\n    marks?: Array<Mark> | ReadonlyArray<Mark>\n  ) =>\n  (tr: Transaction): Transaction => {\n    const parent = findParentNodeOfType(nodeType)(tr.selection);\n    if (parent) {\n      return cloneTr(\n        tr.setNodeMarkup(\n          parent.pos,\n          type,\n          Object.assign({}, parent.node.attrs, attrs),\n          marks\n        )\n      );\n    }\n    return tr;\n  };\n\n// Returns a new transaction that sets a `NodeSelection` on a parent node of a `given nodeType`.\n//\n// ```javascript\n// dispatch(\n//   selectParentNodeOfType([tableCell, tableHeader])(state.tr)\n// );\n// ```\nexport const selectParentNodeOfType =\n  (nodeType: NodeTypeParam) =>\n  (tr: Transaction): Transaction => {\n    if (!isNodeSelection(tr.selection)) {\n      const parent = findParentNodeOfType(nodeType)(tr.selection);\n      if (parent) {\n        return cloneTr(\n          tr.setSelection(NodeSelection.create(tr.doc, parent.pos))\n        );\n      }\n    }\n    return tr;\n  };\n\n// Returns a new transaction that deletes previous node.\n//\n// ```javascript\n// dispatch(\n//   removeNodeBefore(state.tr)\n// );\n// ```\nexport const removeNodeBefore = (tr: Transaction): Transaction => {\n  const position = findPositionOfNodeBefore(tr.selection);\n  if (typeof position === 'number') {\n    return removeNodeAtPos(position)(tr);\n  }\n  return tr;\n};\n", "import { type Node as PMNode, MarkType, NodeType } from 'prosemirror-model';\nimport type { Attrs } from './types';\n\ntype FindChildrenAttrsPredicate = (attrs: Attrs) => boolean;\ntype FindNodesResult = Array<{ node: PMNode; pos: number }>;\ntype FindChildrenPredicate = (node: PMNode) => boolean;\n\n// Flattens descendants of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const children = flatten(node);\n// ```\nexport const flatten = (\n  node: PMNode,\n  descend: boolean = true\n): FindNodesResult => {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  }\n  const result: FindNodesResult = [];\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos });\n    if (!descend) {\n      return false;\n    }\n  });\n  return result;\n};\n\n// Iterates over descendants of a given `node`, returning child nodes predicate returns truthy for. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const textNodes = findChildren(node, child => child.isText, false);\n// ```\nexport const findChildren = (\n  node: PMNode,\n  predicate: FindChildrenPredicate,\n  descend: boolean = true\n): FindNodesResult => {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  } else if (!predicate) {\n    throw new Error('Invalid \"predicate\" parameter');\n  }\n  return flatten(node, descend).filter((child) => predicate(child.node));\n};\n\n// Returns text nodes of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const textNodes = findTextNodes(node);\n// ```\nexport const findTextNodes = (\n  node: PMNode,\n  descend: boolean = true\n): FindNodesResult => {\n  return findChildren(node, (child) => child.isText, descend);\n};\n\n// Returns inline nodes of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const inlineNodes = findInlineNodes(node);\n// ```\nexport const findInlineNodes = (\n  node: PMNode,\n  descend: boolean = true\n): FindNodesResult => {\n  return findChildren(node, (child) => child.isInline, descend);\n};\n\n// Returns block descendants of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const blockNodes = findBlockNodes(node);\n// ```\nexport const findBlockNodes = (\n  node: PMNode,\n  descend: boolean = true\n): FindNodesResult => {\n  return findChildren(node, (child) => child.isBlock, descend);\n};\n\n// Iterates over descendants of a given `node`, returning child nodes predicate returns truthy for. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const mergedCells = findChildrenByAttr(table, attrs => attrs.colspan === 2);\n// ```\nexport const findChildrenByAttr = (\n  node: PMNode,\n  predicate: FindChildrenAttrsPredicate,\n  descend: boolean = true\n): FindNodesResult => {\n  return findChildren(node, (child) => !!predicate(child.attrs), descend);\n};\n\n// Iterates over descendants of a given `node`, returning child nodes of a given nodeType. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const cells = findChildrenByType(table, schema.nodes.tableCell);\n// ```\nexport const findChildrenByType = (\n  node: PMNode,\n  nodeType: NodeType,\n  descend: boolean = true\n): FindNodesResult => {\n  return findChildren(node, (child) => child.type === nodeType, descend);\n};\n\n// Iterates over descendants of a given `node`, returning child nodes that have a mark of a given markType. It doesn't descend into a `node` when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const nodes = findChildrenByMark(state.doc, schema.marks.strong);\n// ```\nexport const findChildrenByMark = (\n  node: PMNode,\n  markType: MarkType,\n  descend: boolean = true\n): FindNodesResult => {\n  return findChildren(\n    node,\n    (child) => Boolean(markType.isInSet(child.marks)),\n    descend\n  );\n};\n\n// Returns `true` if a given node contains nodes of a given `nodeType`\n//\n// ```javascript\n// if (contains(panel, schema.nodes.listItem)) {\n//   // ...\n// }\n// ```\nexport const contains = (node: PMNode, nodeType: NodeType): boolean => {\n  return !!findChildrenByType(node, nodeType).length;\n};\n", "/**\n * Base class to be extended.\n */\nexport class BaseEvent extends Event {\n  static eventName: string;\n  constructor(name: string, options?: EventInit | undefined) {\n    if (options == null) options = {};\n    if (options.bubbles == null) options.bubbles = true;\n    if (options.composed == null) options.composed = true;\n    if (options.cancelable == null) options.cancelable = true;\n    super(name, options);\n  }\n}\n", "import { AttachmentManager } from \"../attachment-manager.js\";\nimport { BaseEvent } from \"./base-event.js\";\n\n/**\n * A mapping of the \"trix-attachment-add\" for Rhino that follows the same construct.\n *   Fires after an attachment has been added.\n */\nexport class AttachmentRemoveEvent extends BaseEvent {\n  static eventName = \"rhino-attachment-remove\" as const;\n\n  constructor(\n    public attachment: AttachmentManager,\n    options: Partial<EventInit> = {},\n  ) {\n    super(AttachmentRemoveEvent.eventName, options);\n    this.attachment = attachment;\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [AttachmentRemoveEvent.eventName]: AttachmentRemoveEvent;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<T, F>(\n  condition: true,\n  trueCase: () => T,\n  falseCase?: () => F\n): T;\nexport function when<T, F = undefined>(\n  condition: false,\n  trueCase: () => T,\n  falseCase?: () => F\n): F;\nexport function when<T, F = undefined>(\n  condition: unknown,\n  trueCase: () => T,\n  falseCase?: () => F\n): T | F;\nexport function when(\n  condition: unknown,\n  trueCase: () => unknown,\n  falseCase?: () => unknown\n): unknown {\n  return condition ? trueCase() : falseCase?.();\n}\n", "import {\n  AttachmentManager,\n  AttachmentManagerAttributes,\n} from \"../attachment-manager.js\";\nimport { LOADING_STATES } from \"../elements/attachment-editor.js\";\nimport type { LoadingState } from \"../elements/attachment-editor.js\";\nimport { CommandProps, mergeAttributes, Node } from \"@tiptap/core\";\nimport { selectionToInsertionEnd } from \"../../internal/selection-to-insertion-end.js\";\nimport { Maybe } from \"../../types\";\nimport { findAttribute } from \"./find-attribute.js\";\nimport { toDefaultCaption } from \"../../internal/to-default-caption.js\";\nimport { fileUploadErrorMessage, captionPlaceholder } from \"../translations.js\";\nimport {\n  findChildrenByType,\n  findParentNodeOfTypeClosestToPos,\n} from \"prosemirror-utils\";\nimport { AttachmentRemoveEvent } from \"../events/attachment-remove-event.js\";\n\nimport { render, html } from \"lit/html.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport {\n  EditorState,\n  NodeSelection,\n  Plugin,\n  PluginKey,\n  TextSelection,\n  Transaction,\n} from \"@tiptap/pm/state\";\nimport {\n  DOMSerializer,\n  Node as ProseMirrorNode,\n  ResolvedPos,\n} from \"@tiptap/pm/model\";\n\ninterface AttachmentAttrs extends AttachmentManagerAttributes {\n  loadingState: LoadingState;\n  previewable: boolean;\n  progress: number;\n\n  // Image\n  width?: Maybe<number>;\n  height?: Maybe<number>;\n\n  [key: string]: unknown;\n}\n\nexport interface AttachmentOptions {\n  HTMLAttributes: Record<string, any>;\n  fileUploadErrorMessage: string;\n  captionPlaceholder: string;\n  previewable: boolean;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    attachment: {\n      /**\n       * Add an attachment(s)\n       */\n      setAttachment: (\n        options: AttachmentManager | AttachmentManager[],\n      ) => ReturnType;\n\n      /**\n       * Allows you to insert an attachment at a location within TipTap\n       */\n      setAttachmentAtCoords: (\n        options: AttachmentManager | AttachmentManager[],\n        coordinates: { top: number; left: number },\n      ) => ReturnType;\n    };\n  }\n}\n\nexport const figureTypes = [\n  \"previewable-attachment-figure\",\n  \"attachment-figure\",\n];\n\n/**\n * This is a special case where it exists as:\n * figure[\"data-trix-attachment\"][\"contentType\"] and\n * action-text-attachment[\"content-type\"]\n */\nfunction parseContentTypeFromElement(element: HTMLElement) {\n  return (\n    findAttribute(element, \"content-type\") ||\n    JSON.parse(element.getAttribute(\"data-trix-attachment\") || \"{}\")\n      .contentType ||\n    \"application/octet-stream\"\n  );\n}\n\nconst canParseAttachment = (\n  node: HTMLElement | string,\n  shouldPreview: boolean,\n) => {\n  if (node instanceof HTMLElement) {\n    const contentType = parseContentTypeFromElement(node);\n\n    if (contentType === \"application/octet-stream\") {\n      return false;\n    }\n\n    // For <action-text-attachment>\n    const actionTextAttachment = node.closest(\"action-text-attachment\");\n    if (actionTextAttachment) {\n      const previewable =\n        actionTextAttachment.getAttribute(\"previewable\") === \"true\";\n\n      if (!actionTextAttachment.getAttribute(\"sgid\")) {\n        return false;\n      }\n\n      if (previewable === shouldPreview) {\n        return true;\n      }\n\n      return false;\n    }\n\n    const previewable = canPreview(\n      findAttribute(node, \"previewable\"),\n      findAttribute(node, \"contentType\"),\n    );\n\n    if (previewable === shouldPreview) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * This appends to the current HTML of the <figcaption> into node.attrs.caption.\n * This is how a figcaption knows if it's empty and is important for ActionText.\n */\nfunction handleCaptions(\n  node: ProseMirrorNode,\n  tr: Transaction,\n  newState: EditorState,\n  pos: number,\n) {\n  let modified = false;\n\n  if (figureTypes.includes(node.type.name) === false) return modified;\n\n  // @see https://discuss.prosemirror.net/t/saving-content-containing-dom-generated-by-nodeview/2594/5\n  let scratch = document.createElement(\"div\");\n  scratch.appendChild(\n    DOMSerializer.fromSchema(newState.schema).serializeNode(node),\n  );\n\n  const figcaption = scratch.querySelector(\"figcaption\");\n\n  if (figcaption == null) return modified;\n\n  const caption = figcaption.innerHTML;\n  if (node.attrs.caption !== caption) {\n    tr.setNodeMarkup(pos, undefined, {\n      ...node.attrs,\n      caption,\n    });\n    modified = true;\n  }\n\n  return modified;\n}\n\nfunction canPreview(previewable: boolean, contentType: Maybe<string>): boolean {\n  return Boolean(\n    previewable || AttachmentManager.isPreviewable(contentType || \"\"),\n  );\n}\n\nfunction toExtension(fileName: Maybe<string>): string {\n  if (!fileName) return \"\";\n\n  return \"attachment--\" + fileName.match(/\\.(\\w+)$/)?.[1].toLowerCase();\n}\n\nfunction toType(content: Maybe<string>, previewable: Boolean): string {\n  if (previewable) {\n    return \"attachment--preview\";\n  }\n\n  if (content) {\n    return \"attachment--content\";\n  }\n\n  return \"attachment--file\";\n}\n\nexport const Attachment = Node.create<AttachmentOptions>({\n  name: \"attachment-figure\",\n  group: \"block attachmentFigure\",\n  content: \"inline*\",\n  selectable: true,\n  draggable: true,\n  isolating: true,\n  defining: true,\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey(\"rhino-attachment-fixer\"),\n        appendTransaction(_transactions, _oldState, newState) {\n          const tr = newState.tr;\n          let modified = false;\n\n          // @TODO: Iterate through transactions instead of descendants (?).\n          newState.doc.descendants((node, pos, _parent) => {\n            const mutations = [handleCaptions(node, tr, newState, pos)];\n\n            const shouldModify = mutations.some((bool) => bool === true);\n\n            if (shouldModify) {\n              modified = true;\n            }\n          });\n\n          if (modified) return tr;\n\n          return undefined;\n        },\n      }),\n      new Plugin({\n        key: new PluginKey(\"rhino-prevent-unintended-figcaption-behavior\"),\n        props: {\n          handlePaste: (view, event) => {\n            const name = view.state.selection.$anchor.parent.type.name;\n\n            const { clipboardData } = event;\n\n            if (!clipboardData) return false;\n\n            if (figureTypes.includes(name)) {\n              event.preventDefault();\n              const tr = view.state.tr;\n              // @TODO: Ideally we don't need to do this. This prevents inserting unnecessary <p> tags in the figcaption\n              // causing things to get fubar and <p> to get inserted in a bizarre place.\n              const text = clipboardData.getData(\"text/plain\");\n              tr.insertText(text);\n              view.dispatch(tr);\n              return true;\n            }\n            return false;\n          },\n          handleKeyDown: (view, event) => {\n            /**\n             * This is a hack. When we have an empty figcaption and you press \"Enter\" or \"Backspace\" you delete the\n             * containing gallery.\n             */\n            if ([\"Backspace\", \"Enter\"].includes(event.key)) {\n              const name = view.state.selection.$head.parent.type.name;\n              const content = view.state.selection.$head.parent.textContent;\n\n              if (view.state.selection.to !== view.state.selection.from) {\n                return false;\n              }\n\n              if (figureTypes.includes(name) && content === \"\") {\n                event.preventDefault();\n                return true;\n              }\n            }\n\n            return false;\n          },\n        },\n      }),\n      new Plugin({\n        key: new PluginKey(\"rhino-attachment-remove-event\"),\n        view() {\n          type FindNodeResult = ReturnType<typeof findChildrenByType>;\n          type FindNodeResultObj = FindNodeResult[keyof FindNodeResult];\n\n          const afterSgidsAndAttachmentIds = new Map<\n            string,\n            FindNodeResultObj\n          >();\n\n          return {\n            update(view, prevState) {\n              const nodeTypes = [\n                view.state.schema.nodes[\"previewable-attachment-figure\"],\n                view.state.schema.nodes[\"attachment-figure\"],\n              ];\n\n              nodeTypes.forEach((nodeType) => {\n                const attachmentNodesBefore = findChildrenByType(\n                  prevState.doc,\n                  nodeType,\n                );\n\n                // attachmentNodesAfter state transform\n                findChildrenByType(view.state.doc, nodeType).forEach((node) => {\n                  const nodeAttrs = node.node\n                    .attrs as AttachmentManagerAttributes;\n                  const sgid = nodeAttrs.sgid;\n                  const attachmentId = nodeAttrs.attachmentId;\n\n                  if (sgid) {\n                    afterSgidsAndAttachmentIds.set(sgid, node);\n                  }\n\n                  if (attachmentId) {\n                    afterSgidsAndAttachmentIds.set(attachmentId, node);\n                  }\n                });\n\n                attachmentNodesBefore.forEach((node) => {\n                  const nodeAttrs = node.node\n                    .attrs as AttachmentManagerAttributes;\n\n                  const { sgid, attachmentId } = nodeAttrs;\n\n                  if (sgid && afterSgidsAndAttachmentIds.has(sgid)) return;\n                  if (\n                    attachmentId &&\n                    afterSgidsAndAttachmentIds.has(attachmentId)\n                  )\n                    return;\n\n                  const attachmentManager = new AttachmentManager(\n                    nodeAttrs,\n                    view,\n                  );\n\n                  view.dom.dispatchEvent(\n                    new AttachmentRemoveEvent(attachmentManager),\n                  );\n                });\n\n                afterSgidsAndAttachmentIds.clear();\n              });\n            },\n          };\n        },\n      }),\n    ];\n  },\n  addOptions() {\n    return {\n      HTMLAttributes: {\n        class: \"attachment\",\n      },\n      fileUploadErrorMessage: fileUploadErrorMessage,\n      captionPlaceholder: captionPlaceholder,\n      previewable: false,\n    };\n  },\n\n  parseHTML() {\n    return [\n      // When it's <figure data-trix-attachment> its coming from `to_trix_html`\n      {\n        tag: \"figure[data-trix-attachment]\",\n        getAttrs: (node) => {\n          const isValid = canParseAttachment(node, this.options.previewable);\n\n          if (!isValid) {\n            return false;\n          }\n\n          return null;\n        },\n      },\n      // When it's .attachment, its coming from <action-text-attachment><figure></figure></action-text-attachment> its the raw HTML.\n      {\n        tag: \"action-text-attachment > figure.attachment\",\n        contentElement: \"figcaption\",\n        getAttrs: (node) => {\n          const isValid = canParseAttachment(node, this.options.previewable);\n\n          if (!isValid) {\n            return false;\n          }\n\n          return null;\n        },\n      },\n      {\n        tag: \"action-text-attachment\",\n        getAttrs: (node) => {\n          const isValid = canParseAttachment(node, this.options.previewable);\n\n          if (!isValid) {\n            return false;\n          }\n\n          return null;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ node }) {\n    const {\n      // Figure\n      content,\n      contentType,\n      sgid,\n      fileName,\n      fileSize,\n      caption,\n      url,\n      previewable,\n\n      // Image\n      src,\n      width,\n      height,\n    } = node.attrs as AttachmentAttrs;\n\n    const attachmentAttrs = {\n      caption,\n      contentType,\n      content,\n      filename: fileName,\n      filesize: fileSize,\n      height,\n      width,\n      sgid,\n      url,\n      src,\n    };\n\n    const figure = [\n      \"figure\",\n      mergeAttributes(this.options.HTMLAttributes, {\n        class:\n          this.options.HTMLAttributes.class +\n          \" \" +\n          toType(content, canPreview(previewable, contentType)) +\n          \" \" +\n          toExtension(fileName),\n        \"data-trix-content-type\": contentType,\n        \"data-trix-attachment\": JSON.stringify(attachmentAttrs),\n        \"data-trix-attributes\": JSON.stringify({\n          caption,\n          ...(canPreview(previewable, contentType)\n            ? { presentation: \"gallery\" }\n            : {}),\n        }),\n      }),\n    ] as const;\n\n    const figcaption = [\n      \"figcaption\",\n      mergeAttributes(\n        {},\n        { class: \"attachment__caption attachment__caption--edited\" },\n      ),\n      0,\n    ] as const;\n\n    const image = [\n      \"img\",\n      mergeAttributes(\n        {},\n        {\n          src: url || src,\n          contenteditable: false,\n          width,\n          height,\n        },\n      ),\n    ];\n\n    if (!content && canPreview(previewable, contentType)) {\n      return [...figure, image, figcaption];\n    }\n\n    return [...figure, figcaption];\n  },\n\n  addAttributes() {\n    return {\n      attachmentId: { default: null },\n      caption: {\n        default: \"\",\n        parseHTML: (element) => {\n          return (\n            element.querySelector(\"figcaption\")?.innerHTML ||\n            findAttribute(element, \"caption\")\n          );\n        },\n      },\n      progress: {\n        default: 0,\n        parseHTML: (element) => {\n          return findAttribute(element, \"sgid\") ||\n            findAttribute(element, \"content\") ||\n            element.closest(\"action-text-attachment\")?.innerHTML\n            ? 100\n            : 0;\n        },\n      },\n      loadingState: {\n        default: LOADING_STATES.notStarted,\n        parseHTML: (element) =>\n          findAttribute(element, \"sgid\")\n            ? LOADING_STATES.success\n            : LOADING_STATES.notStarted,\n      },\n      sgid: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"sgid\"),\n      },\n      src: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"src\"),\n      },\n      height: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"height\"),\n      },\n      width: {\n        default: \"\",\n        parseHTML: (element) => {\n          return findAttribute(element, \"width\");\n        },\n      },\n      contentType: {\n        default: \"\",\n        parseHTML: (element) => {\n          return parseContentTypeFromElement(element);\n        },\n      },\n      fileName: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"filename\"),\n      },\n      fileSize: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"filesize\"),\n      },\n      content: {\n        default: \"\",\n        parseHTML: (element) => {\n          const attachment = element.closest(\"action-text-attachment\");\n\n          let content = \"\";\n\n          if (attachment) {\n            const domParser = new DOMParser();\n            const parsedDom = domParser.parseFromString(\n              attachment.innerHTML,\n              \"text/html\",\n            );\n\n            const firstChild = parsedDom.body.firstElementChild;\n\n            if (firstChild) {\n              if (\n                firstChild.tagName.toLowerCase() !== \"figure\" ||\n                !firstChild.classList.contains(\"attachment\")\n              ) {\n                content = attachment.innerHTML;\n              }\n            }\n          }\n\n          return content || findAttribute(element, \"content\");\n        },\n      },\n      url: {\n        default: \"\",\n        parseHTML: (element) => {\n          return findAttribute(element, \"url\");\n        },\n      },\n      previewable: {\n        default: false,\n        parseHTML: (element) => {\n          let { previewable } = JSON.parse(\n            element.getAttribute(\"data-trix-attachment\") || \"{}\",\n          );\n\n          if (previewable == null) {\n            previewable = findAttribute(element, \"previewable\");\n          }\n\n          return previewable;\n        },\n      },\n    };\n  },\n\n  addNodeView() {\n    return ({ node, getPos, editor }) => {\n      const {\n        content,\n        contentType,\n        sgid,\n        fileName,\n        progress,\n        fileSize,\n        url,\n        src,\n        width,\n        height,\n        caption,\n        previewable,\n        loadingState,\n      } = node.attrs as AttachmentAttrs;\n\n      const trixAttachment = JSON.stringify({\n        contentType,\n        content,\n        filename: fileName,\n        filesize: fileSize,\n        height,\n        width,\n        sgid,\n        url,\n        caption,\n      });\n\n      const isPreviewable = canPreview(previewable, contentType);\n\n      const trixAttributes = JSON.stringify({\n        ...(isPreviewable ? { presentation: \"gallery\" } : {}),\n        caption,\n      });\n\n      const figureClasses = `\n        ${this.options.HTMLAttributes.class}\n        ${toType(content, canPreview(previewable, contentType))}\n        ${toExtension(fileName)}\n      `;\n\n      function handleFigureClick(e: Event) {\n        const target = e.currentTarget as HTMLElement;\n        const figcaption = target.querySelector(\"figcaption\");\n\n        if (figcaption == null) return;\n\n        if (e.composedPath().includes(figcaption)) {\n          return;\n        }\n\n        if (typeof getPos === \"function\") {\n          const { view } = editor;\n\n          const { tr } = view.state;\n\n          const captionNode = view.state.doc.nodeAt(getPos() + 1);\n          captionNode?.nodeSize;\n\n          tr.setSelection(\n            TextSelection.create(\n              view.state.doc,\n              getPos() + 1 + (captionNode?.nodeSize || 0),\n            ),\n          );\n\n          view.dispatch(tr);\n\n          // This is for raw HTML, its kinda not a huge deal...\n          // const defaultCaption = toDefaultCaption({ fileName, fileSize })\n          // if (figcaption.innerHTML === defaultCaption || figcaption.innerHTML === defaultCaption.split(\" \u00B7 \").join(\" \")) {\n          //\n          //   // view.dispatch(tr.setNodeMarkup(getPos(), null, { caption: \"\" }))\n          // }\n        }\n      }\n\n      let imgSrc: string | undefined = undefined;\n\n      if (isPreviewable && (url || src)) {\n        imgSrc = url || src;\n      }\n\n      let mouseIsDown = false;\n      let mouseTimeout: number | null = null;\n\n      // This is a very simple drag handler. This allows us to drag non-previewable nodes.\n      // https://discuss.prosemirror.net/t/dragndrop-a-drag-handle-element/4563\n      const handleMouseDown = (_e: MouseEvent) => {\n        // We need to give this a second just so we dont mess with \"click\" behavior.\n        mouseTimeout = setTimeout(() => {\n          mouseIsDown = true;\n        }, 10);\n      };\n\n      const handleMouseUp = (_e: MouseEvent) => {\n        mouseIsDown = false;\n        if (mouseTimeout) {\n          clearTimeout(mouseTimeout);\n        }\n      };\n\n      const handleMouseMove = (_e: MouseEvent) => {\n        if (mouseIsDown && typeof getPos === \"function\") {\n          const { view } = editor;\n          view.dispatch(\n            view.state.tr.setSelection(\n              NodeSelection.create(view.state.doc, getPos()),\n            ),\n          );\n        }\n      };\n\n      function removeFigure(this: HTMLElement) {\n        if (typeof getPos === \"function\") {\n          const { view } = editor;\n\n          const { tr } = view.state;\n\n          const pos = getPos();\n          tr.delete(pos, pos + 1);\n          view.dispatch(tr);\n        }\n\n        // For some reason it doesnt always delete the attachment, so this is some extra insurance.\n        const closestAttachment = this.closest(\".attachment\");\n        if (closestAttachment) {\n          closestAttachment.remove();\n        }\n      }\n\n      const template = html`\n        <figure\n          class=${figureClasses}\n          attachment-type=${this.name}\n          sgid=${ifDefined(sgid ? sgid : undefined)}\n          data-trix-content-type=${contentType}\n          data-trix-attachment=${trixAttachment}\n          data-trix-attributes=${trixAttributes}\n          @click=${handleFigureClick}\n          @mousedown=${handleMouseDown}\n          @mouseup=${handleMouseUp}\n          @mousemove=${handleMouseMove}\n        >\n          <rhino-attachment-editor\n            file-name=${fileName || \"\"}\n            file-size=${String(fileSize || 0)}\n            loading-state=${loadingState || LOADING_STATES.notStarted}\n            progress=${String(sgid || content || !fileSize ? 100 : progress)}\n            contenteditable=\"false\"\n            ?show-metadata=${isPreviewable}\n            .fileUploadErrorMessage=${this.options.fileUploadErrorMessage}\n            .removeFigure=${removeFigure}\n          >\n          </rhino-attachment-editor>\n\n          ${when(\n            content && !isPreviewable,\n            /* This is really not great. This is how Trix does it, but it feels very unsafe.\n               https://github.com/basecamp/trix/blob/fda14c5ae88a0821cf8999a53dcb3572b4172cf0/src/trix/views/attachment_view.js#L36\n            */\n            () => html`${unsafeHTML(content)}`,\n            () => html`\n              <img\n                class=${loadingState === LOADING_STATES.error\n                  ? \"rhino-upload-error\"\n                  : \"\"}\n                width=${String(width)}\n                height=${String(height)}\n                src=${ifDefined(imgSrc)}\n                contenteditable=\"false\"\n              />\n            `,\n          )}\n\n          <figcaption\n            style=\"${Boolean(content) ? \"display: none;\" : \"\"}\"\n            class=${`attachment__caption ${\n              caption ? \"attachment__caption--edited\" : \"is-empty\"\n            }`}\n            data-placeholder=${this.options.captionPlaceholder}\n            data-default-caption=${toDefaultCaption({ fileName, fileSize })}\n          ></figcaption>\n        </figure>\n      `;\n\n      // Scratch element to render into.\n      const scratch = document.createElement(\"div\");\n      render(template, scratch);\n\n      const dom = scratch.firstElementChild;\n      const contentDOM = dom?.querySelector(\"figcaption\");\n\n      let srcRevoked = false;\n\n      return {\n        dom,\n        contentDOM,\n        update(node) {\n          if (node.type.name !== \"attachment\") return false;\n\n          if (!srcRevoked && node.attrs.url) {\n            srcRevoked = true;\n\n            /** Do your part to save the environment. (Try to) prevent memory leaks. */\n            try {\n              URL.revokeObjectURL(node.attrs.src);\n            } catch (_e) {\n              /* We don't really care if this fails. We tried. */\n            }\n          }\n\n          return false;\n        },\n      };\n    };\n  },\n\n  addCommands() {\n    return {\n      setAttachmentAtCoords:\n        (\n          options: AttachmentManager | AttachmentManager[],\n          coordinates: { left: number; top: number },\n        ) =>\n        ({ view, state, tr, dispatch }) => {\n          let posAtCoords = view.posAtCoords(coordinates);\n\n          const currentSelection = state.doc.resolve(posAtCoords?.pos || 0);\n          return handleAttachment(options, currentSelection, {\n            state,\n            tr,\n            dispatch,\n          });\n        },\n      setAttachment:\n        (options: AttachmentManager | AttachmentManager[]) =>\n        ({ state, tr, dispatch }) => {\n          const currentSelection = state.doc.resolve(state.selection.anchor);\n          return handleAttachment(options, currentSelection, {\n            state,\n            tr,\n            dispatch,\n          });\n        },\n    };\n  },\n});\n\nexport const PreviewableAttachment = Attachment.extend({\n  name: \"previewable-attachment-figure\",\n  group: \"block previewableAttachmentFigure\",\n  addOptions() {\n    return {\n      ...Attachment.options,\n      previewable: true,\n    };\n  },\n\n  // We purposely override this to nothing. Because all of the extensions registered by Attachment\n  // are global, they run twice. We don't want that. for example, this causes `rhino-attachment-remove`\n  // to fire twice. No bueno.\n  addProseMirrorPlugins() {\n    return [];\n  },\n});\n\nfunction handleAttachment(\n  options: AttachmentManager | AttachmentManager[],\n  currentSelection: ResolvedPos,\n  { state, tr, dispatch }: Pick<CommandProps, \"state\" | \"tr\" | \"dispatch\">,\n) {\n  const { schema } = state;\n\n  const minSize = 0;\n  const maxSize = tr.doc.content.size;\n\n  function clamp(val: number, min: number = minSize, max: number = maxSize) {\n    if (val < min) return min;\n    if (val > max) return max;\n    return val;\n  }\n\n  // Attachments disabled, dont pass go.\n  const hasGalleriesDisabled = schema.nodes[\"attachment-gallery\"] == null;\n\n  const currentNode = state.doc.resolve(currentSelection.pos);\n  const paragraphTopNode = findParentNodeOfTypeClosestToPos(\n    currentNode,\n    schema.nodes[\"paragraph\"],\n  );\n\n  let currentGallery = findParentNodeOfTypeClosestToPos(\n    state.doc.resolve(currentSelection.pos),\n    schema.nodes[\"attachment-gallery\"],\n  );\n\n  let priorGalleryPos = null;\n\n  if (paragraphTopNode) {\n    const paragraphIsEmpty = currentSelection.parent.textContent === \"\";\n    const prevNode = state.doc.resolve(clamp(paragraphTopNode.pos - 1));\n\n    if (\n      paragraphIsEmpty &&\n      prevNode.parent.type.name === \"attachment-gallery\"\n    ) {\n      priorGalleryPos = clamp(paragraphTopNode.pos - 1);\n    }\n  }\n\n  const isInGallery = currentGallery || priorGalleryPos;\n\n  const attachments: AttachmentManager[] = Array.isArray(options)\n    ? options\n    : ([] as AttachmentManager[]).concat(options);\n\n  let allNodesPreviewable = true;\n\n  let attachmentNodes: ProseMirrorNode[] = [];\n\n  let previewableNodes: ProseMirrorNode[] = [];\n\n  attachments.forEach((attachment) => {\n    const nodeType = attachment.isPreviewable\n      ? \"previewable-attachment-figure\"\n      : \"attachment-figure\";\n\n    const figure = schema.nodes[nodeType].create(\n      attachment,\n      attachment.caption ? [schema.text(attachment.caption)] : [],\n    );\n\n    if (hasGalleriesDisabled) {\n      attachmentNodes.push(figure);\n      return;\n    }\n\n    if (!attachment.isPreviewable) {\n      allNodesPreviewable = false;\n\n      // Make a new gallery. Non-previewable nodes dont belong in galleries.\n      if (previewableNodes.length >= 1) {\n        attachmentNodes = attachmentNodes.concat(\n          schema.nodes[\"attachment-gallery\"].create({}, previewableNodes),\n        );\n        previewableNodes = [];\n      }\n\n      attachmentNodes.push(figure);\n      return;\n    }\n\n    previewableNodes.push(figure);\n  });\n\n  let end = 0;\n\n  if (currentGallery) {\n    end = currentGallery.start + currentGallery.node.nodeSize - 2;\n  } else if (priorGalleryPos != null) {\n    end = priorGalleryPos;\n  }\n\n  end = clamp(end);\n\n  if (hasGalleriesDisabled) {\n    attachmentNodes = attachmentNodes.flatMap((node) => [node]);\n    tr.insert(end, attachmentNodes.concat([schema.nodes.paragraph.create()]));\n\n    if (dispatch) dispatch(tr);\n    return true;\n  }\n\n  if (isInGallery) {\n    if (allNodesPreviewable) {\n      tr.insert(end, previewableNodes);\n    } else {\n      // Make a new gallery. Non-previewable nodes dont belong in galleries.\n      if (!hasGalleriesDisabled && previewableNodes.length >= 1) {\n        attachmentNodes = attachmentNodes.concat(\n          schema.nodes[\"attachment-gallery\"].create({}, previewableNodes),\n        );\n      }\n      tr.insert(end + 1, attachmentNodes);\n    }\n  } else {\n    const currSelection = state.selection;\n\n    // Make a new gallery. Non-previewable nodes dont belong in galleries.\n    if (!hasGalleriesDisabled && previewableNodes.length >= 1) {\n      attachmentNodes = attachmentNodes.concat(\n        schema.nodes[\"attachment-gallery\"].create({}, previewableNodes),\n      );\n    }\n\n    tr.replaceWith(currSelection.from - 1, currSelection.to, [\n      ...attachmentNodes,\n      schema.nodes.paragraph.create(),\n    ]);\n\n    selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n  }\n\n  if (dispatch) dispatch(tr);\n  return true;\n}\n", "import { Node, mergeAttributes } from \"@tiptap/core\";\nimport { findAttribute } from \"./find-attribute.js\";\n\nexport interface ImageOptions {\n  HTMLAttributes: Record<string, any>;\n}\n\nexport const Image = Node.create({\n  name: \"attachment-image\",\n  selectable: false,\n  draggable: false,\n  group: \"block\",\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    };\n  },\n\n  addAttributes() {\n    return {\n      src: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"url\"),\n      },\n      height: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"height\"),\n      },\n      width: {\n        default: \"\",\n        parseHTML: (element) => findAttribute(element, \"width\"),\n      },\n      attachmentId: {\n        default: null,\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"figure[data-trix-attachment] img[src]\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"img\",\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n    ];\n  },\n});\n", "import { mergeAttributes, Node, selectionToInsertionEnd } from \"@tiptap/core\";\nimport { EditorState, Plugin, Transaction } from \"@tiptap/pm/state\";\nimport {\n  chainCommands,\n  createParagraphNear,\n  // liftEmptyBlock,\n  // newlineInCode,\n  // selectNodeForward,\n} from \"@tiptap/pm/commands\";\nimport { Node as ProseMirrorNode } from \"@tiptap/pm/model\";\nimport { findParentNodeOfTypeClosestToPos } from \"prosemirror-utils\";\nimport { figureTypes } from \"./attachment\";\n\nfunction replaceEmptyGalleryWithParagraph(\n  node: ProseMirrorNode,\n  tr: Transaction,\n  newState: EditorState,\n  pos: number,\n) {\n  let modified = false;\n\n  if (node.type.name != \"attachment-gallery\") return modified;\n\n  if (node.nodeSize === 2) {\n    tr.replaceWith(\n      pos,\n      pos + node.nodeSize,\n      newState.schema.node(\"paragraph\", null, []),\n    );\n    modified = true;\n  }\n\n  return modified;\n}\n\nexport interface GalleryOptions {\n  HTMLAttributes: Record<string, any>;\n}\n\nexport const Gallery = Node.create({\n  name: \"attachment-gallery\",\n  group: \"block\",\n  draggable: false,\n  selectable: false,\n  content: \"(paragraph | previewableAttachmentFigure)*\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div.attachment-gallery\",\n      },\n    ];\n  },\n\n  renderHTML() {\n    return [\"div\", mergeAttributes({}, { class: \"attachment-gallery\" }), 0];\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        props: {\n          handleDOMEvents: {\n            keydown: (view, event) => {\n              if (event.key === \"Enter\") {\n                const nodeType = view.state.selection.$head.parent.type.name;\n                if (nodeType === \"attachment-gallery\") {\n                  event.preventDefault();\n\n                  chainCommands(createParagraphNear)(view.state, view.dispatch);\n                  return true;\n                }\n\n                if (figureTypes.includes(nodeType)) {\n                  event.preventDefault();\n\n                  chainCommands(createParagraphNear)(view.state, view.dispatch);\n\n                  const containingGallery = findParentNodeOfTypeClosestToPos(\n                    view.state.selection.$anchor,\n                    view.state.schema.nodes[\"attachment-gallery\"],\n                  );\n\n                  // TODO: Right now this just prevents us from splitting a gallery / figure.\n                  // Ideally, we should check `nodesBetween` and any `figures` get placed into a new gallery under the inserted paragraph like Trix does.\n                  if (containingGallery) {\n                    const tr = view.state.tr;\n                    tr.insert(\n                      containingGallery.pos + containingGallery.node.nodeSize,\n                      view.state.schema.nodes[\"paragraph\"].create(),\n                    );\n                    selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n\n                    view.dispatch(tr);\n                  }\n                  return true;\n                }\n              }\n\n              return false;\n            },\n          },\n        },\n        appendTransaction: (_transactions, _oldState, newState) => {\n          const tr = newState.tr;\n          let modified = false;\n\n          // @TODO: Iterate through transactions instead of descendants (?).\n          newState.doc.descendants((node, pos, _parent) => {\n            const mutations = [\n              replaceEmptyGalleryWithParagraph(node, tr, newState, pos),\n            ];\n\n            const shouldModify = mutations.some((bool) => bool === true);\n\n            if (shouldModify) {\n              modified = true;\n            }\n          });\n\n          if (modified) return tr;\n\n          return undefined;\n        },\n      }),\n    ];\n  },\n});\n", "import { Node, mergeAttributes } from \"@tiptap/core\";\n\nexport interface FigcaptionOptions {\n  HTMLAttributes: Record<string, any>;\n}\n\nexport const Figcaption = Node.create({\n  name: \"attachment-figcaption\",\n  group: \"block figcaption\",\n  content: \"inline*\",\n  selectable: false,\n  draggable: false,\n  defining: true,\n  isolating: true,\n\n  addOptions() {\n    return {\n      HTMLAttributes: { class: \"attachment__caption attachment--edited\" },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: `figure.attachment figcaption`,\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"figcaption\",\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      0,\n    ];\n  },\n});\n", "import { mergeAttributes } from \"@tiptap/core\";\nimport Strike from \"@tiptap/extension-strike\";\n\n/**\n * @TODO: ActiveStorage Gem\n * This only exists because \"<s>\" isnt safe-listed.\n * This can go away if an actiontext extension gem is shipped.\n * https://github.com/ueberdosis/tiptap/blob/c729810767d374e4324e7f3ea84e2a65df18d622/packages/extension-strike/src/strike.ts#L62-L64\n */\nexport const CustomStrike = Strike.extend({\n  name: \"rhino-strike\",\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"del\",\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      0,\n    ];\n  },\n});\n", "import { Editor, Extension } from '@tiptap/core'\nimport { Node as ProsemirrorNode } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { Decoration, DecorationSet } from '@tiptap/pm/view'\n\nexport interface PlaceholderOptions {\n  /**\n   * **The class name for the empty editor**\n   * @default 'is-editor-empty'\n   */\n  emptyEditorClass: string\n\n  /**\n   * **The class name for empty nodes**\n   * @default 'is-empty'\n   */\n  emptyNodeClass: string\n\n  /**\n   * **The placeholder content**\n   *\n   * You can use a function to return a dynamic placeholder or a string.\n   * @default 'Write something …'\n   */\n  placeholder:\n    | ((PlaceholderProps: {\n        editor: Editor\n        node: ProsemirrorNode\n        pos: number\n        hasAnchor: boolean\n      }) => string)\n    | string\n\n  /**\n   * **Used for empty check on the document.**\n   *\n   * If true, any node that is not a leaf or atom will be considered for empty check.\n   * If false, only default nodes (paragraphs) will be considered for empty check.\n   * @default false\n   */\n  considerAnyAsEmpty: boolean\n\n  /**\n   * **Checks if the placeholder should be only shown when the editor is editable.**\n   *\n   * If true, the placeholder will only be shown when the editor is editable.\n   * If false, the placeholder will always be shown.\n   * @default true\n   */\n  showOnlyWhenEditable: boolean\n\n  /**\n   * **Checks if the placeholder should be only shown when the current node is empty.**\n   *\n   * If true, the placeholder will only be shown when the current node is empty.\n   * If false, the placeholder will be shown when any node is empty.\n   * @default true\n   */\n  showOnlyCurrent: boolean\n\n  /**\n   * **Controls if the placeholder should be shown for all descendents.**\n   *\n   * If true, the placeholder will be shown for all descendents.\n   * If false, the placeholder will only be shown for the current node.\n   * @default false\n   */\n  includeChildren: boolean\n}\n\n/**\n * This extension allows you to add a placeholder to your editor.\n * A placeholder is a text that appears when the editor or a node is empty.\n * @see https://www.tiptap.dev/api/extensions/placeholder\n */\nexport const Placeholder = Extension.create<PlaceholderOptions>({\n  name: 'placeholder',\n\n  addOptions() {\n    return {\n      emptyEditorClass: 'is-editor-empty',\n      emptyNodeClass: 'is-empty',\n      placeholder: 'Write something …',\n      showOnlyWhenEditable: true,\n      considerAnyAsEmpty: false,\n      showOnlyCurrent: true,\n      includeChildren: false,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('placeholder'),\n        props: {\n          decorations: ({ doc, selection }) => {\n            const active = this.editor.isEditable || !this.options.showOnlyWhenEditable\n            const { anchor } = selection\n            const decorations: Decoration[] = []\n\n            if (!active) {\n              return null\n            }\n\n            // only calculate isEmpty once due to its performance impacts (see issue #3360)\n            const { firstChild } = doc.content\n            const isLeaf = firstChild && firstChild.type.isLeaf\n            const isAtom = firstChild && firstChild.isAtom\n            const isValidNode = this.options.considerAnyAsEmpty\n              ? true\n              : firstChild && firstChild.type.name === doc.type.contentMatch.defaultType?.name\n            const isEmptyDoc = doc.content.childCount <= 1\n              && firstChild\n              && isValidNode\n              && (firstChild.nodeSize <= 2 && (!isLeaf || !isAtom))\n\n            doc.descendants((node, pos) => {\n              const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize\n              const isEmpty = !node.isLeaf && !node.childCount\n\n              if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n                const classes = [this.options.emptyNodeClass]\n\n                if (isEmptyDoc) {\n                  classes.push(this.options.emptyEditorClass)\n                }\n\n                const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                  class: classes.join(' '),\n                  'data-placeholder':\n                    typeof this.options.placeholder === 'function'\n                      ? this.options.placeholder({\n                        editor: this.editor,\n                        node,\n                        pos,\n                        hasAnchor,\n                      })\n                      : this.options.placeholder,\n                })\n\n                decorations.push(decoration)\n              }\n\n              return this.options.includeChildren\n            })\n\n            return DecorationSet.create(doc, decorations)\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Extension } from '@tiptap/core'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { Decoration, DecorationSet } from '@tiptap/pm/view'\n\nexport interface FocusOptions {\n  /**\n   * The class name that should be added to the focused node.\n   * @default 'has-focus'\n   * @example 'is-focused'\n   */\n  className: string\n\n  /**\n   * The mode by which the focused node is determined.\n   * - All: All nodes are marked as focused.\n   * - Deepest: Only the deepest node is marked as focused.\n   * - Shallowest: Only the shallowest node is marked as focused.\n   *\n   * @default 'all'\n   * @example 'deepest'\n   * @example 'shallowest'\n   */\n  mode: 'all' | 'deepest' | 'shallowest'\n}\n\n/**\n * This extension allows you to add a class to the focused node.\n * @see https://www.tiptap.dev/api/extensions/focus\n */\nexport const FocusClasses = Extension.create<FocusOptions>({\n  name: 'focus',\n\n  addOptions() {\n    return {\n      className: 'has-focus',\n      mode: 'all',\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('focus'),\n        props: {\n          decorations: ({ doc, selection }) => {\n            const { isEditable, isFocused } = this.editor\n            const { anchor } = selection\n            const decorations: Decoration[] = []\n\n            if (!isEditable || !isFocused) {\n              return DecorationSet.create(doc, [])\n            }\n\n            // Maximum Levels\n            let maxLevels = 0\n\n            if (this.options.mode === 'deepest') {\n              doc.descendants((node, pos) => {\n                if (node.isText) {\n                  return\n                }\n\n                const isCurrent = anchor >= pos && anchor <= pos + node.nodeSize - 1\n\n                if (!isCurrent) {\n                  return false\n                }\n\n                maxLevels += 1\n              })\n            }\n\n            // Loop through current\n            let currentLevel = 0\n\n            doc.descendants((node, pos) => {\n              if (node.isText) {\n                return false\n              }\n\n              const isCurrent = anchor >= pos && anchor <= pos + node.nodeSize - 1\n\n              if (!isCurrent) {\n                return false\n              }\n\n              currentLevel += 1\n\n              const outOfScope = (this.options.mode === 'deepest' && maxLevels - currentLevel > 0)\n                || (this.options.mode === 'shallowest' && currentLevel > 1)\n\n              if (outOfScope) {\n                return this.options.mode === 'deepest'\n              }\n\n              decorations.push(\n                Decoration.node(pos, pos + node.nodeSize, {\n                  class: this.options.className,\n                }),\n              )\n            })\n\n            return DecorationSet.create(doc, decorations)\n          },\n        },\n      }),\n    ]\n  },\n})\n", "// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3barth4b0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re2s2c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y0eats7k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking0channel11l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t0isalat7u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0at2delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d0network8tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0eles2s3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster5ia3d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0cys3drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7serati6ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic3tual5v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rthwesternmutual14on4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cher3ks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w0time7i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0channel7ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5m\u00F6gensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u0elos6wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = '\u03B5\u03BB1\u03C52\u0431\u04331\u0435\u043B3\u0434\u0435\u0442\u04384\u0435\u044E2\u043A\u0430\u0442\u043E\u043B\u0438\u043A6\u043E\u043C3\u043C\u043A\u04342\u043E\u043D1\u0441\u043A\u0432\u04306\u043E\u043D\u043B\u0430\u0439\u043D5\u0440\u04333\u0440\u0443\u04412\u04442\u0441\u0430\u0439\u04423\u0440\u04313\u0443\u043A\u04403\u049B\u0430\u04373\u0570\u0561\u05753\u05D9\u05E9\u05E8\u05D0\u05DC5\u05E7\u05D5\u05DD3\u0627\u0628\u0648\u0638\u0628\u064A5\u062A\u0635\u0627\u0644\u0627\u062A6\u0631\u0627\u0645\u0643\u06485\u0644\u0627\u0631\u062F\u06464\u0628\u062D\u0631\u064A\u06465\u062C\u0632\u0627\u0626\u06315\u0633\u0639\u0648\u062F\u064A\u06296\u0639\u0644\u064A\u0627\u06465\u0645\u063A\u0631\u06285\u0645\u0627\u0631\u0627\u062A5\u06CC\u0631\u0627\u06465\u0628\u0627\u0631\u062A2\u0632\u0627\u06314\u064A\u062A\u06433\u06BE\u0627\u0631\u062A5\u062A\u0648\u0646\u06334\u0633\u0648\u062F\u0627\u06463\u0631\u064A\u06295\u0634\u0628\u0643\u06294\u0639\u0631\u0627\u06422\u06282\u0645\u0627\u06464\u0641\u0644\u0633\u0637\u064A\u06466\u0642\u0637\u06313\u0643\u0627\u062B\u0648\u0644\u064A\u06436\u0648\u06453\u0645\u0635\u06312\u0644\u064A\u0633\u064A\u06275\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u06277\u0642\u06394\u0647\u0645\u0631\u0627\u06475\u067E\u0627\u06A9\u0633\u062A\u0627\u06467\u0680\u0627\u0631\u062A4\u0915\u0949\u092E3\u0928\u0947\u091F3\u092D\u093E\u0930\u09240\u092E\u094D3\u094B\u09245\u0938\u0902\u0917\u0920\u09285\u09AC\u09BE\u0982\u09B2\u09BE5\u09AD\u09BE\u09B0\u09A42\u09F0\u09A44\u0A2D\u0A3E\u0A30\u0A244\u0AAD\u0ABE\u0AB0\u0AA44\u0B2D\u0B3E\u0B30\u0B244\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE6\u0BB2\u0B99\u0BCD\u0B95\u0BC86\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD11\u0C2D\u0C3E\u0C30\u0C24\u0C4D5\u0CAD\u0CBE\u0CB0\u0CA44\u0D2D\u0D3E\u0D30\u0D24\u0D025\u0DBD\u0D82\u0D9A\u0DCF4\u0E04\u0E2D\u0E213\u0E44\u0E17\u0E223\u0EA5\u0EB2\u0EA73\u10D2\u10D42\u307F\u3093\u306A3\u30A2\u30DE\u30BE\u30F34\u30AF\u30E9\u30A6\u30C94\u30B0\u30FC\u30B0\u30EB4\u30B3\u30E02\u30B9\u30C8\u30A23\u30BB\u30FC\u30EB3\u30D5\u30A1\u30C3\u30B7\u30E7\u30F36\u30DD\u30A4\u30F3\u30C84\u4E16\u754C2\u4E2D\u4FE11\u56FD1\u570B1\u6587\u7F513\u4E9A\u9A6C\u900A3\u4F01\u4E1A2\u4F5B\u5C712\u4FE1\u606F2\u5065\u5EB72\u516B\u53662\u516C\u53F81\u76CA2\u53F0\u6E7E1\u70632\u5546\u57CE1\u5E971\u68072\u5609\u91CC0\u5927\u9152\u5E975\u5728\u7EBF2\u5927\u62FF2\u5929\u4E3B\u65593\u5A31\u4E502\u5BB6\u96FB2\u5E7F\u4E1C2\u5FAE\u535A2\u6148\u55842\u6211\u7231\u4F603\u624B\u673A2\u62DB\u80582\u653F\u52A11\u5E9C2\u65B0\u52A0\u57612\u95FB2\u65F6\u5C1A2\u66F8\u7C4D2\u673A\u67842\u6DE1\u9A6C\u95213\u6E38\u620F2\u6FB3\u95802\u70B9\u770B2\u79FB\u52A82\u7EC4\u7EC7\u673A\u67844\u7F51\u57401\u5E971\u7AD91\u7EDC2\u8054\u901A2\u8C37\u6B4C2\u8D2D\u72692\u901A\u8CA92\u96C6\u56E22\u96FB\u8A0A\u76C8\u79D14\u98DE\u5229\u6D663\u98DF\u54C12\u9910\u53852\u9999\u683C\u91CC\u62C93\u6E2F2\uB2F7\uB1371\uCEF42\uC0BC\uC1312\uD55C\uAD6D2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\nconst OPENBRACE = 'OPENBRACE'; // {\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '\u2764\uFE0F', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '\u2026' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, EQUALS, HYPHEN, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port numner\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n\n  // URL, followed by an opening bracket\n  const UrlOpenbrace = tt(Url$1, OPENBRACE); // URL followed by {\n  const UrlOpenbracket = tt(Url$1, OPENBRACKET); // URL followed by [\n  const UrlOpenanglebracket = tt(Url$1, OPENANGLEBRACKET); // URL followed by <\n  const UrlOpenparen = tt(Url$1, OPENPAREN); // URL followed by (\n\n  tt(UrlNonaccept, OPENBRACE, UrlOpenbrace);\n  tt(UrlNonaccept, OPENBRACKET, UrlOpenbracket);\n  tt(UrlNonaccept, OPENANGLEBRACKET, UrlOpenanglebracket);\n  tt(UrlNonaccept, OPENPAREN, UrlOpenparen);\n\n  // Closing bracket component. This character WILL be included in the URL\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracket, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracket, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparen, CLOSEPAREN, Url$1);\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n\n  // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `UrlOpenbrace` (if the URL only\n  // has a single opening bracket for some reason).\n  const UrlOpenbraceQ = makeState(Url); // URL followed by { and some symbols that the URL can end it\n  const UrlOpenbracketQ = makeState(Url); // URL followed by [ and some symbols that the URL can end it\n  const UrlOpenanglebracketQ = makeState(Url); // URL followed by < and some symbols that the URL can end it\n  const UrlOpenparenQ = makeState(Url); // URL followed by ( and some symbols that the URL can end it\n  ta(UrlOpenbrace, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracket, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracket, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparen, qsAccepting, UrlOpenparenQ);\n  const UrlOpenbraceSyms = makeState(); // UrlOpenbrace followed by some symbols it cannot end it\n  const UrlOpenbracketSyms = makeState(); // UrlOpenbracketQ followed by some symbols it cannot end it\n  const UrlOpenanglebracketSyms = makeState(); // UrlOpenanglebracketQ followed by some symbols it cannot end it\n  const UrlOpenparenSyms = makeState(); // UrlOpenparenQ followed by some symbols it cannot end it\n  ta(UrlOpenbrace, qsNonAccepting);\n  ta(UrlOpenbracket, qsNonAccepting);\n  ta(UrlOpenanglebracket, qsNonAccepting);\n  ta(UrlOpenparen, qsNonAccepting);\n\n  // URL that begins with an opening bracket, followed by some symbols\n  ta(UrlOpenbraceQ, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceQ, qsNonAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsNonAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsNonAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsNonAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketSyms, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenSyms, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsNonAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsNonAccepting, UrlOpenbracketSyms);\n  ta(UrlOpenanglebracketSyms, qsNonAccepting, UrlOpenanglebracketSyms);\n  ta(UrlOpenparenSyms, qsNonAccepting, UrlOpenparenSyms);\n\n  // Close brace/bracket to become regular URL\n  tt(UrlOpenbracketQ, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketQ, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenQ, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceQ, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracketSyms, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketSyms, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenSyms, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceSyms, CLOSEPAREN, Url$1);\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error('linkifyjs: incorrect scheme format.\\n 1. Must only contain digits, lowercase ASCII letters or \"-\"\\n 2. Cannot start or end with \"-\"\\n 3. \"-\" cannot repeat');\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n*/\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n", "import {\n  combineTransactionSteps,\n  findChildrenInRange,\n  getChangedRanges,\n  getMarksBetween,\n  NodeWithPos,\n} from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { MultiToken, tokenize } from 'linkifyjs'\n\n/**\n * Check if the provided tokens form a valid link structure, which can either be a single link token\n * or a link token surrounded by parentheses or square brackets.\n *\n * This ensures that only complete and valid text is hyperlinked, preventing cases where a valid\n * top-level domain (TLD) is immediately followed by an invalid character, like a number. For\n * example, with the `find` method from Linkify, entering `example.com1` would result in\n * `example.com` being linked and the trailing `1` left as plain text. By using the `tokenize`\n * method, we can perform more comprehensive validation on the input text.\n */\nfunction isValidLinkStructure(tokens: Array<ReturnType<MultiToken['toObject']>>) {\n  if (tokens.length === 1) {\n    return tokens[0].isLink\n  }\n\n  if (tokens.length === 3 && tokens[1].isLink) {\n    return ['()', '[]'].includes(tokens[0].value + tokens[2].value)\n  }\n\n  return false\n}\n\ntype AutolinkOptions = {\n  type: MarkType\n  validate?: (url: string) => boolean\n}\n\n/**\n * This plugin allows you to automatically add links to your editor.\n * @param options The plugin options\n * @returns The plugin instance\n */\nexport function autolink(options: AutolinkOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('autolink'),\n    appendTransaction: (transactions, oldState, newState) => {\n      /**\n       * Does the transaction change the document?\n       */\n      const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc)\n\n      /**\n       * Prevent autolink if the transaction is not a document change or if the transaction has the meta `preventAutolink`.\n       */\n      const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'))\n\n      /**\n       * Prevent autolink if the transaction is not a document change\n       * or if the transaction has the meta `preventAutolink`.\n       */\n      if (!docChanges || preventAutolink) {\n        return\n      }\n\n      const { tr } = newState\n      const transform = combineTransactionSteps(oldState.doc, [...transactions])\n      const changes = getChangedRanges(transform)\n\n      changes.forEach(({ newRange }) => {\n        // Now let’s see if we can add new links.\n        const nodesInChangedRanges = findChildrenInRange(\n          newState.doc,\n          newRange,\n          node => node.isTextblock,\n        )\n\n        let textBlock: NodeWithPos | undefined\n        let textBeforeWhitespace: string | undefined\n\n        if (nodesInChangedRanges.length > 1) {\n          // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter).\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            textBlock.pos + textBlock.node.nodeSize,\n            undefined,\n            ' ',\n          )\n        } else if (\n          nodesInChangedRanges.length\n          // We want to make sure to include the block seperator argument to treat hard breaks like spaces.\n          && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')\n        ) {\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            newRange.to,\n            undefined,\n            ' ',\n          )\n        }\n\n        if (textBlock && textBeforeWhitespace) {\n          const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '')\n\n          if (wordsBeforeWhitespace.length <= 0) {\n            return false\n          }\n\n          const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1]\n          const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace)\n\n          if (!lastWordBeforeSpace) {\n            return false\n          }\n\n          const linksBeforeSpace = tokenize(lastWordBeforeSpace).map(t => t.toObject())\n\n          if (!isValidLinkStructure(linksBeforeSpace)) {\n            return false\n          }\n\n          linksBeforeSpace\n            .filter(link => link.isLink)\n            // Calculate link position.\n            .map(link => ({\n              ...link,\n              from: lastWordAndBlockOffset + link.start + 1,\n              to: lastWordAndBlockOffset + link.end + 1,\n            }))\n            // ignore link inside code mark\n            .filter(link => {\n              if (!newState.schema.marks.code) {\n                return true\n              }\n\n              return !newState.doc.rangeHasMark(\n                link.from,\n                link.to,\n                newState.schema.marks.code,\n              )\n            })\n            // validate link\n            .filter(link => {\n              if (options.validate) {\n                return options.validate(link.value)\n              }\n              return true\n            })\n            // Add link mark.\n            .forEach(link => {\n              if (getMarksBetween(link.from, link.to, newState.doc).some(item => item.mark.type === options.type)) {\n                return\n              }\n\n              tr.addMark(\n                link.from,\n                link.to,\n                options.type.create({\n                  href: link.href,\n                }),\n              )\n            })\n        }\n      })\n\n      if (!tr.steps.length) {\n        return\n      }\n\n      return tr\n    },\n  })\n}\n", "import { getAttributes } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\n\ntype ClickHandlerOptions = {\n  type: MarkType,\n  whenNotEditable: boolean,\n}\n\nexport function clickHandler(options: ClickHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handleClickLink'),\n    props: {\n      handleClick: (view, pos, event) => {\n        if (options.whenNotEditable && view.editable) {\n          return false\n        }\n        if (event.button !== 0) {\n          return false\n        }\n\n        let a = event.target as HTMLElement\n        const els = []\n\n        while (a.nodeName !== 'DIV') {\n          els.push(a)\n          a = a.parentNode as HTMLElement\n        }\n\n        if (!els.find(value => value.nodeName === 'A')) {\n          return false\n        }\n\n        const attrs = getAttributes(view.state, options.type.name)\n        const link = (event.target as HTMLLinkElement)\n\n        const href = link?.href ?? attrs.href\n        const target = link?.target ?? attrs.target\n\n        if (link && href) {\n          window.open(href, target)\n\n          return true\n        }\n\n        return false\n      },\n    },\n  })\n}\n", "import { Editor } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find } from 'linkifyjs'\n\ntype PasteHandlerOptions = {\n  editor: Editor\n  type: MarkType\n}\n\nexport function pasteHandler(options: PasteHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handlePasteLink'),\n    props: {\n      handlePaste: (view, event, slice) => {\n        const { state } = view\n        const { selection } = state\n        const { empty } = selection\n\n        if (empty) {\n          return false\n        }\n\n        let textContent = ''\n\n        slice.content.forEach(node => {\n          textContent += node.textContent\n        })\n\n        const link = find(textContent).find(item => item.isLink && item.value === textContent)\n\n        if (!textContent || !link) {\n          return false\n        }\n\n        options.editor.commands.setMark(options.type, {\n          href: link.href,\n        })\n\n        return true\n      },\n    },\n  })\n}\n", "import {\n  Mark, markPasteRule, mergeAttributes, PasteRuleMatch,\n} from '@tiptap/core'\nimport { Plugin } from '@tiptap/pm/state'\nimport { find, registerCustomProtocol, reset } from 'linkifyjs'\n\nimport { autolink } from './helpers/autolink.js'\nimport { clickHandler } from './helpers/clickHandler.js'\nimport { pasteHandler } from './helpers/pasteHandler.js'\n\nexport interface LinkProtocolOptions {\n  /**\n   * The protocol scheme to be registered.\n   * @default '''\n   * @example 'ftp'\n   * @example 'git'\n   */\n  scheme: string;\n\n  /**\n   * If enabled, it allows optional slashes after the protocol.\n   * @default false\n   * @example true\n   */\n  optionalSlashes?: boolean;\n}\n\nexport const pasteRegex = /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z]{2,}\\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)/gi\n\nexport interface LinkOptions {\n  /**\n   * If enabled, the extension will automatically add links as you type.\n   * @default true\n   * @example false\n   */\n  autolink: boolean\n\n  /**\n   * An array of custom protocols to be registered with linkifyjs.\n   * @default []\n   * @example ['ftp', 'git']\n   */\n  protocols: Array<LinkProtocolOptions | string>\n\n  /**\n   * If enabled, links will be opened on click.\n   * @default true\n   * @example false\n   * @example 'whenNotEditable'\n   */\n  openOnClick: boolean | 'whenNotEditable'\n  /**\n   * Adds a link to the current selection if the pasted content only contains an url.\n   * @default true\n   * @example false\n   */\n  linkOnPaste: boolean\n\n  /**\n   * HTML attributes to add to the link element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n\n  /**\n   * A validation function that modifies link verification for the auto linker.\n   * @param url - The url to be validated.\n   * @returns - True if the url is valid, false otherwise.\n   */\n  validate?: (url: string) => boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    link: {\n      /**\n       * Set a link mark\n       * @param attributes The link attributes\n       * @example editor.commands.setLink({ href: 'https://tiptap.dev' })\n       */\n      setLink: (attributes: { href: string; target?: string | null; rel?: string | null; class?: string | null }) => ReturnType\n      /**\n       * Toggle a link mark\n       * @param attributes The link attributes\n       * @example editor.commands.toggleLink({ href: 'https://tiptap.dev' })\n       */\n      toggleLink: (attributes: { href: string; target?: string | null; rel?: string | null; class?: string | null }) => ReturnType\n      /**\n       * Unset a link mark\n       * @example editor.commands.unsetLink()\n       */\n      unsetLink: () => ReturnType\n    }\n  }\n}\n\n/**\n * This extension allows you to create links.\n * @see https://www.tiptap.dev/api/marks/link\n */\nexport const Link = Mark.create<LinkOptions>({\n  name: 'link',\n\n  priority: 1000,\n\n  keepOnSplit: false,\n\n  onCreate() {\n    this.options.protocols.forEach(protocol => {\n      if (typeof protocol === 'string') {\n        registerCustomProtocol(protocol)\n        return\n      }\n      registerCustomProtocol(protocol.scheme, protocol.optionalSlashes)\n    })\n  },\n\n  onDestroy() {\n    reset()\n  },\n\n  inclusive() {\n    return this.options.autolink\n  },\n\n  addOptions() {\n    return {\n      openOnClick: true,\n      linkOnPaste: true,\n      autolink: true,\n      protocols: [],\n      HTMLAttributes: {\n        target: '_blank',\n        rel: 'noopener noreferrer nofollow',\n        class: null,\n      },\n      validate: undefined,\n    }\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n      },\n      target: {\n        default: this.options.HTMLAttributes.target,\n      },\n      rel: {\n        default: this.options.HTMLAttributes.rel,\n      },\n      class: {\n        default: this.options.HTMLAttributes.class,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{ tag: 'a[href]:not([href *= \"javascript:\" i])' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    // False positive; we're explicitly checking for javascript: links to ignore them\n    // eslint-disable-next-line no-script-url\n    if (HTMLAttributes.href?.startsWith('javascript:')) {\n      // strip out the href\n      return ['a', mergeAttributes(this.options.HTMLAttributes, { ...HTMLAttributes, href: '' }), 0]\n    }\n    return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setLink:\n        attributes => ({ chain }) => {\n          return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run()\n        },\n\n      toggleLink:\n        attributes => ({ chain }) => {\n          return chain()\n            .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n\n      unsetLink:\n        () => ({ chain }) => {\n          return chain()\n            .unsetMark(this.name, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n    }\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: text => {\n          const foundLinks: PasteRuleMatch[] = []\n\n          if (text) {\n            const links = find(text).filter(item => item.isLink)\n\n            if (links.length) {\n              links.forEach(link => (foundLinks.push({\n                text: link.value,\n                data: {\n                  href: link.href,\n                },\n                index: link.start,\n              })))\n            }\n          }\n\n          return foundLinks\n        },\n        type: this.type,\n        getAttributes: match => {\n          return {\n            href: match.data?.href,\n          }\n        },\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    const plugins: Plugin[] = []\n\n    if (this.options.autolink) {\n      plugins.push(\n        autolink({\n          type: this.type,\n          validate: this.options.validate,\n        }),\n      )\n    }\n\n    if (this.options.openOnClick) {\n      plugins.push(\n        clickHandler({\n          type: this.type,\n          whenNotEditable: this.options.openOnClick === 'whenNotEditable',\n        }),\n      )\n    }\n\n    if (this.options.linkOnPaste) {\n      plugins.push(\n        pasteHandler({\n          editor: this.editor,\n          type: this.type,\n        }),\n      )\n    }\n\n    return plugins\n  },\n})\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * Fires any time a user pastes into the editor\n */\nexport class RhinoPasteEvent extends BaseEvent implements ClipboardEvent {\n  static eventName = \"rhino-paste\" as const;\n\n  constructor(\n    public clipboardData: DataTransfer | null,\n    options?: EventInit | undefined,\n  ) {\n    super(RhinoPasteEvent.eventName, options);\n    this.clipboardData = clipboardData;\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [RhinoPasteEvent.eventName]: RhinoPasteEvent;\n  }\n}\n", "import { Plugin, PluginKey } from \"@tiptap/pm/state\";\nimport { RhinoPasteEvent } from \"../events/rhino-paste-event.js\";\n\nexport interface PasteOptions {}\n\n// Super simple plugin that dispatches a paste event. This is convenient way to make this hard to override.\nexport function Paste() {\n  return new Plugin({\n    key: new PluginKey(\"rhino-paste-event\"),\n    props: {\n      handlePaste(view, event) {\n        const { clipboardData } = event;\n\n        const rhinoPasteEvent = new RhinoPasteEvent(clipboardData);\n        view.dom.dispatchEvent(rhinoPasteEvent);\n\n        if (rhinoPasteEvent.defaultPrevented) {\n          return;\n        }\n\n        // @TODO: Future enhancements for pasting\n        // https://github.com/basecamp/trix/blob/fda14c5ae88a0821cf8999a53dcb3572b4172cf0/src/trix/controllers/level_0_input_controller.js#L39\n        // https://github.com/basecamp/trix/blob/fda14c5ae88a0821cf8999a53dcb3572b4172cf0/src/trix/controllers/level_2_input_controller.js#L39\n      },\n    },\n  });\n}\n", "import { Extension, Mark, Node } from \"@tiptap/core\";\nimport { Plugin } from \"@tiptap/pm/state\";\n// import {\n//   FirefoxCaretFixPlugin,\n//   FirefoxCaretPluginOptions,\n// } from \"./firefox-caret-plugin\";\nimport {\n  Attachment,\n  AttachmentOptions,\n  PreviewableAttachment,\n} from \"./attachment.js\";\nimport { Image, ImageOptions } from \"./image.js\";\nimport { Gallery, GalleryOptions } from \"./gallery.js\";\nimport { Figcaption, FigcaptionOptions } from \"./figcaption.js\";\n// import { Plugin } from \"@tiptap/pm\";\nimport { CustomStrike } from \"./strike.js\";\nimport Placeholder, { PlaceholderOptions } from \"@tiptap/extension-placeholder\";\nimport Focus, { FocusOptions } from \"@tiptap/extension-focus\";\nimport { StrikeOptions } from \"@tiptap/extension-strike\";\nimport Link, { LinkOptions } from \"@tiptap/extension-link\";\nimport { Paste, PasteOptions } from \"./paste.js\";\n\nexport interface RhinoStarterKitOptions {\n  /** Funky hack extension for contenteditable in firefox. */\n  // firefoxCaretPlugin: Partial<FirefoxCaretPluginOptions> | false;\n\n  /** Enables attachment galleries */\n  rhinoGallery: Partial<GalleryOptions> | false;\n\n  /** Enables attachments */\n  rhinoAttachment: Partial<AttachmentOptions> | false;\n\n  /** Enables captions in attachments */\n  rhinoFigcaption: Partial<FigcaptionOptions> | false;\n\n  /** Enables images in attachments */\n  rhinoImage: Partial<ImageOptions> | false;\n\n  /**\n   * Replaces the default strike from TipTap's StarterKit and replaces it with `<del>` instead of `<s>`\n   */\n  rhinoStrike: Partial<StrikeOptions> | false;\n\n  /**\n   * A plugin for finding the currently focused element. Used by various CSS styles in the editor.\n   */\n  rhinoFocus: Partial<FocusOptions> | false;\n\n  /**\n   * Enables the link dialog\n   */\n  rhinoLink: Partial<LinkOptions> | false;\n\n  /**\n   * Enables & configures the placeholder you see for captions and for empty documents\n   */\n  rhinoPlaceholder: Partial<PlaceholderOptions> | false;\n\n  /**\n   * Sends a browser event called `rhino-paste-event` everytime a user pastes something into the document.\n   */\n  rhinoPasteEvent: Partial<PasteOptions> | false;\n}\n\nexport type TipTapPlugin = Node | Extension | Mark;\n\nexport const RhinoStarterKit = Extension.create<RhinoStarterKitOptions>({\n  name: \"rhino-starter-kit\",\n  addProseMirrorPlugins() {\n    const loadedExtensions: Plugin[] = [];\n\n    const extensions: [\n      keyof RhinoStarterKitOptions,\n      (options: Record<string, unknown>) => Plugin,\n    ][] = [\n      // [\"firefoxCaretPlugin\", FirefoxCaretFixPlugin]\n      [\"rhinoPasteEvent\", Paste],\n    ];\n\n    extensions.forEach(([string, extension]) => {\n      const options = this.options[string];\n      if (options !== false) {\n        loadedExtensions.push(extension(options));\n      }\n    });\n\n    return loadedExtensions;\n  },\n\n  addExtensions() {\n    const loadedExtensions: TipTapPlugin[] = [];\n\n    const extensions: [keyof RhinoStarterKitOptions, TipTapPlugin][] = [\n      [\"rhinoGallery\", Gallery],\n      [\"rhinoAttachment\", Attachment],\n      [\"rhinoImage\", Image],\n      [\"rhinoFigcaption\", Figcaption],\n      [\"rhinoStrike\", CustomStrike],\n      [\"rhinoLink\", Link],\n      [\"rhinoFocus\", Focus],\n      [\"rhinoPlaceholder\", Placeholder],\n    ];\n\n    extensions.forEach(([string, extension]) => {\n      const options = this.options[string];\n      if (options !== false) {\n        loadedExtensions.push(extension.configure(options));\n\n        // This is a special case. Because non-previewable attachments don't belong in galleries\n        // To reduce the logic we have to write, previewable attachments are a slightly modified version of non-previewable attachments with a different \"group\" so they can belong to a gallery.\n        if (string === \"rhinoAttachment\") {\n          loadedExtensions.push(\n            PreviewableAttachment.configure(options as AttachmentOptions),\n          );\n        }\n      }\n    });\n\n    return loadedExtensions;\n  },\n});\n", "var sparkMd5 = {\n  exports: {}\n};\n\n(function(module, exports) {\n  (function(factory) {\n    {\n      module.exports = factory();\n    }\n  })((function(undefined$1) {\n    var hex_chr = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n    function md5cycle(x, k) {\n      var a = x[0], b = x[1], c = x[2], d = x[3];\n      a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n      a = (a << 7 | a >>> 25) + b | 0;\n      d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n      d = (d << 12 | d >>> 20) + a | 0;\n      c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n      c = (c << 17 | c >>> 15) + d | 0;\n      b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n      b = (b << 22 | b >>> 10) + c | 0;\n      a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n      a = (a << 7 | a >>> 25) + b | 0;\n      d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n      d = (d << 12 | d >>> 20) + a | 0;\n      c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n      c = (c << 17 | c >>> 15) + d | 0;\n      b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n      b = (b << 22 | b >>> 10) + c | 0;\n      a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n      a = (a << 7 | a >>> 25) + b | 0;\n      d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n      d = (d << 12 | d >>> 20) + a | 0;\n      c += (d & a | ~d & b) + k[10] - 42063 | 0;\n      c = (c << 17 | c >>> 15) + d | 0;\n      b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n      b = (b << 22 | b >>> 10) + c | 0;\n      a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n      a = (a << 7 | a >>> 25) + b | 0;\n      d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n      d = (d << 12 | d >>> 20) + a | 0;\n      c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n      c = (c << 17 | c >>> 15) + d | 0;\n      b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n      b = (b << 22 | b >>> 10) + c | 0;\n      a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n      a = (a << 5 | a >>> 27) + b | 0;\n      d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n      d = (d << 9 | d >>> 23) + a | 0;\n      c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n      c = (c << 14 | c >>> 18) + d | 0;\n      b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n      b = (b << 20 | b >>> 12) + c | 0;\n      a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n      a = (a << 5 | a >>> 27) + b | 0;\n      d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n      d = (d << 9 | d >>> 23) + a | 0;\n      c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n      c = (c << 14 | c >>> 18) + d | 0;\n      b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n      b = (b << 20 | b >>> 12) + c | 0;\n      a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n      a = (a << 5 | a >>> 27) + b | 0;\n      d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n      d = (d << 9 | d >>> 23) + a | 0;\n      c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n      c = (c << 14 | c >>> 18) + d | 0;\n      b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n      b = (b << 20 | b >>> 12) + c | 0;\n      a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n      a = (a << 5 | a >>> 27) + b | 0;\n      d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n      d = (d << 9 | d >>> 23) + a | 0;\n      c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n      c = (c << 14 | c >>> 18) + d | 0;\n      b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n      b = (b << 20 | b >>> 12) + c | 0;\n      a += (b ^ c ^ d) + k[5] - 378558 | 0;\n      a = (a << 4 | a >>> 28) + b | 0;\n      d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n      d = (d << 11 | d >>> 21) + a | 0;\n      c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n      c = (c << 16 | c >>> 16) + d | 0;\n      b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n      b = (b << 23 | b >>> 9) + c | 0;\n      a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n      a = (a << 4 | a >>> 28) + b | 0;\n      d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n      d = (d << 11 | d >>> 21) + a | 0;\n      c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n      c = (c << 16 | c >>> 16) + d | 0;\n      b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n      b = (b << 23 | b >>> 9) + c | 0;\n      a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n      a = (a << 4 | a >>> 28) + b | 0;\n      d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n      d = (d << 11 | d >>> 21) + a | 0;\n      c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n      c = (c << 16 | c >>> 16) + d | 0;\n      b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n      b = (b << 23 | b >>> 9) + c | 0;\n      a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n      a = (a << 4 | a >>> 28) + b | 0;\n      d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n      d = (d << 11 | d >>> 21) + a | 0;\n      c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n      c = (c << 16 | c >>> 16) + d | 0;\n      b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n      b = (b << 23 | b >>> 9) + c | 0;\n      a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n      a = (a << 6 | a >>> 26) + b | 0;\n      d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n      d = (d << 10 | d >>> 22) + a | 0;\n      c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n      c = (c << 15 | c >>> 17) + d | 0;\n      b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n      b = (b << 21 | b >>> 11) + c | 0;\n      a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n      a = (a << 6 | a >>> 26) + b | 0;\n      d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n      d = (d << 10 | d >>> 22) + a | 0;\n      c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n      c = (c << 15 | c >>> 17) + d | 0;\n      b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n      b = (b << 21 | b >>> 11) + c | 0;\n      a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n      a = (a << 6 | a >>> 26) + b | 0;\n      d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n      d = (d << 10 | d >>> 22) + a | 0;\n      c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n      c = (c << 15 | c >>> 17) + d | 0;\n      b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n      b = (b << 21 | b >>> 11) + c | 0;\n      a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n      a = (a << 6 | a >>> 26) + b | 0;\n      d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n      d = (d << 10 | d >>> 22) + a | 0;\n      c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n      c = (c << 15 | c >>> 17) + d | 0;\n      b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n      b = (b << 21 | b >>> 11) + c | 0;\n      x[0] = a + x[0] | 0;\n      x[1] = b + x[1] | 0;\n      x[2] = c + x[2] | 0;\n      x[3] = d + x[3] | 0;\n    }\n    function md5blk(s) {\n      var md5blks = [], i;\n      for (i = 0; i < 64; i += 4) {\n        md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n      }\n      return md5blks;\n    }\n    function md5blk_array(a) {\n      var md5blks = [], i;\n      for (i = 0; i < 64; i += 4) {\n        md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n      }\n      return md5blks;\n    }\n    function md51(s) {\n      var n = s.length, state = [ 1732584193, -271733879, -1732584194, 271733878 ], i, length, tail, tmp, lo, hi;\n      for (i = 64; i <= n; i += 64) {\n        md5cycle(state, md5blk(s.substring(i - 64, i)));\n      }\n      s = s.substring(i - 64);\n      length = s.length;\n      tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n      for (i = 0; i < length; i += 1) {\n        tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n      }\n      tail[i >> 2] |= 128 << (i % 4 << 3);\n      if (i > 55) {\n        md5cycle(state, tail);\n        for (i = 0; i < 16; i += 1) {\n          tail[i] = 0;\n        }\n      }\n      tmp = n * 8;\n      tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n      lo = parseInt(tmp[2], 16);\n      hi = parseInt(tmp[1], 16) || 0;\n      tail[14] = lo;\n      tail[15] = hi;\n      md5cycle(state, tail);\n      return state;\n    }\n    function md51_array(a) {\n      var n = a.length, state = [ 1732584193, -271733879, -1732584194, 271733878 ], i, length, tail, tmp, lo, hi;\n      for (i = 64; i <= n; i += 64) {\n        md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n      }\n      a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);\n      length = a.length;\n      tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n      for (i = 0; i < length; i += 1) {\n        tail[i >> 2] |= a[i] << (i % 4 << 3);\n      }\n      tail[i >> 2] |= 128 << (i % 4 << 3);\n      if (i > 55) {\n        md5cycle(state, tail);\n        for (i = 0; i < 16; i += 1) {\n          tail[i] = 0;\n        }\n      }\n      tmp = n * 8;\n      tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n      lo = parseInt(tmp[2], 16);\n      hi = parseInt(tmp[1], 16) || 0;\n      tail[14] = lo;\n      tail[15] = hi;\n      md5cycle(state, tail);\n      return state;\n    }\n    function rhex(n) {\n      var s = \"\", j;\n      for (j = 0; j < 4; j += 1) {\n        s += hex_chr[n >> j * 8 + 4 & 15] + hex_chr[n >> j * 8 & 15];\n      }\n      return s;\n    }\n    function hex(x) {\n      var i;\n      for (i = 0; i < x.length; i += 1) {\n        x[i] = rhex(x[i]);\n      }\n      return x.join(\"\");\n    }\n    if (hex(md51(\"hello\")) !== \"5d41402abc4b2a76b9719d911017c592\") ;\n    if (typeof ArrayBuffer !== \"undefined\" && !ArrayBuffer.prototype.slice) {\n      (function() {\n        function clamp(val, length) {\n          val = val | 0 || 0;\n          if (val < 0) {\n            return Math.max(val + length, 0);\n          }\n          return Math.min(val, length);\n        }\n        ArrayBuffer.prototype.slice = function(from, to) {\n          var length = this.byteLength, begin = clamp(from, length), end = length, num, target, targetArray, sourceArray;\n          if (to !== undefined$1) {\n            end = clamp(to, length);\n          }\n          if (begin > end) {\n            return new ArrayBuffer(0);\n          }\n          num = end - begin;\n          target = new ArrayBuffer(num);\n          targetArray = new Uint8Array(target);\n          sourceArray = new Uint8Array(this, begin, num);\n          targetArray.set(sourceArray);\n          return target;\n        };\n      })();\n    }\n    function toUtf8(str) {\n      if (/[\\u0080-\\uFFFF]/.test(str)) {\n        str = unescape(encodeURIComponent(str));\n      }\n      return str;\n    }\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n      var length = str.length, buff = new ArrayBuffer(length), arr = new Uint8Array(buff), i;\n      for (i = 0; i < length; i += 1) {\n        arr[i] = str.charCodeAt(i);\n      }\n      return returnUInt8Array ? arr : buff;\n    }\n    function arrayBuffer2Utf8Str(buff) {\n      return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n      var result = new Uint8Array(first.byteLength + second.byteLength);\n      result.set(new Uint8Array(first));\n      result.set(new Uint8Array(second), first.byteLength);\n      return returnUInt8Array ? result : result.buffer;\n    }\n    function hexToBinaryString(hex) {\n      var bytes = [], length = hex.length, x;\n      for (x = 0; x < length - 1; x += 2) {\n        bytes.push(parseInt(hex.substr(x, 2), 16));\n      }\n      return String.fromCharCode.apply(String, bytes);\n    }\n    function SparkMD5() {\n      this.reset();\n    }\n    SparkMD5.prototype.append = function(str) {\n      this.appendBinary(toUtf8(str));\n      return this;\n    };\n    SparkMD5.prototype.appendBinary = function(contents) {\n      this._buff += contents;\n      this._length += contents.length;\n      var length = this._buff.length, i;\n      for (i = 64; i <= length; i += 64) {\n        md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n      }\n      this._buff = this._buff.substring(i - 64);\n      return this;\n    };\n    SparkMD5.prototype.end = function(raw) {\n      var buff = this._buff, length = buff.length, i, tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], ret;\n      for (i = 0; i < length; i += 1) {\n        tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);\n      }\n      this._finish(tail, length);\n      ret = hex(this._hash);\n      if (raw) {\n        ret = hexToBinaryString(ret);\n      }\n      this.reset();\n      return ret;\n    };\n    SparkMD5.prototype.reset = function() {\n      this._buff = \"\";\n      this._length = 0;\n      this._hash = [ 1732584193, -271733879, -1732584194, 271733878 ];\n      return this;\n    };\n    SparkMD5.prototype.getState = function() {\n      return {\n        buff: this._buff,\n        length: this._length,\n        hash: this._hash.slice()\n      };\n    };\n    SparkMD5.prototype.setState = function(state) {\n      this._buff = state.buff;\n      this._length = state.length;\n      this._hash = state.hash;\n      return this;\n    };\n    SparkMD5.prototype.destroy = function() {\n      delete this._hash;\n      delete this._buff;\n      delete this._length;\n    };\n    SparkMD5.prototype._finish = function(tail, length) {\n      var i = length, tmp, lo, hi;\n      tail[i >> 2] |= 128 << (i % 4 << 3);\n      if (i > 55) {\n        md5cycle(this._hash, tail);\n        for (i = 0; i < 16; i += 1) {\n          tail[i] = 0;\n        }\n      }\n      tmp = this._length * 8;\n      tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n      lo = parseInt(tmp[2], 16);\n      hi = parseInt(tmp[1], 16) || 0;\n      tail[14] = lo;\n      tail[15] = hi;\n      md5cycle(this._hash, tail);\n    };\n    SparkMD5.hash = function(str, raw) {\n      return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n    SparkMD5.hashBinary = function(content, raw) {\n      var hash = md51(content), ret = hex(hash);\n      return raw ? hexToBinaryString(ret) : ret;\n    };\n    SparkMD5.ArrayBuffer = function() {\n      this.reset();\n    };\n    SparkMD5.ArrayBuffer.prototype.append = function(arr) {\n      var buff = concatenateArrayBuffers(this._buff.buffer, arr, true), length = buff.length, i;\n      this._length += arr.byteLength;\n      for (i = 64; i <= length; i += 64) {\n        md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n      }\n      this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n      return this;\n    };\n    SparkMD5.ArrayBuffer.prototype.end = function(raw) {\n      var buff = this._buff, length = buff.length, tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], i, ret;\n      for (i = 0; i < length; i += 1) {\n        tail[i >> 2] |= buff[i] << (i % 4 << 3);\n      }\n      this._finish(tail, length);\n      ret = hex(this._hash);\n      if (raw) {\n        ret = hexToBinaryString(ret);\n      }\n      this.reset();\n      return ret;\n    };\n    SparkMD5.ArrayBuffer.prototype.reset = function() {\n      this._buff = new Uint8Array(0);\n      this._length = 0;\n      this._hash = [ 1732584193, -271733879, -1732584194, 271733878 ];\n      return this;\n    };\n    SparkMD5.ArrayBuffer.prototype.getState = function() {\n      var state = SparkMD5.prototype.getState.call(this);\n      state.buff = arrayBuffer2Utf8Str(state.buff);\n      return state;\n    };\n    SparkMD5.ArrayBuffer.prototype.setState = function(state) {\n      state.buff = utf8Str2ArrayBuffer(state.buff, true);\n      return SparkMD5.prototype.setState.call(this, state);\n    };\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n    SparkMD5.ArrayBuffer.hash = function(arr, raw) {\n      var hash = md51_array(new Uint8Array(arr)), ret = hex(hash);\n      return raw ? hexToBinaryString(ret) : ret;\n    };\n    return SparkMD5;\n  }));\n})(sparkMd5);\n\nvar SparkMD5 = sparkMd5.exports;\n\nconst fileSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\n\nclass FileChecksum {\n  static create(file, callback) {\n    const instance = new FileChecksum(file);\n    instance.create(callback);\n  }\n  constructor(file) {\n    this.file = file;\n    this.chunkSize = 2097152;\n    this.chunkCount = Math.ceil(this.file.size / this.chunkSize);\n    this.chunkIndex = 0;\n  }\n  create(callback) {\n    this.callback = callback;\n    this.md5Buffer = new SparkMD5.ArrayBuffer;\n    this.fileReader = new FileReader;\n    this.fileReader.addEventListener(\"load\", (event => this.fileReaderDidLoad(event)));\n    this.fileReader.addEventListener(\"error\", (event => this.fileReaderDidError(event)));\n    this.readNextChunk();\n  }\n  fileReaderDidLoad(event) {\n    this.md5Buffer.append(event.target.result);\n    if (!this.readNextChunk()) {\n      const binaryDigest = this.md5Buffer.end(true);\n      const base64digest = btoa(binaryDigest);\n      this.callback(null, base64digest);\n    }\n  }\n  fileReaderDidError(event) {\n    this.callback(`Error reading ${this.file.name}`);\n  }\n  readNextChunk() {\n    if (this.chunkIndex < this.chunkCount || this.chunkIndex == 0 && this.chunkCount == 0) {\n      const start = this.chunkIndex * this.chunkSize;\n      const end = Math.min(start + this.chunkSize, this.file.size);\n      const bytes = fileSlice.call(this.file, start, end);\n      this.fileReader.readAsArrayBuffer(bytes);\n      this.chunkIndex++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction getMetaValue(name) {\n  const element = findElement(document.head, `meta[name=\"${name}\"]`);\n  if (element) {\n    return element.getAttribute(\"content\");\n  }\n}\n\nfunction findElements(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root;\n    root = document;\n  }\n  const elements = root.querySelectorAll(selector);\n  return toArray(elements);\n}\n\nfunction findElement(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root;\n    root = document;\n  }\n  return root.querySelector(selector);\n}\n\nfunction dispatchEvent(element, type, eventInit = {}) {\n  const {disabled: disabled} = element;\n  const {bubbles: bubbles, cancelable: cancelable, detail: detail} = eventInit;\n  const event = document.createEvent(\"Event\");\n  event.initEvent(type, bubbles || true, cancelable || true);\n  event.detail = detail || {};\n  try {\n    element.disabled = false;\n    element.dispatchEvent(event);\n  } finally {\n    element.disabled = disabled;\n  }\n  return event;\n}\n\nfunction toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  } else if (Array.from) {\n    return Array.from(value);\n  } else {\n    return [].slice.call(value);\n  }\n}\n\nclass BlobRecord {\n  constructor(file, checksum, url) {\n    this.file = file;\n    this.attributes = {\n      filename: file.name,\n      content_type: file.type || \"application/octet-stream\",\n      byte_size: file.size,\n      checksum: checksum\n    };\n    this.xhr = new XMLHttpRequest;\n    this.xhr.open(\"POST\", url, true);\n    this.xhr.responseType = \"json\";\n    this.xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    this.xhr.setRequestHeader(\"Accept\", \"application/json\");\n    this.xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    const csrfToken = getMetaValue(\"csrf-token\");\n    if (csrfToken != undefined) {\n      this.xhr.setRequestHeader(\"X-CSRF-Token\", csrfToken);\n    }\n    this.xhr.addEventListener(\"load\", (event => this.requestDidLoad(event)));\n    this.xhr.addEventListener(\"error\", (event => this.requestDidError(event)));\n  }\n  get status() {\n    return this.xhr.status;\n  }\n  get response() {\n    const {responseType: responseType, response: response} = this.xhr;\n    if (responseType == \"json\") {\n      return response;\n    } else {\n      return JSON.parse(response);\n    }\n  }\n  create(callback) {\n    this.callback = callback;\n    this.xhr.send(JSON.stringify({\n      blob: this.attributes\n    }));\n  }\n  requestDidLoad(event) {\n    if (this.status >= 200 && this.status < 300) {\n      const {response: response} = this;\n      const {direct_upload: direct_upload} = response;\n      delete response.direct_upload;\n      this.attributes = response;\n      this.directUploadData = direct_upload;\n      this.callback(null, this.toJSON());\n    } else {\n      this.requestDidError(event);\n    }\n  }\n  requestDidError(event) {\n    this.callback(`Error creating Blob for \"${this.file.name}\". Status: ${this.status}`);\n  }\n  toJSON() {\n    const result = {};\n    for (const key in this.attributes) {\n      result[key] = this.attributes[key];\n    }\n    return result;\n  }\n}\n\nclass BlobUpload {\n  constructor(blob) {\n    this.blob = blob;\n    this.file = blob.file;\n    const {url: url, headers: headers} = blob.directUploadData;\n    this.xhr = new XMLHttpRequest;\n    this.xhr.open(\"PUT\", url, true);\n    this.xhr.responseType = \"text\";\n    for (const key in headers) {\n      this.xhr.setRequestHeader(key, headers[key]);\n    }\n    this.xhr.addEventListener(\"load\", (event => this.requestDidLoad(event)));\n    this.xhr.addEventListener(\"error\", (event => this.requestDidError(event)));\n  }\n  create(callback) {\n    this.callback = callback;\n    this.xhr.send(this.file.slice());\n  }\n  requestDidLoad(event) {\n    const {status: status, response: response} = this.xhr;\n    if (status >= 200 && status < 300) {\n      this.callback(null, response);\n    } else {\n      this.requestDidError(event);\n    }\n  }\n  requestDidError(event) {\n    this.callback(`Error storing \"${this.file.name}\". Status: ${this.xhr.status}`);\n  }\n}\n\nlet id = 0;\n\nclass DirectUpload {\n  constructor(file, url, delegate) {\n    this.id = ++id;\n    this.file = file;\n    this.url = url;\n    this.delegate = delegate;\n  }\n  create(callback) {\n    FileChecksum.create(this.file, ((error, checksum) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n      const blob = new BlobRecord(this.file, checksum, this.url);\n      notify(this.delegate, \"directUploadWillCreateBlobWithXHR\", blob.xhr);\n      blob.create((error => {\n        if (error) {\n          callback(error);\n        } else {\n          const upload = new BlobUpload(blob);\n          notify(this.delegate, \"directUploadWillStoreFileWithXHR\", upload.xhr);\n          upload.create((error => {\n            if (error) {\n              callback(error);\n            } else {\n              callback(null, blob.toJSON());\n            }\n          }));\n        }\n      }));\n    }));\n  }\n}\n\nfunction notify(object, methodName, ...messages) {\n  if (object && typeof object[methodName] == \"function\") {\n    return object[methodName](...messages);\n  }\n}\n\nclass DirectUploadController {\n  constructor(input, file) {\n    this.input = input;\n    this.file = file;\n    this.directUpload = new DirectUpload(this.file, this.url, this);\n    this.dispatch(\"initialize\");\n  }\n  start(callback) {\n    const hiddenInput = document.createElement(\"input\");\n    hiddenInput.type = \"hidden\";\n    hiddenInput.name = this.input.name;\n    this.input.insertAdjacentElement(\"beforebegin\", hiddenInput);\n    this.dispatch(\"start\");\n    this.directUpload.create(((error, attributes) => {\n      if (error) {\n        hiddenInput.parentNode.removeChild(hiddenInput);\n        this.dispatchError(error);\n      } else {\n        hiddenInput.value = attributes.signed_id;\n      }\n      this.dispatch(\"end\");\n      callback(error);\n    }));\n  }\n  uploadRequestDidProgress(event) {\n    const progress = event.loaded / event.total * 100;\n    if (progress) {\n      this.dispatch(\"progress\", {\n        progress: progress\n      });\n    }\n  }\n  get url() {\n    return this.input.getAttribute(\"data-direct-upload-url\");\n  }\n  dispatch(name, detail = {}) {\n    detail.file = this.file;\n    detail.id = this.directUpload.id;\n    return dispatchEvent(this.input, `direct-upload:${name}`, {\n      detail: detail\n    });\n  }\n  dispatchError(error) {\n    const event = this.dispatch(\"error\", {\n      error: error\n    });\n    if (!event.defaultPrevented) {\n      alert(error);\n    }\n  }\n  directUploadWillCreateBlobWithXHR(xhr) {\n    this.dispatch(\"before-blob-request\", {\n      xhr: xhr\n    });\n  }\n  directUploadWillStoreFileWithXHR(xhr) {\n    this.dispatch(\"before-storage-request\", {\n      xhr: xhr\n    });\n    xhr.upload.addEventListener(\"progress\", (event => this.uploadRequestDidProgress(event)));\n  }\n}\n\nconst inputSelector = \"input[type=file][data-direct-upload-url]:not([disabled])\";\n\nclass DirectUploadsController {\n  constructor(form) {\n    this.form = form;\n    this.inputs = findElements(form, inputSelector).filter((input => input.files.length));\n  }\n  start(callback) {\n    const controllers = this.createDirectUploadControllers();\n    const startNextController = () => {\n      const controller = controllers.shift();\n      if (controller) {\n        controller.start((error => {\n          if (error) {\n            callback(error);\n            this.dispatch(\"end\");\n          } else {\n            startNextController();\n          }\n        }));\n      } else {\n        callback();\n        this.dispatch(\"end\");\n      }\n    };\n    this.dispatch(\"start\");\n    startNextController();\n  }\n  createDirectUploadControllers() {\n    const controllers = [];\n    this.inputs.forEach((input => {\n      toArray(input.files).forEach((file => {\n        const controller = new DirectUploadController(input, file);\n        controllers.push(controller);\n      }));\n    }));\n    return controllers;\n  }\n  dispatch(name, detail = {}) {\n    return dispatchEvent(this.form, `direct-uploads:${name}`, {\n      detail: detail\n    });\n  }\n}\n\nconst processingAttribute = \"data-direct-uploads-processing\";\n\nconst submitButtonsByForm = new WeakMap;\n\nlet started = false;\n\nfunction start() {\n  if (!started) {\n    started = true;\n    document.addEventListener(\"click\", didClick, true);\n    document.addEventListener(\"submit\", didSubmitForm, true);\n    document.addEventListener(\"ajax:before\", didSubmitRemoteElement);\n  }\n}\n\nfunction didClick(event) {\n  const {target: target} = event;\n  if ((target.tagName == \"INPUT\" || target.tagName == \"BUTTON\") && target.type == \"submit\" && target.form) {\n    submitButtonsByForm.set(target.form, target);\n  }\n}\n\nfunction didSubmitForm(event) {\n  handleFormSubmissionEvent(event);\n}\n\nfunction didSubmitRemoteElement(event) {\n  if (event.target.tagName == \"FORM\") {\n    handleFormSubmissionEvent(event);\n  }\n}\n\nfunction handleFormSubmissionEvent(event) {\n  const form = event.target;\n  if (form.hasAttribute(processingAttribute)) {\n    event.preventDefault();\n    return;\n  }\n  const controller = new DirectUploadsController(form);\n  const {inputs: inputs} = controller;\n  if (inputs.length) {\n    event.preventDefault();\n    form.setAttribute(processingAttribute, \"\");\n    inputs.forEach(disable);\n    controller.start((error => {\n      form.removeAttribute(processingAttribute);\n      if (error) {\n        inputs.forEach(enable);\n      } else {\n        submitForm(form);\n      }\n    }));\n  }\n}\n\nfunction submitForm(form) {\n  let button = submitButtonsByForm.get(form) || findElement(form, \"input[type=submit], button[type=submit]\");\n  if (button) {\n    const {disabled: disabled} = button;\n    button.disabled = false;\n    button.focus();\n    button.click();\n    button.disabled = disabled;\n  } else {\n    button = document.createElement(\"input\");\n    button.type = \"submit\";\n    button.style.display = \"none\";\n    form.appendChild(button);\n    button.click();\n    form.removeChild(button);\n  }\n  submitButtonsByForm.delete(form);\n}\n\nfunction disable(input) {\n  input.disabled = true;\n}\n\nfunction enable(input) {\n  input.disabled = false;\n}\n\nfunction autostart() {\n  if (window.ActiveStorage) {\n    start();\n  }\n}\n\nsetTimeout(autostart, 1);\n\nexport { DirectUpload, start };\n", "import { DirectUpload } from \"@rails/activestorage\";\nimport type { Blob, DirectUploadDelegate } from \"@rails/activestorage\";\nimport { AttachmentManager } from \"./attachment-manager.js\";\nimport { LOADING_STATES } from \"./elements/attachment-editor.js\";\n\n/**\n * An extension of DirectUpload. This is what handles uploading to remote sources\n *   for attachments.\n */\nexport class AttachmentUpload implements DirectUploadDelegate {\n  directUpload: DirectUpload;\n  attachment: AttachmentManager;\n  element: HTMLElement;\n  currentProgress = 0;\n\n  constructor(attachment: AttachmentManager, element: HTMLElement) {\n    this.attachment = attachment;\n    this.element = element;\n\n    if (this.attachment.file == null) throw \"No file found for direct upload\";\n\n    this.directUpload = new DirectUpload(\n      this.attachment.file,\n      this.directUploadUrl,\n      this,\n    );\n  }\n\n  start() {\n    this.directUpload.create(this.directUploadDidComplete.bind(this));\n  }\n\n  directUploadWillStoreFileWithXHR(xhr: XMLHttpRequest) {\n    xhr.upload.addEventListener(\"progress\", (event) => {\n      const progress = (event.loaded / event.total) * 100;\n      this.currentProgress = progress;\n      this.setUploadProgress();\n    });\n  }\n\n  directUploadDidComplete(\n    error: Error,\n    blob: Blob & { attachable_sgid?: string },\n  ) {\n    if (error) {\n      this.currentProgress = 0;\n      if (this.attachment.content == null) {\n        this.attachment.setNodeMarkup({\n          progress: 0,\n          loadingState: LOADING_STATES.error,\n        });\n      }\n\n      throw Error(`Direct upload failed: ${error}`);\n    }\n\n    this.attachment.setAttributes({\n      sgid: blob.attachable_sgid ?? \"\",\n      url: this.createBlobUrl(blob.signed_id, blob.filename),\n    });\n\n    this.currentProgress = 100;\n    this.setUploadProgress();\n  }\n\n  setUploadProgress() {\n    if (this.currentProgress >= 100) {\n      this.currentProgress = 100;\n      this.attachment.setUploadProgress(100);\n      return;\n    }\n\n    this.attachment.setUploadProgress(this.currentProgress);\n  }\n\n  createBlobUrl(signedId: string, filename: string) {\n    if (this.blobUrlTemplate == null) return \"\";\n\n    return this.blobUrlTemplate\n      .replace(\":signed_id\", signedId)\n      .replace(\":filename\", encodeURIComponent(filename));\n  }\n\n  get directUploadUrl() {\n    if (this.element.dataset.directUploadUrl == null) {\n      throw Error(\n        `No \"data-direct-upload-url\" attribute is set on ${this.element}`,\n      );\n    }\n    return this.element.dataset.directUploadUrl;\n  }\n\n  get blobUrlTemplate() {\n    return this.element.dataset.blobUrlTemplate;\n  }\n}\n", "import { AttachmentManager } from \"../attachment-manager.js\";\nimport { BaseEvent } from \"./base-event.js\";\n\n/**\n * A mapping of the \"trix-attachment-add\" for Rhino that follows the same construct.\n *   Fires after an attachment has been added.\n */\nexport class AddAttachmentEvent extends BaseEvent {\n  static eventName = \"rhino-attachment-add\" as const;\n\n  constructor(\n    public attachment: AttachmentManager,\n    options: Partial<EventInit> = {},\n  ) {\n    super(AddAttachmentEvent.eventName, options);\n    this.attachment = attachment;\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [AddAttachmentEvent.eventName]: AddAttachmentEvent;\n  }\n}\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * A mapping of the \"trix-attachment-add\" for rhino that follows the same construct.\n *   Use this to prevent uploading a file by calling `event.preventDefault()`\n */\nexport class FileAcceptEvent extends BaseEvent {\n  static eventName = \"rhino-file-accept\" as const;\n\n  constructor(\n    public file: File,\n    options?: EventInit | undefined,\n  ) {\n    super(FileAcceptEvent.eventName, options);\n    this.file = file;\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [FileAcceptEvent.eventName]: FileAcceptEvent;\n  }\n}\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * Fires before the editor has been created\n */\nexport class BeforeInitializeEvent extends BaseEvent {\n  static eventName = \"rhino-before-initialize\" as const;\n\n  constructor(options?: EventInit | undefined) {\n    super(BeforeInitializeEvent.eventName, options);\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [BeforeInitializeEvent.eventName]: BeforeInitializeEvent;\n  }\n}\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * Fires after the editor has been created\n */\nexport class InitializeEvent extends BaseEvent {\n  static eventName = \"rhino-initialize\" as const;\n\n  constructor(options?: EventInit | undefined) {\n    super(InitializeEvent.eventName, options);\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [InitializeEvent.eventName]: InitializeEvent;\n  }\n}\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * Fires any time a user pastes into the editor\n */\nexport class RhinoFocusEvent extends BaseEvent {\n  static eventName = \"rhino-focus\" as const;\n\n  constructor(options?: EventInit | undefined) {\n    super(RhinoFocusEvent.eventName, options);\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [RhinoFocusEvent.eventName]: RhinoFocusEvent;\n  }\n}\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * Fires any time a user pastes into the editor\n */\nexport class RhinoBlurEvent extends BaseEvent {\n  static eventName = \"rhino-blur\" as const;\n\n  constructor(options?: EventInit | undefined) {\n    super(RhinoBlurEvent.eventName, options);\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [RhinoBlurEvent.eventName]: RhinoBlurEvent;\n  }\n}\n", "import { BaseEvent } from \"./base-event.js\";\n\n/**\n * Fires any time the editor changes\n */\nexport class RhinoChangeEvent extends BaseEvent {\n  static eventName = \"rhino-change\" as const;\n\n  constructor(options?: EventInit | undefined) {\n    super(RhinoChangeEvent.eventName, options);\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [RhinoChangeEvent.eventName]: RhinoChangeEvent;\n  }\n}\n", "import { Transaction } from \"@tiptap/pm/state\";\nimport { BaseEvent } from \"./base-event.js\";\n\nexport interface SelectionChangeProps {\n  transaction: Transaction;\n}\n\n/**\n * Fires before the editor has been created\n */\nexport class SelectionChangeEvent extends BaseEvent {\n  static eventName = \"rhino-selection-change\" as const;\n\n  transaction: Transaction;\n\n  constructor(\n    { transaction }: SelectionChangeProps,\n    options?: EventInit | undefined,\n  ) {\n    super(SelectionChangeEvent.eventName, options);\n    this.transaction = transaction;\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [SelectionChangeEvent.eventName]: SelectionChangeEvent;\n  }\n}\n", "import { BaseElement } from \"../../internal/elements/base-element.js\";\nimport { Content, Editor, EditorOptions } from \"@tiptap/core\";\nimport { tipTapCoreStyles } from \"../styles/tip-tap-core-styles.js\";\n// https://tiptap.dev/api/extensions/starter-kit#included-extensions\nimport StarterKit, { StarterKitOptions } from \"@tiptap/starter-kit\";\nimport {\n  RhinoStarterKit,\n  RhinoStarterKitOptions,\n} from \"../extensions/rhino-starter-kit.js\";\n\nimport {\n  CSSResult,\n  html,\n  PropertyDeclarations,\n  PropertyValueMap,\n  TemplateResult,\n} from \"lit\";\n\nimport { AttachmentUpload } from \"../attachment-upload.js\";\nimport { AttachmentManager } from \"../attachment-manager.js\";\n\nimport { normalize } from \"../styles/normalize.js\";\nimport editorStyles from \"../styles/editor.js\";\n\nimport { AddAttachmentEvent } from \"../events/add-attachment-event.js\";\n\nimport type { Maybe } from \"../../types.js\";\nimport { AttachmentEditor } from \"./attachment-editor.js\";\nimport { FileAcceptEvent } from \"../events/file-accept-event.js\";\nimport { BeforeInitializeEvent } from \"../events/before-initialize-event.js\";\nimport { InitializeEvent } from \"../events/initialize-event.js\";\nimport { RhinoFocusEvent } from \"../events/rhino-focus-event.js\";\nimport { RhinoBlurEvent } from \"../events/rhino-blur-event.js\";\nimport { RhinoChangeEvent } from \"../events/rhino-change-event.js\";\nimport { SelectionChangeEvent } from \"../events/selection-change-event.js\";\nimport { RhinoPasteEvent } from \"../events/rhino-paste-event.js\";\nimport { DOMSerializer, Slice } from \"@tiptap/pm/model\";\nimport { EditorView } from \"@tiptap/pm/view\";\n\nexport type Serializer = \"\" | \"html\" | \"json\";\n\nexport type RhinoEditorStarterKitOptions = StarterKitOptions &\n  RhinoStarterKitOptions & {\n    // Indentation is a special case because it uses built-in editor commands and doesn't rely on extensions.\n    increaseIndentation: boolean;\n    decreaseIndentation: boolean;\n  };\n\nexport class TipTapEditorBase extends BaseElement {\n  // Static\n\n  /**\n   * Default registration name\n   */\n  static baseName = \"rhino-editor\";\n\n  static get styles(): CSSResult[] {\n    return [normalize, tipTapCoreStyles, editorStyles];\n  }\n\n  static get properties(): PropertyDeclarations {\n    return {\n      // Attributes\n      readonly: { type: Boolean, reflect: true },\n      input: { reflect: true },\n      class: { reflect: true },\n      accept: { reflect: true },\n      serializer: { reflect: true },\n\n      // Properties\n      editor: { state: true },\n      editorElement: { state: true },\n      starterKitOptions: { state: true },\n      extensions: { state: true },\n    };\n  }\n\n  // Instance\n\n  /**\n   * Whether or not the editor should be editable.\n   *\n   * NOTE: a user can change this in the browser dev tools, don't rely on this to prevent\n   * users from editing and attempting to save the document.\n   */\n  readonly: boolean = false;\n\n  /**\n   * Prevents premature rebuilds.\n   */\n  hasInitialized = false;\n\n  /**\n   * The hidden input to attach to\n   */\n  input: Maybe<string>;\n\n  /**\n   * The currently attached TipTap instance\n   */\n  editor: Maybe<Editor>;\n\n  /**\n   * The element that TipTap is attached to\n   */\n  editorElement: Maybe<Element>;\n\n  /**\n   * JSON or HTML serializer used for determining the string to write to the hidden input.\n   */\n  serializer: Serializer = \"html\";\n\n  /** Comma separated string passed to the attach-files input. */\n  accept: string = \"*\";\n\n  starterKitOptions: Partial<RhinoEditorStarterKitOptions> = {\n    // We don't use the native strike since it requires configuring ActionText.\n    strike: false,\n    rhinoLink: {\n      openOnClick: false,\n    },\n  };\n\n  /**\n   * This will be concatenated onto RhinoStarterKit and StarterKit extensions.\n   */\n  extensions: EditorOptions[\"extensions\"] = [];\n\n  /**\n   * @internal\n   */\n  __initialAttributes: Record<string, string> = {};\n\n  /**\n   * @internal\n   */\n  __hasRendered: boolean = false;\n\n  __getInitialAttributes() {\n    if (this.__hasRendered) return;\n\n    const slottedEditor = this.slottedEditor;\n    if (slottedEditor) {\n      this.__initialAttributes = {};\n      [...slottedEditor.attributes].forEach((attr) => {\n        const { nodeName, nodeValue } = attr;\n        if (nodeName && nodeValue != null) {\n          this.__initialAttributes[nodeName] = nodeValue;\n        }\n      });\n    }\n\n    this.__hasRendered = true;\n  }\n\n  /**\n   * Reset mechanism. This is called on first connect, and called anytime extensions,\n   * or editor options get modified to make sure we have a fresh instance.\n   */\n  rebuildEditor() {\n    if (!this.hasInitialized) return;\n\n    const editors = this.querySelectorAll(\"[slot='editor']\");\n\n    this.__getInitialAttributes();\n\n    // Make sure we dont render the editor more than once.\n    if (this.editor) this.editor.destroy();\n\n    editors.forEach((el) => {\n      // @ts-expect-error\n      el.editor?.destroy();\n      el.remove();\n    });\n\n    this.editor = this.__setupEditor(this);\n\n    this.__bindEditorListeners();\n\n    this.editorElement = this.querySelector(\".ProseMirror\");\n\n    Object.entries(this.__initialAttributes)?.forEach(\n      ([attrName, attrValue]) => {\n        if (attrName === \"class\") {\n          this.editorElement?.classList.add(...attrValue.split(\" \"));\n          return;\n        }\n        this.editorElement?.setAttribute(attrName, attrValue);\n      },\n    );\n\n    this.editorElement?.setAttribute(\"slot\", \"editor\");\n    this.editorElement?.classList.add(\"trix-content\");\n    this.editorElement?.setAttribute(\"tabindex\", \"0\");\n    this.editorElement?.setAttribute(\"role\", \"textbox\");\n\n    // For good measure for rendering.\n    this.requestUpdate();\n  }\n\n  /**\n   * Grabs HTML content based on a given range. If no range is given, it will return the contents\n   *   of the current editor selection. If the current selection is empty, it will return an empty string.\n   * @param from - The start of the selection\n   * @param to - The end of the selection\n   * @example Getting the HTML content of the current selection\n   *    const rhinoEditor = document.querySelector(\"rhino-editor\")\n   *    rhinoEditor.getHTMLContentFromRange()\n   *\n   * @example Getting the HTML content of node range\n   *    const rhinoEditor = document.querySelector(\"rhino-editor\")\n   *    rhinoEditor.getHTMLContentFromRange(0, 50)\n   *\n   * @example Getting the HTML content and falling back to entire editor HTML\n   *    const rhinoEditor = document.querySelector(\"rhino-editor\")\n   *    let html = rhinoEditor.getHTMLContentFromRange()\n   *    if (!html) {\n   *       html = rhinoEditor.editor.getHTML()\n   *    }\n   */\n  getHTMLContentFromRange(from?: number, to?: number) {\n    const editor = this.editor;\n\n    if (!editor) return \"\";\n\n    let empty;\n\n    if (!from && !to) {\n      const currentSelection = editor.state.selection;\n\n      from = currentSelection.from;\n      to = currentSelection.to;\n    }\n\n    if (empty) {\n      return \"\";\n    }\n    if (from == null) {\n      return \"\";\n    }\n    if (to == null) {\n      return \"\";\n    }\n\n    const { state } = editor;\n    const htmlArray: string[] = [];\n\n    const tempScript = document.createElement(\"script\");\n    // We want plain text so we don't parse.\n    tempScript.type = \"text/plain\";\n\n    state.doc.nodesBetween(from, to, (node, _pos, parent) => {\n      if (parent === state.doc) {\n        tempScript.innerHTML = \"\";\n        const serializer = DOMSerializer.fromSchema(editor.schema);\n        const dom = serializer.serializeNode(node);\n        tempScript.appendChild(dom);\n        htmlArray.push(tempScript.innerHTML);\n        tempScript.innerHTML = \"\";\n      }\n    });\n\n    return htmlArray.join(\"\");\n  }\n\n  /**\n   * Grabs plain text representation based on a given range. If no parameters are given, it will return the contents\n   *   of the current selection. If the current selection is empty, it will return an empty string.\n   * @param from - The start of the selection\n   * @param to - The end of the selection\n   * @example Getting the Text content of the current selection\n   *    const rhinoEditor = document.querySelector(\"rhino-editor\")\n   *    rhinoEditor.getTextContentFromRange()\n   *\n   * @example Getting the Text content of node range\n   *    const rhinoEditor = document.querySelector(\"rhino-editor\")\n   *    rhinoEditor.getTextContentFromRange(0, 50)\n   *\n   * @example Getting the Text content and falling back to entire editor Text\n   *    const rhinoEditor = document.querySelector(\"rhino-editor\")\n   *    let text = rhinoEditor.getTextContentFromRange()\n   *    if (!text) {\n   *       text = rhinoEditor.editor.getText()\n   *    }\n   */\n  getTextContentFromRange(from?: number, to?: number) {\n    const editor = this.editor;\n\n    if (!editor) {\n      return \"\";\n    }\n\n    let empty;\n\n    if (!from && !to) {\n      const selection = editor.state.selection;\n      from = selection.from;\n      to = selection.to;\n      empty = selection.empty;\n    }\n\n    if (empty) {\n      return \"\";\n    }\n    if (from == null) {\n      return \"\";\n    }\n    if (to == null) {\n      return \"\";\n    }\n\n    return editor.state.doc.textBetween(from, to, \" \");\n  }\n\n  protected willUpdate(\n    changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    if (changedProperties.has(\"class\")) {\n      this.classList.add(\"rhino-editor\");\n    }\n\n    super.willUpdate(changedProperties);\n  }\n\n  protected updated(\n    changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    if (!this.hasInitialized) {\n      return super.updated(changedProperties);\n    }\n\n    if (changedProperties.has(\"readonly\")) {\n      this.editor?.setEditable(!this.readonly);\n    }\n\n    if (\n      changedProperties.has(\"extensions\") ||\n      changedProperties.has(\"serializer\") ||\n      changedProperties.has(\"starterKitOptions\") ||\n      changedProperties.has(\"translations\")\n    ) {\n      this.rebuildEditor();\n    }\n\n    if (changedProperties.has(\"serializer\")) {\n      this.updateInputElementValue();\n    }\n\n    super.updated(changedProperties);\n  }\n\n  /** Used for registering things like <role-toolbar>, <role-tooltip>, <rhino-attachment-editor> */\n  registerDependencies() {\n    [AttachmentEditor].forEach((el) => el.define());\n  }\n\n  get slottedEditor() {\n    return this.querySelector(\"[slot='editor']\");\n  }\n\n  constructor() {\n    super();\n\n    this.registerDependencies();\n    this.addEventListener(AddAttachmentEvent.eventName, this.handleAttachment);\n\n    this.addEventListener(\"drop\", this.handleNativeDrop);\n    this.addEventListener(\"rhino-paste\", this.handlePaste);\n    this.addEventListener(\"rhino-file-accept\", this.handleFileAccept);\n  }\n\n  async connectedCallback(): Promise<void> {\n    super.connectedCallback();\n\n    this.__setupInitialization__();\n\n    if (this.editor) {\n      this.__unBindEditorListeners();\n    }\n\n    this.classList.add(\"rhino-editor\");\n\n    await this.updateComplete;\n\n    setTimeout(() => {\n      this.dispatchEvent(new BeforeInitializeEvent());\n\n      setTimeout(async () => {\n        await this.updateComplete;\n        this.hasInitialized = true;\n        this.rebuildEditor();\n        this.dispatchEvent(new InitializeEvent());\n        this.__initializationResolver__?.();\n      });\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.editor?.destroy();\n    this.hasInitialized = false;\n    this.__initializationPromise__ = null;\n    this.__initializationResolver__ = null;\n  }\n\n  __initializationPromise__: null | Promise<void> = null;\n  __initializationResolver__:\n    | null\n    | ((value: void | PromiseLike<void>) => void) = null;\n\n  __setupInitialization__() {\n    if (!this.__initializationPromise__) {\n      this.__initializationPromise__ = new Promise<void>((resolve) => {\n        this.__initializationResolver__ = resolve;\n      });\n    }\n  }\n\n  get initializationComplete() {\n    this.__setupInitialization__();\n    return this.__initializationPromise__;\n  }\n\n  /**\n   * Used for determining how to handle uploads.\n   *   Override this for substituting your own\n   *   direct upload functionality.\n   */\n  handleAttachment = (event: AddAttachmentEvent) => {\n    // To allow for event delegation to take effect, we wait until the next event loop to handle the attachment.\n    setTimeout(() => {\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      const { attachment, target } = event;\n\n      if (target instanceof HTMLElement && attachment.file) {\n        const upload = new AttachmentUpload(attachment, target);\n        upload.start();\n      }\n    });\n  };\n\n  /** Override this to prevent specific file types from being uploaded. */\n  handleFileAccept = (_event: FileAcceptEvent) => {};\n\n  addExtensions(\n    ...extensions:\n      | EditorOptions[\"extensions\"]\n      | Array<EditorOptions[\"extensions\"]>\n  ) {\n    if (Array.isArray(extensions)) {\n      extensions = extensions.flat(1);\n    }\n\n    this.extensions = this.extensions.concat(extensions);\n  }\n\n  /**\n   * Extend this to provide your own options, or override existing options.\n   * The \"element\" is where the editor will be initialized.\n   * This will be merged\n   *   @example\n   *    class ExtendedRhinoEditor extends TipTapEditor {\n   *      editorOptions (_element: Element) {\n   *        return {\n   *          autofocus: true\n   *        }\n   *      }\n   *    }\n   *\n   */\n  editorOptions(_element?: Element): Partial<EditorOptions> {\n    return {};\n  }\n\n  /**\n   * Finds the <input> element in the light dom and updates it with the value of `#serialize()`\n   */\n  updateInputElementValue() {\n    if (this.inputElement != null && this.editor != null && !this.readonly) {\n      this.inputElement.value = this.serialize();\n    }\n  }\n\n  /**\n   * Function called when grabbing the content of the editor. Currently supports JSON or HTML.\n   */\n  serialize() {\n    if (this.editor == null) return \"\";\n\n    if (this.serializer?.toLowerCase() === \"json\") {\n      return JSON.stringify(this.editor.getJSON());\n    }\n\n    return this.editor.getHTML();\n  }\n\n  /**\n   * Searches for the <input> element in the light dom to write the HTML or JSON to.\n   */\n  get inputElement(): Maybe<HTMLInputElement> {\n    if (this.input == null) return undefined;\n\n    return document.getElementById(this.input) as Maybe<HTMLInputElement>;\n  }\n\n  async handleFiles(files: File[] | FileList): Promise<AttachmentManager[]> {\n    if (this.editor == null) return [];\n    if (files == null) return [];\n\n    return new Promise((resolve, _reject) => {\n      const fileAcceptEvents = [...files].map((file) => {\n        const event = new FileAcceptEvent(file);\n        this.dispatchEvent(event);\n        return event;\n      });\n\n      const allowedFiles: File[] = [];\n\n      for (let i = 0; i < fileAcceptEvents.length; i++) {\n        const event = fileAcceptEvents[i];\n        if (event.defaultPrevented) {\n          continue;\n        }\n        allowedFiles.push(event.file);\n      }\n\n      const attachments = this.transformFilesToAttachments(allowedFiles);\n\n      if (attachments == null || attachments.length <= 0) return;\n\n      attachments.forEach((attachment) => {\n        this.dispatchEvent(new AddAttachmentEvent(attachment));\n      });\n\n      // Need to reset the input otherwise you get this fun state where you can't\n      //   insert the same file multiple times.\n      resolve(attachments);\n    });\n  }\n\n  handleDropFile = (\n    _view: EditorView,\n    event: DragEvent,\n    _slice: Slice,\n    moved: boolean,\n  ) => {\n    if (!(event instanceof DragEvent)) return false;\n    if (moved) return false;\n\n    return this.handleNativeDrop(event);\n  };\n\n  /**\n   * Handles dropped files on the component, but not on the prosemirror instance.\n   */\n  handleNativeDrop(event: DragEvent): boolean {\n    if (this.editor == null) return false;\n    if (event == null) return false;\n    //\n    const { dataTransfer } = event;\n    if (dataTransfer == null) return false;\n    if (dataTransfer.files.length <= 0) return false;\n\n    // This prevents this from firing twice because we both attach here and on the prosemirror instance\n    if (event.defaultPrevented) return false;\n\n    event.preventDefault();\n\n    this.handleFiles(dataTransfer.files).then((attachments) => {\n      this.editor\n        ?.chain()\n        .focus()\n        .setAttachmentAtCoords(attachments, {\n          top: event.clientY,\n          left: event.clientX,\n        })\n        .run();\n    });\n\n    return true;\n  }\n\n  handlePaste = async (event: RhinoPasteEvent) => {\n    if (this.editor == null) return;\n    if (event == null) return;\n    if (!(event instanceof ClipboardEvent)) return;\n\n    const { clipboardData } = event;\n    if (clipboardData == null) return;\n\n    const hasFiles = clipboardData.files?.length > 0;\n    if (!hasFiles) return;\n\n    event.preventDefault();\n\n    // This inserts the file name, this is consistent with Trix, but can feel weird.\n    this.editor.commands.insertContent(clipboardData.items);\n    const attachments = await this.handleFiles(clipboardData.files);\n\n    if (attachments.length > 0) {\n      this.editor?.chain().focus().setAttachment(attachments).run();\n    }\n  };\n\n  transformFilesToAttachments(files?: File[] | FileList | null) {\n    if (this.editor == null) return;\n    if (files == null || files.length === 0) return;\n\n    const attachments: AttachmentManager[] = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      if (file == null) return;\n      const src = URL.createObjectURL(file);\n\n      const attachment: AttachmentManager = new AttachmentManager(\n        {\n          src,\n          file,\n        },\n        this.editor.view,\n      );\n\n      attachments.push(attachment);\n    }\n\n    return attachments;\n  }\n\n  renderToolbar() {\n    return html``;\n  }\n\n  renderDialog() {}\n\n  render(): TemplateResult {\n    return html`\n      ${this.renderToolbar()}\n      <div class=\"editor-wrapper\" part=\"editor-wrapper\">\n        ${this.renderDialog()}\n        <div class=\"editor\" part=\"editor\">\n          <slot name=\"editor\">\n            <div class=\"trix-content\"></div>\n          </slot>\n        </div>\n      </div>\n    `;\n  }\n\n  allOptions(element: Element) {\n    return Object.assign(\n      this.__defaultOptions(element),\n      this.editorOptions(element),\n    );\n  }\n\n  /**\n   * Due to some inconsistencies in how Trix will render the inputElement based on if its\n   * the HTML representation, or transfromed with `#to_trix_html` this gives\n   * us a consistent DOM structure to parse for rich text comments.\n   */\n  private normalizeDOM(\n    inputElement: Maybe<HTMLInputElement>,\n    parser = new DOMParser(),\n  ) {\n    if (inputElement == null || inputElement.value == null) return;\n\n    const doc = parser.parseFromString(inputElement.value, \"text/html\");\n    const figures = [...doc.querySelectorAll(\"figure[data-trix-attachment]\")];\n    const filtersWithoutChildren = figures.filter(\n      (figure) => figure.querySelector(\"figcaption\") == null,\n    );\n\n    doc.querySelectorAll(\"div > figure:first-child\").forEach((el) => {\n      el.parentElement?.classList.add(\"attachment-gallery\");\n    });\n\n    filtersWithoutChildren.forEach((figure) => {\n      const attrs = figure.getAttribute(\"data-trix-attributes\");\n\n      if (!attrs) return;\n\n      const { caption } = JSON.parse(attrs);\n      if (caption) {\n        figure.insertAdjacentHTML(\n          \"beforeend\",\n          `<figcaption class=\"attachment__caption\">${caption}</figcaption>`,\n        );\n        return;\n      }\n    });\n\n    doc\n      .querySelectorAll(\n        \"figure :not(.attachment__caption--edited) .attachment__name\",\n      )\n      .forEach((el) => {\n        if (el.textContent?.includes(\" \u00B7 \") === false) return;\n\n        el.insertAdjacentText(\"beforeend\", \" \u00B7 \");\n      });\n\n    const body = doc.querySelector(\"body\");\n\n    if (body) {\n      inputElement.value = body.innerHTML;\n    }\n  }\n\n  /**\n   * @private\n   * Use a getter here so when we rebuild the editor it pulls the latest starterKitOptions\n   * This is intentionally not to be configured by a user. It makes updating extensions hard.\n   *  it also is a getter and not a variable so that it will rerun in case options change.\n   */\n  private get __starterKitExtensions__(): EditorOptions[\"extensions\"] {\n    return [\n      StarterKit.configure(this.starterKitOptions),\n      RhinoStarterKit.configure(this.starterKitOptions),\n    ];\n  }\n\n  /**\n   * @param {Element} element - The element that the editor will be installed onto.\n   */\n  private __defaultOptions(element: Element): Partial<EditorOptions> {\n    let content: Content = this.inputElement?.value || \"\";\n\n    if (content) {\n      try {\n        content = JSON.parse(content);\n      } catch (e) {}\n    }\n\n    return {\n      injectCSS: false,\n      extensions: this.__starterKitExtensions__.concat(this.extensions),\n      autofocus: false,\n      element,\n      content,\n      editable: !this.readonly,\n      editorProps: {\n        handleDrop: this.handleDropFile,\n      },\n    };\n  }\n\n  private __handleCreate: EditorOptions[\"onCreate\"] = () => {\n    this.requestUpdate();\n  };\n\n  private __handleUpdate: EditorOptions[\"onUpdate\"] = () => {\n    this.requestUpdate();\n\n    if (!this.hasInitialized) {\n      return;\n    }\n\n    // We dont want to update until we've fully initialized to give time for user extensions to kick in.\n    this.updateInputElementValue();\n    this.dispatchEvent(new RhinoChangeEvent());\n  };\n\n  private __handleFocus: EditorOptions[\"onFocus\"] = () => {\n    this.dispatchEvent(new RhinoFocusEvent());\n    this.requestUpdate();\n  };\n\n  private __handleBlur: EditorOptions[\"onBlur\"] = () => {\n    this.updateInputElementValue();\n    this.requestUpdate();\n    this.dispatchEvent(new RhinoBlurEvent());\n  };\n\n  private __handleSelectionUpdate: EditorOptions[\"onSelectionUpdate\"] = ({\n    transaction,\n  }) => {\n    this.requestUpdate();\n    this.dispatchEvent(new SelectionChangeEvent({ transaction }));\n  };\n\n  private __handleTransaction: EditorOptions[\"onTransaction\"] = () => {\n    this.requestUpdate();\n  };\n\n  private __bindEditorListeners(): void {\n    if (this.editor == null) return;\n\n    this.editor.on(\"focus\", this.__handleFocus);\n    this.editor.on(\"create\", this.__handleCreate);\n    this.editor.on(\"update\", this.__handleUpdate);\n    this.editor.on(\"selectionUpdate\", this.__handleSelectionUpdate);\n    this.editor.on(\"transaction\", this.__handleTransaction);\n    this.editor.on(\"blur\", this.__handleBlur);\n  }\n\n  private __unBindEditorListeners(): void {\n    if (this.editor == null) return;\n\n    this.editor.off(\"focus\", this.__handleFocus);\n    this.editor.off(\"create\", this.__handleCreate);\n    this.editor.off(\"update\", this.__handleUpdate);\n    this.editor.off(\"selectionUpdate\", this.__handleSelectionUpdate);\n    this.editor.off(\"transaction\", this.__handleTransaction);\n    this.editor.off(\"blur\", this.__handleBlur);\n  }\n\n  private __setupEditor(element: Element = this): Editor {\n    if (!this.serializer || this.serializer === \"html\") {\n      // This is a super hacky way to get __to_trix_html to support figcaptions without patching it.\n      this.normalizeDOM(this.inputElement);\n    }\n\n    const editor = new Editor(this.allOptions(element));\n\n    return editor;\n  }\n}\n", "// @ts-check\n\n/**\n * Extends any extension of HTMLElement to call `.define()` as well as register children.\n * @template {import(\"../../types.js\").Constructor} T\n * @param {T} superclass\n * @example\n *   // usage with LitElement\n *   import { LitElement } from \"lit\"\n *   import { DefineableMixin } from \"web-component-definition\"\n *   export class BaseLitElement extends DefineableMixin(LitElement) {}\n * @example\n *   // usage with HTMLElement\n *   import { LitElement } from \"lit\"\n *   import { DefineableMixin } from \"web-component-definition\"\n *   export class BaseLitElement extends DefineableMixin(LitElement) {}\n * @example\n *   // usage with prebuilt HTMLElement mixin\n *   import { LitElement } from \"lit\"\n *   import { DefineableElement } from \"web-component-definition\"\n *   export class BaseElement extends DefineableElement {}\n */\nexport function DefineableMixin(superclass) {\n  return class DefineableClass extends superclass {\n    /**\n     * The tag name to register your custom element under.\n     * @type {string}\n     */\n    static baseName = '';\n\n    /**\n     * Emits a console warning if the name for an element is already taken.\n     * @type {boolean}\n     */\n    static warnOnExistingElement = false\n\n    /**\n    * @param {null | undefined | string} [name=this.baseName]\n    * @param {null | undefined | CustomElementConstructor} [ctor=this]\n    * @param {ElementDefinitionOptions | undefined} [options]\n    */\n    static define(name, ctor, options) {\n      if (!name) name = this.baseName;\n\n      if (!ctor) ctor = this;\n\n      let registry = window.customElements\n\n      /** @ts-expect-error */\n      if (this.__registry instanceof CustomElementRegistry) {\n        /** @ts-expect-error */\n        registry = this.__registry\n      }\n\n      const alreadyExists = Boolean(registry.get(name))\n\n      if (alreadyExists && this.warnOnExistingElement) {\n        console.warn(`${name} has already been registered.`)\n      }\n\n      if (!alreadyExists && ctor) {\n        registry.define(name, class extends ctor {}, options);\n      }\n    }\n  };\n}\n\n/**\n * Prebuilt class for extending HTMLElement\n * @example\n *   // Base use-case\n *   class MyCard extends DefineableElement {\n *     static baseName = \"my-card\"\n *   }\n *   // Register the class\n *   MyCard.define()\n *   // Register with a different name\n *   MyCard.define(\"my-card-2\")\n *   // Register with different options\n *   MyCard.define(MyCard.baseName, MyCard, { extends: { \"div\" }})\n *   // This will do the same as above\n *   MyCard.define(null, null, { extends: { \"div\" }})\n *\n * @example\n\n *   // Using a different customElementRegistry\n *   class MyCard extends DefineableElement {\n *     static customElementRegistry = MyCustomRegistry()\n *     static baseName = \"my-card\"\n *   }\n *   // Register the element in the custom registry.\n *   MyCard.define()\n */\nexport class DefineableElement extends DefineableMixin(HTMLElement) {}\n\n", "const appliedClassMixins = new WeakMap();\n\n/** Vefify if the Mixin was previously applyed\n * @private\n * @param {function} mixin      Mixin being applyed\n * @param {object} superClass   Class receiving the new mixin\n * @returns {boolean}\n */\nfunction wasMixinPreviouslyApplied(mixin, superClass) {\n  let klass = superClass;\n  while (klass) {\n    if (appliedClassMixins.get(klass) === mixin) {\n      return true;\n    }\n    klass = Object.getPrototypeOf(klass);\n  }\n  return false;\n}\n\n/** Apply each mixin in the chain to make sure they are not applied more than once to the final class.\n * @export\n * @param {function} mixin      Mixin to be applyed\n * @returns {object}            Mixed class with mixin applied\n */\nexport function dedupeMixin(mixin) {\n  return superClass => {\n    if (wasMixinPreviouslyApplied(mixin, superClass)) {\n      return superClass;\n    }\n    const mixedClass = mixin(superClass);\n    appliedClassMixins.set(mixedClass, mixin);\n    return mixedClass;\n  };\n}\n", "// @ts-check\nimport { dedupeMixin } from '@open-wc/dedupe-mixin';\n\n/**\n * @typedef {import('../../types.js').RenderOptions} RenderOptions\n * @typedef {import('../../types.js').ScopedElementsMap} ScopedElementsMap\n */\n\n// @ts-ignore\nconst supportsScopedRegistry = !!ShadowRoot.prototype.createElement;\n\n/**\n * @template {import('../../types.js').Constructor} T\n * @param {T} superclass\n */\nconst ScopedElementsMixinImplementation = superclass =>\n  class ScopedElementsHost extends superclass {\n    /**\n     * Obtains the scoped elements definitions map if specified.\n     *\n     * @returns {ScopedElementsMap}\n     */\n    static get scopedElements() {\n      return {};\n    }\n\n    /**\n     * Obtains the ShadowRoot options.\n     *\n     * @type {ShadowRootInit}\n     */\n    static get shadowRootOptions() {\n      return this.__shadowRootOptions || {mode: \"open\"};\n    }\n\n    /**\n     * Set the shadowRoot options.\n     *\n     * @param {ShadowRootInit} value\n     */\n    static set shadowRootOptions(value) {\n      this.__shadowRootOptions = value;\n    }\n\n    /**\n     * @param {any[]} args\n     */\n    constructor(...args) {\n      super(...args);\n      /** @type {RenderOptions} */\n      this.renderOptions = this.renderOptions || undefined;\n    }\n\n    /**\n     * Obtains the CustomElementRegistry associated to the ShadowRoot.\n     *\n     * @returns {CustomElementRegistry}\n     */\n    get registry() {\n      /** @type { typeof ScopedElementsHost } */\n      // @ts-expect-error\n      const constructor = this.constructor\n      return constructor.__registry;\n    }\n\n    /**\n     * @protected\n     * @type {CustomElementRegistry}\n     */\n    static __registry = window.customElements\n\n    /**\n     * Set the CustomElementRegistry associated to the ShadowRoot\n     *\n     * @param {CustomElementRegistry} registry\n     */\n    set registry(registry) {\n      /** @type { typeof ScopedElementsHost } */\n      // @ts-expect-error\n      const constructor = this.constructor\n      constructor.__registry = registry;\n    }\n\n    createRenderRoot() {\n      /** @type { typeof ScopedElementsHost } */\n      // @ts-expect-error\n      const constructor = this.constructor;\n      const { scopedElements, shadowRootOptions } = constructor\n\n      const shouldCreateRegistry =\n        !this.registry ||\n        (this.registry === constructor.__registry &&\n          !Object.prototype.hasOwnProperty.call(this.constructor, '__registry'));\n\n      /**\n       * Create a new registry if:\n       * - the registry is not defined\n       * - this class doesn't have its own registry *AND* has no shared registry\n       */\n      if (shouldCreateRegistry) {\n        this.registry = supportsScopedRegistry ? new CustomElementRegistry() : customElements;\n        for (const [tagName, klass] of Object.entries(scopedElements)) {\n          this.defineScopedElement(tagName, klass);\n        }\n      }\n\n      /** @type {ShadowRootInit} */\n      const options = {\n        // @ts-expect-error multiple assignment. Sue me.\n        mode: 'open',\n        ...shadowRootOptions,\n        customElements: this.registry,\n      };\n\n      const createdRoot = this.attachShadow(options);\n      if (supportsScopedRegistry) {\n        this.renderOptions.creationScope = createdRoot;\n      }\n\n      if (createdRoot instanceof ShadowRoot) {\n        this.adoptStyles(createdRoot)\n      }\n\n      return createdRoot;\n    }\n\n    /**\n     * @param {string} tagName\n     */\n    createScopedElement(tagName) {\n      const root = supportsScopedRegistry ? this.shadowRoot : document;\n      // @ts-ignore polyfill to support createElement on shadowRoot is loaded\n      return root.createElement(tagName);\n    }\n\n    /**\n     * Hook for attaching constructable stylesheets to a render root.\n     * Used in the {LitScopedElementsMixin} .\n     * @param {ShadowRoot} _shadowRoot\n     * @returns {void}\n     */\n    adoptStyles (_shadowRoot) {}\n\n    /**\n     * Defines a scoped element.\n     *\n     * @param {string} tagName\n     * @param {typeof HTMLElement} klass\n     */\n    defineScopedElement(tagName, klass) {\n      const registeredClass = this.registry.get(tagName);\n      if (registeredClass && supportsScopedRegistry === false && registeredClass !== klass) {\n        // eslint-disable-next-line no-console\n        console.error(\n          [\n            `You are trying to re-register the \"${tagName}\" custom element with a different class via ScopedElementsMixin.`,\n            'This is only possible with a CustomElementRegistry.',\n            'Your browser does not support this feature so you will need to load a polyfill for it.',\n            'Load \"@webcomponents/scoped-custom-element-registry\" before you register ANY web component to the global customElements registry.',\n            'e.g. add \"<script src=\"/node_modules/@webcomponents/scoped-custom-element-registry/scoped-custom-element-registry.min.js\"></script>\" as your first script tag.',\n            'For more details you can visit https://open-wc.org/docs/development/scoped-elements/',\n          ].join('\\n'),\n        );\n      }\n      if (!registeredClass) {\n        return this.registry.define(tagName, klass);\n      }\n      return this.registry.get(tagName);\n    }\n  };\n\nexport const ScopedElementsMixin = dedupeMixin(ScopedElementsMixinImplementation);\n", "// @ts-check\nimport { dedupeMixin } from '@open-wc/dedupe-mixin';\n\n/**\n * Extends any extension of HTMLElement to call `.createRenderRoot()` on registration to work with\n *   scoped elements mixin\n * @template {import('../../types.js').Constructor} T\n * @param {T} superclass\n */\nconst CreateRenderRootMixinImplementation = superclass => {\n  return class CreateRenderRootHost extends superclass {\n    /**\n     * Obtains the ShadowRoot options.\n     *\n     * @type {ShadowRootInit}\n     */\n    static get shadowRootOptions() {\n      return this.__shadowRootOptions || {mode: \"open\"};\n    }\n\n    /**\n     * Set the shadowRoot options.\n     *\n     * @param {ShadowRootInit} value\n     */\n    static set shadowRootOptions(value) {\n      this.__shadowRootOptions = value;\n    }\n\n    /** @type {ShadowRootInit} */\n    get shadowRootOptions () {\n      // @ts-expect-error\n      return this.constructor.shadowRootOptions\n    }\n\n    createRenderRoot () {\n      const renderRoot = this.shadowRoot ?? this.attachShadow(this.shadowRootOptions || {mode: \"open\"})\n      return renderRoot;\n    }\n\n    connectedCallback () {\n      // @ts-expect-error\n      if (typeof super.connectedCallback === \"function\") {\n        // @ts-expect-error\n        super.connectedCallback()\n      }\n\n      // create renderRoot before first update.\n      if (this.renderRoot == null) {\n        this.renderRoot = this.createRenderRoot();\n      }\n    }\n  }\n}\n\nexport const CreateRenderRootMixin = dedupeMixin(CreateRenderRootMixinImplementation);\n", "// @ts-check\n\nimport { LitElement } from \"lit\"\nimport { DefineableMixin } from \"web-component-define\"\n\nexport class BaseElement extends DefineableMixin(LitElement) {\n}\n", "// @ts-check\n\nimport { BaseElement } from \"../base-element.js\";\nimport { css, html } from \"lit\"\n\n/**\n * A toolbar following the W3C Toolbar pattern.\n * https://www.w3.org/WAI/ARIA/apg/patterns/toolbar/\n * @customElement\n */\nexport default class RoleToolbar extends BaseElement {\n  static properties = {\n    orientation: { reflect: true },\n    _currentFocusIndex: {state: true},\n    _toolbarItems: {state: true}\n  }\n\n  constructor () {\n    super()\n\n    /**\n     * @type {number}\n     */\n    this._currentFocusIndex = 0\n\n\n    /**\n     * @type {\"vertical\" | \"horizontal\"}\n     */\n    this.orientation = \"horizontal\"\n\n    /** @type Array<Element> */\n    this._toolbarItems = []\n\n    this.addEventListener(\"click\", this.handleClick);\n    this.addEventListener(\"keydown\", this.handleKeyDown);\n\n    // Handles nested slot issues focusing the toolbar itself.\n    this.addEventListener(\"focus\", this.handleClick);\n  }\n\n  /**\n   * @param {import(\"lit\").PropertyValues<this>} changedProperties\n   */\n  willUpdate (changedProperties) {\n    if (changedProperties.has(\"_toolbarItems\")) {\n      this.updateToolbarItems()\n    }\n    super.willUpdate(changedProperties)\n  }\n\n  /** @returns {string} */\n  static get baseName() {\n    return \"role-toolbar\";\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n\n      .base {\n        display: flex;\n        max-width: 100%;\n        padding: 0.4rem 0.6rem;\n        border-radius: 4px;\n        border: 2px solid transparent;\n        gap: 4px;\n        overflow: auto;\n      }\n\n      :host([orientation=\"vertical\"]) .base {\n        flex-direction: column;\n      }\n\n      :host(:focus-within) .base {\n        border-color: #005a9c;\n      }\n    `;\n  }\n\n  /**\n   * @return {Record<string, (event: Event) => void>}\n   */\n  get keydownHandlers() {\n    if (this._keydownHandlers) return this._keydownHandlers;\n\n    this._keydownHandlers = {\n      arrowleft: this.focusPrevious,\n      arrowup: this.focusPrevious,\n      arrowright: this.focusNext,\n      arrowdown: this.focusNext,\n      home: this.focusFirst,\n      end: this.focusLast,\n    };\n\n    return this._keydownHandlers;\n  }\n\n  render() {\n    return html`\n      <div role=\"toolbar\" class=\"base\" part=\"base\">\n        <slot @slotchange=${this.updateToolbarItems}></slot>\n      </div>\n    `;\n  }\n\n  /** @param {Event} event */\n  handleClick = (event) => {\n\n    const focusedElement = event.composedPath().find((el) => {\n      // @ts-expect-error\n      const role = el?.getAttribute?.('data-role') || \"\"\n      return role.includes('toolbar-item')\n    });\n\n    if (focusedElement) {\n      this._toolbarItems.forEach((el, index) => {\n        if (el === focusedElement) {\n          this._currentFocusIndex = index;\n          return;\n        }\n        el.setAttribute(\"tabindex\", \"-1\");\n      });\n\n      // Let the browser decided where focus ends up.\n      this.setTabIndex({ focus: false });\n    } else {\n      // focus the toolbar itself if no focused element clicked.\n      this.setTabIndex({ focus: true });\n    }\n  };\n\n  /** @param {KeyboardEvent} event */\n  handleKeyDown = (event) => {\n    const key = event.key?.toLowerCase();\n\n    if (\n      this.orientation === \"vertical\" &&\n      (key === \"arrowleft\" || key === \"arrowright\")\n    )\n      return;\n    if (\n      this.orientation === \"horizontal\" &&\n      (key === \"arrowdown\" || key === \"arrowup\")\n    )\n      return;\n\n    if (Object.keys(this.keydownHandlers).includes(key)) {\n      event.preventDefault();\n      this.keydownHandlers[key](event);\n    }\n  };\n\n  /** @param {Event} _event */\n  focusNext = (_event) => {\n    this.currentFocusElement?.setAttribute(\"tabindex\", \"-1\");\n    this._currentFocusIndex += 1;\n\n    if (this._currentFocusIndex >= this._toolbarItems.length) {\n      this.focusFirst();\n      return;\n    }\n\n    this.setTabIndex();\n  };\n\n  /** @param {Event} _event */\n  focusPrevious = (_event) => {\n    this.currentFocusElement?.setAttribute(\"tabindex\", \"-1\");\n    this._currentFocusIndex -= 1;\n\n    if (this._currentFocusIndex < 0) {\n      this.focusLast();\n      return;\n    }\n\n    this.setTabIndex();\n  };\n\n  focusFirst = () => {\n    this._currentFocusIndex = 0;\n    this.setTabIndex();\n  };\n\n  focusLast = () => {\n    if (this._toolbarItems == null) return\n\n    this._currentFocusIndex = this._toolbarItems.length - 1;\n    this.setTabIndex();\n  };\n\n\n  setTabIndex = ({ focus = true } = {}) => {\n    this.currentFocusElement?.setAttribute(\"tabindex\", \"0\");\n\n    if (focus) {\n      // @ts-expect-error\n      this.currentFocusElement?.focus?.();\n    }\n  };\n\n  get currentFocusElement() {\n    if (this._toolbarItems == null) return\n\n    return this._toolbarItems[this._currentFocusIndex];\n  }\n\n  /**\n   * @param {undefined | null | Event} [evt] - triggered by a slot change event.\n   */\n  updateToolbarItems = (evt) => {\n    /**\n     * @type {HTMLSlotElement}\n     */\n    // @ts-expect-error\n    const slot = evt?.target || this.shadowRoot.querySelector(\"slot\")\n\n    if (slot == null) return\n\n    /** @type {Element[]} */\n    const items = slot\n      .assignedElements({ flatten: true })\n      .filter((el) => {\n        return el instanceof HTMLElement && el.dataset.role?.match(/toolbar-item/);\n      });\n    this._toolbarItems = items\n    this._currentFocusIndex = this._toolbarItems.findIndex(\n      (el) => el.getAttribute(\"tabindex\") === \"0\"\n    );\n\n    this._toolbarItems.forEach((el) => {\n      if (this._toolbarItems[this._currentFocusIndex] === el) return\n      el.setAttribute(\"tabindex\", \"-1\")\n    })\n\n    if (this._currentFocusIndex === -1) {\n      this._currentFocusIndex = 0;\n      this.currentFocusElement?.setAttribute(\"tabindex\", \"0\");\n    }\n  };\n}\n", "const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n", "import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n", "// @ts-check\nimport { BaseElement } from \"../base-element.js\";\n\nimport {\n  arrow,\n  computePosition,\n  flip,\n  shift,\n  offset,\n  autoUpdate,\n} from \"@floating-ui/dom\";\n\nimport { css, html } from \"lit\"\n\n/**\n * Due to accessibility reasons with aria-describedby, the tooltip must be the same\n *   document / shadowRoot as the item being described by the tooltip.\n * @customElement\n * @example\n *   <role-tooltip id=\"my-tooltip\">I'm a tooltip!</role-tooltip>\n *   <button aria-describedby=\"my-tooltip\">Button</button>\n * @slot - default slot\n * @cssprop [--background-color=#222]\n * @cssprop [--arrow-size=8px]\n */\nexport default class RoleTooltip extends BaseElement {\n  static get properties() {\n    return {\n      id: { reflect: true },\n      tooltipAnchors: { state: true },\n      rootElement: { state: true },\n      role: { reflect: true },\n      inert: { reflect: true, type: Boolean },\n      placement: { reflect: true }\n    }\n  }\n\n  /** @returns {string} */\n  static get baseName() {\n    return \"role-tooltip\";\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        --background-color: #222;\n        --arrow-size: 8px;\n      }\n\n      .base {\n        display: none;\n        position: absolute;\n        left: 0px;\n        top: 0px;\n        max-width: calc(100vw - 10px);\n        padding: 0.4em 0.6em;\n        background: var(--background-color);\n        color: white;\n        border-radius: 4px;\n        font-size: 0.9em;\n        pointer-events: none;\n        z-index: 1;\n      }\n\n      :host([hoist]) .base {\n        position: fixed;\n      }\n\n      .arrow {\n        position: absolute;\n        background: var(--background-color);\n        width: var(--arrow-size);\n        height: var(--arrow-size);\n        transform: rotate(45deg);\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n\n    // Needed by floating-ui\n    // @ts-expect-error\n    if (window.process == null) window.process = {}\n    // @ts-expect-error\n    if (window.process.env == null) window.process.env = \"development\"\n\n    /**\n     * @type {Element[]}\n     */\n    this.tooltipAnchors = [];\n\n    /**\n     * @type {ShadowRoot | Document | undefined}\n     */\n    this._rootElement = undefined\n\n    this.role = \"tooltip\"\n    this.inert = true\n\n    /**\n     * @type {import(\"@floating-ui/dom\").Placement}\n     */\n    this.placement = \"top\"\n\n    /**\n     * @type {Array<[keyof GlobalEventHandlersEventMap, (evt: Event | KeyboardEvent) => void]>}\n     */\n    this.listeners = [\n      [\"pointerenter\", this.show],\n      [\"pointerleave\", this.hide],\n      [\"pointercancel\", this.hide],\n      [\"pointerup\", this.hide],\n      [\"focusin\", this.show],\n      [\"focusout\", this.hide],\n      [\"keydown\", this.keyboardHide],\n    ];\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n\n    this.updateAnchors()\n\n    this.attachListeners()\n  }\n\n  updateAnchors () {\n    if (this.rootElement) {\n      this.tooltipAnchors = Array.from(this.rootElement.querySelectorAll(this.query)) || []\n    }\n  }\n\n  disconnectedCallback () {\n    super.disconnectedCallback()\n\n    this.removeListeners()\n  }\n\n  /**\n   * @type {string}\n   */\n  get query () {\n    return `[aria-describedby~='${this.id}']`;\n  }\n\n  /** @returns {ShadowRoot | Document | undefined} */\n  get rootElement() {\n    if (this._rootElement == null) {\n      const oldVal = this._rootElement\n\n      /**\n      * @type {ShadowRoot | Document | undefined}\n      */\n      // @ts-expect-error\n      this._rootElement = this.getRootNode() || document;\n      this.requestUpdate(\"rootElement\", oldVal)\n    }\n\n    return this._rootElement;\n  }\n\n  /** @returns {void} */\n  set rootElement(newVal) {\n    const oldVal = this._rootElement;\n\n    this._rootElement = newVal;\n    this.requestUpdate(\"rootElement\", oldVal)\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" class=\"base\">\n        <slot></slot>\n        <div class=\"arrow\" part=\"arrow\"></div>\n      </div>\n    `;\n  }\n\n  /**\n   * @param {Parameters<import(\"lit\").LitElement[\"update\"]>} args\n   * @return {ReturnType<import(\"lit\").LitElement[\"update\"]>}\n   */\n  update (...args) {\n    const [changedProperties] = args\n\n    const shouldUpdateProperties = [\"id\", \"tooltipAnchors\", \"rootElement\"]\n    const shouldReattachListeners = shouldUpdateProperties.some((str) => changedProperties.has(str))\n\n    if (shouldReattachListeners) {\n      this.attachListeners()\n    }\n\n    super.update(...args)\n  }\n\n\n  /**\n   * Used for re-initialized event listeners\n   * @returns {void}\n   */\n  attachListeners() {\n    this.listeners.forEach(([event, listener]) => {\n      // Remove listeners. Do it in the same loop for perf stuff.\n\n      // In case there's old anchors\n      this.tooltipAnchors.forEach((el) =>\n        el.removeEventListener(event, listener)\n      );\n\n      // Attach to new anchors\n      this.tooltipAnchors.forEach((el) => el.addEventListener(event, listener));\n    });\n  }\n\n  /**\n   * Used for cleaning up\n   * @returns {void}\n   */\n  removeListeners() {\n    this.listeners.forEach(([event, listener]) => {\n      // don't recompute anchors.\n      this.tooltipAnchors.forEach((el) =>\n        el.removeEventListener(event, listener)\n      );\n    });\n  }\n\n  /** @returns {HTMLElement | undefined | null} */\n  get arrow() {\n    return this.shadowRoot?.querySelector(\".arrow\");\n  }\n\n  /**\n   * @param {Event|Element} eventOrElement\n   * @returns {void}\n   */\n  show = (eventOrElement) => {\n    if (eventOrElement instanceof Event && eventOrElement.currentTarget instanceof Element) {\n      eventOrElement = eventOrElement.currentTarget;\n    }\n\n    /**\n     * @type {Element}\n     */\n    // @ts-expect-error\n    const target = eventOrElement\n\n    this.willShow = true;\n\n    this.computeTooltipPosition(target);\n  };\n\n  /**\n   * @param {Event} [_event]\n   * @returns {void}\n   */\n  hide = (_event) => {\n    this.willShow = false;\n    this.cleanup?.();\n\n    window.requestAnimationFrame(() => {\n      if (this.willShow === true) return;\n\n      const base = this.base\n\n      if (!base) return\n\n      base.style.display = \"none\";\n    });\n  };\n\n  /**\n   * @param {Event | KeyboardEvent} event\n   */\n  keyboardHide = (event) => {\n    if (!(\"key\" in event)) { return }\n    if (event.key != null && event.key.toLowerCase() === \"escape\") {\n      event.preventDefault();\n      this.hide();\n    }\n  };\n\n  /**\n   * @param {Element} target\n   * @returns {void}\n   */\n  computeTooltipPosition(target) {\n    const arrowEl = this.arrow;\n    const base = this.base;\n\n    if (base == null) return\n    if (arrowEl == null) return\n\n    base.style.display = \"unset\";\n\n    const placement = this.placement || \"top\"\n\n    this.cleanup = autoUpdate(target, base, () => {\n      computePosition(target, base, {\n        placement,\n        middleware: [\n          offset(6),\n          flip(),\n          shift({ padding: 5 }),\n          arrow({ element: arrowEl }),\n        ],\n        strategy: this.hasAttribute(\"hoist\") ? \"fixed\" : \"absolute\",\n      }).then(({ x, y, middlewareData, placement }) => {\n        Object.assign(base.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        });\n\n        const arrowX = middlewareData.arrow?.x\n        const arrowY = middlewareData.arrow?.y\n\n        // Always the opposite of the placement the user provides.\n        const staticSide = {\n          top: \"bottom\",\n          right: \"left\",\n          bottom: \"top\",\n          left: \"right\",\n        }[placement.split(\"-\")[0]] || \"top\";\n\n        Object.assign(arrowEl.style, {\n          left: arrowX != null ? `${arrowX}px` : \"\",\n          top: arrowY != null ? `${arrowY}px` : \"\",\n          right: \"\",\n          bottom: \"\",\n          [staticSide]: \"-4px\",\n        });\n      });\n    });\n  }\n\n\n /**\n  * @return {HTMLElement | null | undefined}\n  */\n  get base() {\n    return this.shadowRoot?.querySelector(\".base\");\n  }\n}\n", "export function stringMap(\n  obj: Record<string, string | null | undefined | boolean>,\n): string {\n  let string = \"\";\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (value) {\n      string += `${key} `;\n    }\n  }\n\n  return string;\n}\n", "import { NodeType } from \"@tiptap/pm/model\";\nimport { EditorState } from \"@tiptap/pm/state\";\n\nimport { NodeRange, objectIncludes, getNodeType } from \"@tiptap/core\";\n\n// https://github.com/ueberdosis/tiptap/issues/4190\nexport function isExactNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection;\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\n\n  const nodeRanges: NodeRange[] = [];\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return;\n    }\n\n    const relativeFrom = Math.max(from, pos);\n    const relativeTo = Math.min(to, pos + node.nodeSize);\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    });\n  });\n\n  const selectionRange = to - from;\n\n  /******\n    This is modified from \"isActive\".\n    https://github.com/ueberdosis/tiptap/issues/4190#issuecomment-1636209809\n  *****/\n  const matchedNodeRanges = nodeRanges\n    .slice(-3) // here is the change\n    .filter((nodeRange) => {\n      if (!type) {\n        return true;\n      }\n\n      return type.name === nodeRange.node.type.name;\n    })\n    .filter((nodeRange) =>\n      objectIncludes(nodeRange.node.attrs, attributes, { strict: false }),\n    );\n  /** END MODIFICATION **/\n\n  if (empty) {\n    return !!matchedNodeRanges.length;\n  }\n\n  const range = matchedNodeRanges.reduce(\n    (sum, nodeRange) => sum + nodeRange.to - nodeRange.from,\n    0,\n  );\n\n  return range >= selectionRange;\n}\n", "import { ref, createRef, Ref } from \"lit/directives/ref.js\";\nimport { toolbarButtonStyles } from \"../styles/editor.js\";\nimport { TipTapEditorBase } from \"./tip-tap-editor-base.js\";\nimport { PropertyDeclarations, PropertyValues, TemplateResult } from \"lit\";\n\n/** Imports <role-tooltip> and <role-toolbar> */\nimport RoleToolbar from \"role-components/exports/toolbar/toolbar.js\";\nimport RoleTooltip from \"role-components/exports/tooltip/tooltip.js\";\n\nimport { isiOS, translations } from \"../translations.js\";\n\n/** This will probably go away in favor of lazy loaded SVGs. */\nimport * as icons from \"../../internal/icons\";\nimport { Maybe } from \"../../types.js\";\nimport { html } from \"lit/html.js\";\nimport { stringMap } from \"../../internal/string-map.js\";\nimport { isExactNodeActive } from \"../../internal/is-exact-node-active.js\";\n\n/**\n * This is the meat and potatoes. This is the <rhino-editor> element you'll\n *   see. This is what wraps everything into 1 coherent element.\n * @slot toolbar - By replacing this, you're now making your own toolbar.\n * @slot toolbar-start\n *\n * ## bold\n * @slot before-bold-button\n * @slot bold-button\n * @slot after-bold-button\n\n * ## Italic\n * @slot before-italic-button\n * @slot italic-button\n * @slot after-italic-button\n\n * ## Strike\n * @slot before-strike-button\n * @slot strike-button\n * @slot after-strike-button\n\n * ## Link\n * @slot before-link-button\n * @slot link-button\n * @slot after-link-button\n\n * ## Heading\n * @slot before-heading-button\n * @slot heading-button\n * @slot after-heading-button\n\n * ## Blockquote\n * @slot before-blockquote-button\n * @slot blockquote-button\n * @slot after-blockquote-button\n\n * ## Code block\n * @slot before-code-block-button\n * @slot code-block-button\n * @slot after-code-block-button\n\n * ## Bullet List\n * @slot before-bullet-list-button\n * @slot bullet-list-button\n * @slot after-bullet-list-button\n\n * ## Ordered list\n * @slot before-ordered-list-button\n * @slot ordered-list-button\n * @slot after-ordered-list-button\n\n * ## Decrease Indentation\n * @slot before-decrease-indentation-button\n * @slot decrease-indentation-button\n * @slot after-decrease-indentation-button\n\n * ## Increase Indentation\n * @slot before-increase-indentation-button\n * @slot increase-indentation-button\n * @slot after-increase-indentation-button\n\n * ## Attachments\n * @slot before-attach-files-button\n * @slot attach-files-button\n * @slot after-attach-files-button\n\n * ## Undo\n * @slot before-undo-button\n * @slot undo-button\n * @slot after-undo-button\n\n * ## Redo\n * @slot before-redo-button\n * @slot redo-button\n * @slot after-redo-button\n * @slot toolbar-end\n */\nexport class TipTapEditor extends TipTapEditorBase {\n  static get styles() {\n    return TipTapEditorBase.styles.concat([toolbarButtonStyles]);\n  }\n\n  static get properties(): PropertyDeclarations {\n    return Object.assign(TipTapEditorBase.properties, {\n      linkDialogExpanded: { type: Boolean },\n      linkInputRef: { state: true },\n      translations: { state: true },\n      __invalidLink__: { state: true, type: Boolean },\n    });\n  }\n\n  /**\n   * Translations for various aspects of the editor.\n   */\n  translations = translations;\n\n  /**\n   * The <input> for inserting links\n   */\n  linkInputRef: Ref<HTMLInputElement> = createRef();\n\n  /**\n   * The dialog that contains the link input + link / unlink buttons\n   */\n  linkDialogExpanded: boolean = false;\n\n  private __invalidLink__: boolean = false;\n\n  /**\n   * @override\n   */\n  registerDependencies() {\n    super.registerDependencies();\n    [RoleToolbar, RoleTooltip].forEach((el) => el.define());\n  }\n\n  constructor() {\n    super();\n\n    this.starterKitOptions = Object.assign(this.starterKitOptions, {\n      rhinoPlaceholder: {\n        placeholder: this.translations.placeholder,\n      },\n      rhinoAttachment: {\n        fileUploadErrorMessage: this.translations.fileUploadErrorMessage,\n        captionPlaceholder: this.translations.captionPlaceholder,\n      },\n    }) as typeof this.starterKitOptions;\n\n    this.addEventListener(\"keydown\", this.handleKeyboardDialogToggle);\n  }\n\n  protected updated(changedProperties: PropertyValues<this>): void {\n    if (!this.hasInitialized) {\n      return super.updated(changedProperties);\n    }\n\n    if (changedProperties.has(\"translations\")) {\n      const { rhinoAttachment, rhinoPlaceholder } = this.starterKitOptions;\n\n      if (rhinoPlaceholder) {\n        rhinoPlaceholder.placeholder = this.translations.placeholder;\n      }\n\n      if (rhinoAttachment) {\n        rhinoAttachment.captionPlaceholder =\n          this.translations.captionPlaceholder;\n        rhinoAttachment.fileUploadErrorMessage =\n          this.translations.fileUploadErrorMessage;\n      }\n    }\n\n    return super.updated(changedProperties);\n  }\n\n  /**\n   * @override\n   */\n  async connectedCallback() {\n    super.connectedCallback();\n\n    await this.updateComplete;\n\n    if (this.editor) {\n      this.editor.on(\"focus\", this.closeLinkDialog);\n    }\n\n    document.addEventListener(\"click\", this.__handleLinkDialogClick);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener(\"click\", this.__handleLinkDialogClick);\n  }\n\n  get icons(): typeof icons {\n    return icons;\n  }\n\n  /** Closes the dialog for link previews */\n  handleKeyboardDialogToggle = (e: KeyboardEvent) => {\n    let { key, metaKey, ctrlKey } = e;\n\n    if (key == null) return;\n\n    key = key.toLowerCase();\n\n    if (key === \"escape\" && this.linkDialogExpanded) {\n      this.closeLinkDialog();\n      return;\n    }\n\n    const shortcutModifier = isiOS ? metaKey : ctrlKey;\n\n    if (key === \"k\" && shortcutModifier) {\n      this.showLinkDialog();\n    }\n  };\n\n  toggleLinkDialog(): void {\n    if (this.linkDialogExpanded) {\n      this.closeLinkDialog();\n      return;\n    }\n\n    this.showLinkDialog();\n  }\n\n  closeLinkDialog(): void {\n    if (this.linkDialog == null) return;\n\n    this.linkDialogExpanded = false;\n  }\n\n  showLinkDialog(): void {\n    if (this.linkDialog == null) return;\n\n    const inputElement = this.linkInputRef.value;\n\n    if (inputElement != null) {\n      inputElement.value = \"\";\n    }\n\n    this.__invalidLink__ = false;\n    this.linkDialogExpanded = true;\n    setTimeout(() => {\n      if (inputElement != null) inputElement.focus();\n    });\n  }\n\n  get linkDialog(): Maybe<HTMLDivElement> {\n    return this.shadowRoot?.querySelector<HTMLDivElement>(\"#link-dialog\");\n  }\n\n  attachFiles(): void {\n    const input = this.fileInputEl;\n\n    if (input == null) return;\n\n    input.click();\n  }\n\n  addLink(): void {\n    const inputElement = this.linkInputRef.value;\n\n    if (inputElement == null) return;\n\n    const href = inputElement.value;\n\n    try {\n      new URL(href);\n      inputElement.setCustomValidity(\"\");\n      this.__invalidLink__ = false;\n    } catch (error) {\n      inputElement.setCustomValidity(\"Not a valid URL\");\n      this.__invalidLink__ = true;\n      return;\n    }\n\n    if (href) {\n      this.closeLinkDialog();\n      inputElement.value = \"\";\n      const chain = this.editor\n        ?.chain()\n        .extendMarkRange(\"link\")\n        .setLink({ href });\n\n      if (chain && this.editor?.state.selection.empty) {\n        chain.insertContent(href);\n      }\n\n      if (chain) {\n        chain.run();\n      }\n    }\n  }\n\n  get fileInputEl(): Maybe<HTMLInputElement> {\n    return this.shadowRoot?.getElementById(\n      \"file-input\",\n    ) as Maybe<HTMLInputElement>;\n  }\n\n  async handleFileUpload(): Promise<void> {\n    const input = this.fileInputEl;\n    if (input == null) return;\n    if (input.files == null) return;\n\n    const attachments = await this.handleFiles(input.files);\n\n    if (attachments.length > 0) {\n      this.editor?.chain().focus().setAttachment(attachments).run();\n    }\n\n    input.value = \"\";\n  }\n\n  private get __tooltipExportParts() {\n    return \"base:toolbar__tooltip__base, arrow:toolbar__tooltip__arrow\";\n  }\n\n  renderBoldButton() {\n    const boldEnabled = Boolean(this.editor?.commands.toggleBold);\n\n    if (!boldEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().toggleBold();\n    const isActive = Boolean(this.editor?.isActive(\"bold\"));\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--bold\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"bold\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${async (e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) return;\n          this.editor?.chain().focus().toggleBold().run();\n        }}\n      >\n        <slot name=\"bold-tooltip\">\n          <role-tooltip\n            id=\"bold\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--bold\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.bold}\n          </role-tooltip>\n        </slot>\n        <slot name=\"bold-icon\">${this.icons.bold}</slot>\n      </button>\n    `;\n  }\n\n  renderItalicButton() {\n    const italicEnabled = Boolean(this.editor?.commands.toggleItalic);\n\n    if (!italicEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"italic\"));\n    const isDisabled = this.editor == null || !this.editor.can().toggleItalic();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--italic\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"italics\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleItalic().run();\n        }}\n      >\n        <slot name=\"italics-tooltip\">\n          <role-tooltip\n            id=\"italics\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--italics\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.italics}\n          </role-tooltip>\n        </slot>\n        <slot name=\"italics-icon\"> ${this.icons.italics} </slot>\n      </button>\n    `;\n  }\n\n  renderStrikeButton() {\n    const strikeEnabled = Boolean(this.editor?.commands.toggleStrike);\n\n    if (!strikeEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"rhino-strike\"));\n    const isDisabled = this.editor == null || !this.editor.can().toggleStrike();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--strike\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"strike\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleStrike().run();\n        }}\n      >\n        <slot name=\"strike-tooltip\">\n          <role-tooltip\n            id=\"strike\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--strike\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.strike}\n          </role-tooltip>\n        </slot>\n        <slot name=\"strike-icon\">${this.icons.strike}</slot>\n      </button>\n    `;\n  }\n\n  renderLinkButton() {\n    const linkEnabled = Boolean(this.editor?.commands.setLink);\n\n    if (!linkEnabled) return html``;\n\n    const isActive = Boolean(this.linkDialogExpanded);\n    const isDisabled =\n      this.editor == null || !this.editor.can().setLink({ href: \"\" });\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--link\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"link\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        aria-controls=\"link-dialog\"\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (this.editor == null) return;\n          if (elementDisabled(e.currentTarget)) return;\n\n          this.toggleLinkDialog();\n        }}\n      >\n        <slot name=\"link-tooltip\">\n          <role-tooltip\n            id=\"link\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--link\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.link}\n          </role-tooltip>\n        </slot>\n        <slot name=\"link-icon\">${this.icons.link}</slot>\n      </button>\n    `;\n  }\n\n  renderHeadingButton() {\n    const headingEnabled = Boolean(this.editor?.commands.toggleHeading);\n\n    if (!headingEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"heading\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleHeading({ level: 1 });\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--heading\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"heading\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleHeading({ level: 1 }).run();\n        }}\n      >\n        <slot name=\"heading-tooltip\">\n          <role-tooltip\n            id=\"heading\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--heading\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.heading}\n          </role-tooltip>\n        </slot>\n        <slot name=\"heading-icon\">${this.icons.heading}</slot>\n      </button>\n    `;\n  }\n\n  renderBlockquoteButton() {\n    const blockQuoteEnabled = Boolean(this.editor?.commands.toggleBlockquote);\n\n    if (!blockQuoteEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"blockquote\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleBlockquote();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--blockquote\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"blockquote\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleBlockquote().run();\n        }}\n      >\n        <slot name=\"blockquote-tooltip\">\n          <role-tooltip\n            id=\"blockquote\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--blockquote\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.blockQuote}\n          </role-tooltip>\n        </slot>\n        <slot name=\"blockquote-icon\">${this.icons.blockQuote}</slot>\n      </button>\n    `;\n  }\n\n  renderCodeBlockButton() {\n    const codeBlockEnabled = Boolean(this.editor?.commands.toggleCodeBlock);\n\n    if (!codeBlockEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"codeBlock\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleCodeBlock();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--code-block\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"code-block\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleCodeBlock().run();\n        }}\n      >\n        <slot name=\"code-block-tooltip\">\n          <role-tooltip\n            id=\"code-block\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--code-block\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.codeBlock}\n          </role-tooltip>\n        </slot>\n        <slot name=\"code-block-icon\">${this.icons.codeBlock}</slot>\n      </button>\n    `;\n  }\n\n  renderBulletListButton() {\n    const bulletListEnabled = Boolean(this.editor?.commands.toggleBulletList);\n\n    if (!bulletListEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null ||\n      !(\n        this.editor.can().toggleOrderedList?.() ||\n        this.editor.can().toggleBulletList()\n      );\n\n    const isActive = Boolean(\n      this.editor != null && isExactNodeActive(this.editor.state, \"bulletList\"),\n    );\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--bullet-list\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"bullet-list\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleBulletList().run();\n        }}\n      >\n        <slot name=\"bullet-list-tooltip\">\n          <role-tooltip\n            id=\"bullet-list\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--bullet-list\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.bulletList}\n          </role-tooltip>\n        </slot>\n        <slot name=\"bullet-list-icon\">${this.icons.bulletList}</slot>\n      </button>\n    `;\n  }\n\n  renderOrderedListButton() {\n    const orderedListEnabled = Boolean(this.editor?.commands.toggleOrderedList);\n\n    if (!orderedListEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null ||\n      !(\n        this.editor.can().toggleOrderedList() ||\n        this.editor.can().toggleBulletList?.()\n      );\n\n    const isActive = Boolean(\n      this.editor != null &&\n        isExactNodeActive(this.editor.state, \"orderedList\"),\n    );\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--ordered-list\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"ordered-list\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleOrderedList().run();\n        }}\n      >\n        <slot name=\"ordered-list-tooltip\">\n          <role-tooltip\n            id=\"ordered-list\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--ordered-list\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.orderedList}\n          </role-tooltip>\n        </slot>\n        <slot name=\"ordered-list-icon\">${this.icons.orderedList}</slot>\n      </button>\n    `;\n  }\n\n  renderAttachmentButton() {\n    const attachmentEnabled = Boolean(this.editor?.commands.setAttachment);\n\n    if (!attachmentEnabled) return html``;\n\n    const isDisabled = this.editor == null;\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--attach-files\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"attach-files\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${this.attachFiles}\n      >\n        <slot name=\"attach-files-tooltip\">\n          <role-tooltip\n            id=\"attach-files\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--attach-files\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.attachFiles}\n          </role-tooltip>\n        </slot>\n        <slot name=\"attach-files-icon\">${this.icons.attachFiles}</slot>\n\n        <!-- @TODO: Write documentation. Hookup onchange to the slotted elements? -->\n        <slot name=\"attach-files-input\">\n          <input\n            id=\"file-input\"\n            type=\"file\"\n            hidden\n            multiple\n            accept=${this.accept || \"*\"}\n            @change=${this.handleFileUpload}\n          />\n        </slot>\n      </button>\n    `;\n  }\n\n  renderUndoButton() {\n    const undoEnabled = Boolean(this.editor?.commands.undo);\n\n    if (!undoEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().undo();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--undo\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"undo\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().undo().run();\n        }}\n      >\n        <slot name=\"undo-tooltip\">\n          <role-tooltip\n            id=\"undo\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--undo\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.undo}\n          </role-tooltip>\n        </slot>\n        <slot name=\"undo-icon\">${this.icons.undo}</slot>\n      </button>\n    `;\n  }\n\n  renderDecreaseIndentation() {\n    // Decrease / increase indentation are special cases in that they rely on built-in editor\n    // commands and not commands added by extensions.\n    const decreaseIndentationNotEnabled =\n      this.starterKitOptions.decreaseIndentation == false;\n\n    if (decreaseIndentationNotEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null || !this.editor.can().liftListItem(\"listItem\");\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--decrease-indentation\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"decrease-indentation\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().liftListItem(\"listItem\").run();\n        }}\n      >\n        <slot name=\"decrease-indentation-tooltip\">\n          <role-tooltip\n            id=\"decrease-indentation\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--decrease-indentation\"\n          >\n            ${this.translations.decreaseIndentation}\n          </role-tooltip>\n        </slot>\n        <slot name=\"decrease-indentation\"\n          >${this.icons.decreaseIndentation}</slot\n        >\n      </button>\n    `;\n  }\n\n  renderIncreaseIndentation() {\n    const increaseIndentationNotEnabled =\n      this.starterKitOptions.increaseIndentation == false;\n\n    if (increaseIndentationNotEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null || !this.editor.can().sinkListItem(\"listItem\");\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--increase-indentation\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"increase-indentation\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().sinkListItem(\"listItem\").run();\n        }}\n      >\n        <slot name=\"increase-indentation-tooltip\">\n          <role-tooltip\n            id=\"increase-indentation\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--increase-indentation\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.increaseIndentation}\n          </role-tooltip>\n        </slot>\n        <slot name=\"increase-indentation\"\n          >${this.icons.increaseIndentation}</slot\n        >\n      </button>\n    `;\n  }\n\n  renderRedoButton() {\n    const redoEnabled = Boolean(this.editor?.commands.redo);\n\n    if (!redoEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().redo?.();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--redo\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"redo\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().redo().run();\n        }}\n      >\n        <slot name=\"redo-tooltip\">\n          <role-tooltip\n            id=\"redo\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--redo\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.redo}\n          </role-tooltip>\n        </slot>\n        <slot name=\"redo-icon\">${this.icons.redo}</slot>\n      </button>\n    `;\n  }\n\n  renderToolbarStart() {\n    return html``;\n  }\n\n  renderToolbarEnd() {\n    return html``;\n  }\n\n  renderToolbar() {\n    if (this.readonly) return html``;\n\n    return html`\n      <slot name=\"toolbar\">\n        <role-toolbar\n          class=\"toolbar\"\n          part=\"toolbar\"\n          role=\"toolbar\"\n          exportparts=\"base:toolbar__base\"\n        >\n          <slot name=\"toolbar-start\">${this.renderToolbarStart()}</slot>\n\n          <!-- Bold -->\n          <slot name=\"before-bold-button\"></slot>\n          <slot name=\"bold-button\">${this.renderBoldButton()}</slot>\n          <slot name=\"after-bold-button\"></slot>\n\n          <!-- Italic -->\n          <slot name=\"before-italic-button\"></slot>\n          <slot name=\"italic-button\">${this.renderItalicButton()}</slot>\n          <slot name=\"after-italic-button\"></slot>\n\n          <!-- Strike -->\n          <slot name=\"before-strike-button\"></slot>\n          <slot name=\"strike-button\">${this.renderStrikeButton()}</slot>\n          <slot name=\"after-strike-button\"></slot>\n\n          <!-- Link -->\n          <slot name=\"before-link-button\"></slot>\n          <slot name=\"link-button\">${this.renderLinkButton()}</slot>\n          <slot name=\"after-link-button\"></slot>\n\n          <!-- Heading -->\n          <slot name=\"before-heading-button\"></slot>\n          <slot name=\"heading-button\">${this.renderHeadingButton()}</slot>\n          <slot name=\"after-heading-button\"></slot>\n\n          <!-- Blockquote -->\n          <slot name=\"before-blockquote-button\"></slot>\n          <slot name=\"blockquote-button\">${this.renderBlockquoteButton()}</slot>\n          <slot name=\"after-blockquote-button\"></slot>\n\n          <!-- Code block -->\n          <slot name=\"before-code-block-button\"></slot>\n          <slot name=\"code-block-button\">${this.renderCodeBlockButton()}</slot>\n          <slot name=\"after-code-block-button\"></slot>\n\n          <!-- Bullet List -->\n          <slot name=\"before-bullet-list-button\"></slot>\n          <slot name=\"bullet-list-button\"\n            >${this.renderBulletListButton()}</slot\n          >\n          <slot name=\"after-bullet-list-button\"></slot>\n\n          <!-- Ordered list -->\n          <slot name=\"before-ordered-list-button\"></slot>\n          <slot name=\"ordered-list-button\">\n            ${this.renderOrderedListButton()}\n          </slot>\n          <slot name=\"after-ordered-list-button\"></slot>\n\n          <slot name=\"before-decrease-indentation-button\"></slot>\n          <slot name=\"decrease-indentation-button\"\n            >${this.renderDecreaseIndentation()}</slot\n          >\n          <slot name=\"after-decrease-indentation-button\"></slot>\n\n          <slot name=\"before-increase-indentation-button\"></slot>\n          <slot name=\"increase-indentation-button\"\n            >${this.renderIncreaseIndentation()}</slot\n          >\n          <slot name=\"after-increase-indentation-button\"></slot>\n\n          <!-- Attachments -->\n          <slot name=\"before-attach-files-button\"></slot>\n          <slot name=\"attach-files-button\"\n            >${this.renderAttachmentButton()}</slot\n          >\n          <slot name=\"after-attach-files-button\"></slot>\n\n          <!-- Undo -->\n          <slot name=\"before-undo-button\"></slot>\n          <!-- @ts-expect-error -->\n          <slot name=\"undo-button\"> ${this.renderUndoButton()} </slot>\n          <slot name=\"after-undo-button\"></slot>\n\n          <!-- Redo -->\n          <slot name=\"before-redo-button\"></slot>\n          <slot name=\"redo-button\"> ${this.renderRedoButton()} </slot>\n          <slot name=\"after-redo-button\"></slot>\n\n          <slot name=\"toolbar-end\">${this.renderToolbarEnd()}</slot>\n        </role-toolbar>\n      </slot>\n    `;\n  }\n\n  /**\n   * @private\n   */\n  private __handleLinkDialogClick = (e: Event) => {\n    const linkDialogContainer = this.shadowRoot?.querySelector(\n      \".link-dialog__container\",\n    );\n\n    if (!linkDialogContainer) {\n      this.linkDialogExpanded = false;\n      return;\n    }\n\n    const composedPath = e.composedPath();\n\n    const linkButton = this.shadowRoot?.querySelector(\"[name='link-button']\");\n\n    if (composedPath.includes(linkDialogContainer as EventTarget)) {\n      return;\n    }\n\n    if (linkButton && composedPath.includes(linkButton as EventTarget)) {\n      return;\n    }\n\n    this.linkDialogExpanded = false;\n  };\n\n  /** @TODO: Lets think of a more friendly way to render dialogs for users to extend. */\n  renderDialog(): TemplateResult {\n    if (this.readonly) {\n      return html``;\n    }\n\n    return html` <div\n      id=\"link-dialog\"\n      class=\"link-dialog\"\n      part=\"link-dialog\"\n      ?hidden=${!this.linkDialogExpanded}\n    >\n      <div class=\"link-dialog__container\" part=\"link-dialog__container\">\n        <input\n          id=\"link-dialog__input\"\n          class=${`link-dialog__input ${\n            this.__invalidLink__ ? \"link-validate\" : \"\"\n          }`}\n          part=${`link-dialog__input ${\n            this.__invalidLink__ ? \"link-dialog__input--invalid\" : \"\"\n          }`}\n          type=\"text\"\n          placeholder=\"Enter a URL...\"\n          aria-label=\"Enter a URL\"\n          required\n          type=\"url\"\n          ${ref(this.linkInputRef)}\n          @input=${() => {\n            const inputElement = this.linkInputRef.value;\n            if (inputElement == null) return;\n\n            inputElement.setCustomValidity(\"\");\n            this.__invalidLink__ = false;\n          }}\n          @blur=${() => {\n            const inputElement = this.linkInputRef.value;\n\n            if (inputElement == null) return;\n\n            this.__invalidLink__ = false;\n            // inputElement.value = \"\"\n          }}\n          @keydown=${(e: KeyboardEvent) => {\n            if (e.key?.toLowerCase() === \"enter\") {\n              e.preventDefault();\n              this.addLink();\n            }\n          }}\n        />\n        <div class=\"link-dialog__buttons\" part=\"link-dialog__buttons\">\n          <button\n            class=\"rhino-toolbar-button link-dialog__button\"\n            part=\"link-dialog__button link-dialog__button--link\"\n            @click=${this.addLink}\n          >\n            ${this.translations.linkDialogLink}\n          </button>\n          <button\n            class=\"rhino-toolbar-button link-dialog__button\"\n            part=\"link-dialog__button link-dialog__button--unlink\"\n            @click=${() => {\n              this.editor\n                ?.chain()\n                .focus()\n                .extendMarkRange(\"link\")\n                .unsetLink()\n                .run();\n            }}\n          >\n            ${this.translations.linkDialogUnlink}\n          </button>\n        </div>\n      </div>\n    </div>`;\n  }\n}\n\nfunction elementDisabled(element: null | EventTarget | Element): boolean {\n  if (element == null) return true;\n  if (!(\"getAttribute\" in element)) return true;\n\n  return (\n    element.getAttribute(\"aria-disabled\") === \"true\" ||\n    element.hasAttribute(\"disabled\")\n  );\n}\n", "import { TipTapEditor } from \"./elements/tip-tap-editor.js\";\nimport { AttachmentManager } from \"./attachment-manager.js\";\n\nTipTapEditor.define();\n\nexport { TipTapEditor, AttachmentManager };\n"],
  "mappings": "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",
  "names": ["global", "window", "trustedTypes", "policy", "createPolicy", "createHTML", "s", "boundAttributeSuffix", "marker", "Math", "random", "String", "slice", "markerMatch", "nodeMarker", "d", "document", "createMarker", "createComment", "isPrimitive", "value", "isArray", "Array", "isIterable", "Symbol", "iterator", "SPACE_CHAR", "textEndRegex", "commentEndRegex", "comment2EndRegex", "tagEndRegex", "RegExp", "singleQuoteAttrEndRegex", "doubleQuoteAttrEndRegex", "rawTextElement", "tag", "type", "strings", "values", "_$litType$", "html", "svg", "noChange", "for", "nothing", "templateCache", "WeakMap", "walker", "createTreeWalker", "trustFromTemplateString", "tsa", "stringFromTSA", "hasOwnProperty", "Error", "getTemplateHtml", "l", "length", "attrNames", "rawTextEndRegex", "regex", "i", "attrName", "match", "attrNameEndIndex", "lastIndex", "exec", "test", "end", "startsWith", "push", "undefined", "Template", "constructor", "options", "node", "this", "parts", "nodeIndex", "attrNameIndex", "partCount", "el", "createElement", "currentNode", "content", "svgElement", "firstChild", "remove", "append", "childNodes", "nextNode", "nodeType", "hasAttributes", "attrsToRemove", "name", "getAttributeNames", "endsWith", "realName", "statics", "getAttribute", "toLowerCase", "split", "m", "index", "ctor", "PropertyPart", "BooleanAttributePart", "EventPart", "AttributePart", "removeAttribute", "tagName", "textContent", "emptyScript", "data", "indexOf", "static", "_options", "innerHTML", "resolveDirective", "part", "parent", "attributeIndex", "currentDirective", "_a", "__directives", "__directive", "nextDirectiveConstructor", "_b", "call", "_$initialize", "_c", "_d", "_$resolve", "TemplateInstance", "template", "_$parts", "_$disconnectableChildren", "_$template", "_$parent", "parentNode", "_$isConnected", "_clone", "fragment", "creationScope", "importNode", "partIndex", "templatePart", "ChildPart", "nextSibling", "ElementPart", "_update", "_$setValue", "startNode", "endNode", "_$committedValue", "_$startNode", "_$endNode", "__isConnected", "isConnected", "directiveParent", "_$clear", "_commitText", "_commitTemplateResult", "_commitNode", "_commitIterable", "_insert", "insertBefore", "createTextNode", "result", "_$getTemplate", "h", "instance", "get", "set", "itemParts", "itemPart", "item", "start", "from", "_$notifyConnectionChanged", "n", "setConnected", "element", "fill", "valueIndex", "noCommit", "change", "v", "_commitValue", "setAttribute", "emptyStringForBooleanAttribute", "super", "newListener", "oldListener", "shouldRemoveListener", "capture", "once", "passive", "shouldAddListener", "removeEventListener", "addEventListener", "handleEvent", "event", "host", "_$LH", "_boundAttributeSuffix", "_marker", "_markerMatch", "_HTML_RESULT", "_getTemplateHtml", "_TemplateInstance", "_isIterable", "_resolveDirective", "_ChildPart", "_AttributePart", "_BooleanAttributePart", "_EventPart", "_PropertyPart", "_ElementPart", "polyfillSupport", "litHtmlPolyfillSupport", "litHtmlVersions", "render", "container", "partOwnerNode", "renderBefore", "_ChildPart", "ChildPart", "_$LH", "isSingleExpression", "part", "strings", "PartType", "ATTRIBUTE", "CHILD", "PROPERTY", "BOOLEAN_ATTRIBUTE", "EVENT", "ELEMENT", "directive", "c", "values", "_$litDirective$", "Directive", "constructor", "_partInfo", "_$isConnected", "this", "_$parent", "_$initialize", "part", "parent", "attributeIndex", "__part", "__attributeIndex", "_$resolve", "props", "update", "_part", "render", "notifyChildrenConnectedChanged", "parent", "isConnected", "children", "_$disconnectableChildren", "obj", "_b", "_a", "o", "removeDisconnectableFromParent", "_$parent", "delete", "size", "addDisconnectableToParent", "Set", "has", "add", "installDisconnectAPI", "reparentDisconnectables", "newParent", "this", "notifyChildPartConnectedChanged", "isClearingValue", "fromPartIndex", "value", "_$committedValue", "Array", "isArray", "i", "length", "type", "PartType", "CHILD", "_c", "_$notifyConnectionChanged", "_d", "_$reparentDisconnectables", "AsyncDirective", "Directive", "constructor", "_$initialize", "part", "attributeIndex", "super", "_$isConnected", "_$AO", "isClearingDirective", "e", "r", "reconnected", "call", "disconnected", "setValue", "isSingleExpression", "__part", "_$setValue", "newValues", "__attributeIndex", "createRef", "Ref", "lastElementForContextAndCallback", "WeakMap", "ref", "directive", "AsyncDirective", "render", "_ref", "nothing", "update", "part", "refChanged", "this", "_updateRefValue", "undefined", "_lastElementForRef", "_element", "_context", "_a", "options", "host", "element", "context", "globalThis", "lastElementForCallback", "get", "set", "call", "value", "_b", "_c", "disconnected", "reconnected", "global", "window", "supportsAdoptingStyleSheets", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "CSSStyleSheet", "constructionToken", "Symbol", "cssTagCache", "WeakMap", "CSSResult", "constructor", "cssText", "strings", "safeToken", "this", "Error", "_strings", "styleSheet", "_styleSheet", "cacheable", "length", "get", "replaceSync", "set", "toString", "unsafeCSS", "value", "String", "css", "values", "reduce", "acc", "v", "idx", "adoptStyles", "renderRoot", "styles", "adoptedStyleSheets", "map", "s", "forEach", "style", "document", "createElement", "nonce", "setAttribute", "textContent", "appendChild", "getCompatibleStyle", "sheet", "rule", "cssRules", "global", "window", "trustedTypes", "emptyStringForBooleanAttribute", "emptyScript", "polyfillSupport", "reactiveElementPolyfillSupport", "defaultConverter", "toAttribute", "value", "type", "Boolean", "Object", "Array", "JSON", "stringify", "fromAttribute", "fromValue", "Number", "parse", "e", "notEqual", "old", "defaultPropertyDeclaration", "attribute", "String", "converter", "reflect", "hasChanged", "finalized", "ReactiveElement", "HTMLElement", "constructor", "super", "this", "__instanceProperties", "Map", "isUpdatePending", "hasUpdated", "__reflectingProperty", "__initialize", "static", "initializer", "finalize", "_a", "_initializers", "push", "observedAttributes", "attributes", "elementProperties", "forEach", "v", "p", "attr", "__attributeNameForProperty", "__attributeToPropertyMap", "set", "name", "options", "state", "noAccessor", "prototype", "hasOwnProperty", "key", "Symbol", "descriptor", "getPropertyDescriptor", "defineProperty", "get", "oldValue", "requestUpdate", "configurable", "enumerable", "superCtor", "getPrototypeOf", "props", "properties", "propKeys", "getOwnPropertyNames", "getOwnPropertySymbols", "createProperty", "elementStyles", "finalizeStyles", "styles", "isArray", "Set", "flat", "Infinity", "reverse", "s", "unshift", "getCompatibleStyle", "toLowerCase", "__updatePromise", "Promise", "res", "enableUpdating", "_$changedProperties", "__saveInstanceProperties", "i", "addController", "controller", "__controllers", "renderRoot", "isConnected", "_b", "hostConnected", "call", "removeController", "splice", "indexOf", "_v", "createRenderRoot", "shadowRoot", "attachShadow", "shadowRootOptions", "adoptStyles", "connectedCallback", "c", "_requestedUpdate", "disconnectedCallback", "hostDisconnected", "attributeChangedCallback", "_old", "_$attributeToProperty", "__propertyToAttribute", "attrValue", "undefined", "removeAttribute", "setAttribute", "ctor", "propName", "getPropertyOptions", "shouldRequestUpdate", "has", "__reflectingProperties", "__enqueueUpdate", "async", "reject", "result", "scheduleUpdate", "performUpdate", "shouldUpdate", "changedProperties", "willUpdate", "hostUpdate", "update", "__markUpdated", "_$didUpdate", "_changedProperties", "hostUpdated", "firstUpdated", "updated", "updateComplete", "getUpdateComplete", "k", "mode", "_d", "reactiveElementVersions", "LitElement", "ReactiveElement", "constructor", "this", "renderOptions", "host", "__childPart", "createRenderRoot", "renderRoot", "super", "_a", "_b", "renderBefore", "firstChild", "update", "changedProperties", "value", "render", "hasUpdated", "isConnected", "connectedCallback", "setConnected", "disconnectedCallback", "noChange", "globalThis", "litElementHydrateSupport", "call", "polyfillSupport", "litElementPolyfillSupport", "_c", "globalThis", "litElementVersions", "push", "hostStyles", "i", "toolbarButtonStyles", "editor_default", "BaseElement", "s", "name", "ctor", "options", "toAnonymousClass", "klass", "OrderedMap", "content", "key", "i", "found", "value", "newKey", "self", "place", "without", "f", "map", "result", "prop", "dist_default", "findDiffStart", "a", "b", "pos", "i", "childA", "childB", "j", "inner", "findDiffEnd", "posA", "posB", "iA", "iB", "size", "same", "minSize", "Fragment", "_Fragment", "content", "from", "to", "f", "nodeStart", "parent", "child", "end", "start", "blockSeparator", "leafText", "text", "first", "node", "nodeText", "other", "last", "result", "index", "current", "copy", "found", "p", "otherPos", "round", "retIndex", "curPos", "cur", "n", "schema", "value", "array", "joined", "nodes", "offset", "compareDeep", "Mark", "_Mark", "type", "attrs", "set", "placed", "obj", "_", "json", "marks", "ReplaceError", "Slice", "_Slice", "openStart", "openEnd", "fragment", "insertInto", "removeRange", "openIsolating", "indexTo", "offsetTo", "dist", "insert", "replace", "$from", "$to", "slice", "replaceOuter", "depth", "close", "prepareSliceForReplace", "replaceThreeWay", "replaceTwoWay", "checkJoin", "main", "sub", "joinable", "$before", "$after", "addNode", "target", "addRange", "$start", "$end", "startIndex", "endIndex", "$along", "extra", "ResolvedPos", "_ResolvedPos", "path", "parentOffset", "val", "dOff", "tmp", "after", "next", "pred", "d", "NodeRange", "str", "doc", "rem", "resolveCache", "cached", "resolveCachePos", "resolveCacheSize", "emptyAttrs", "Node", "_Node", "startPos", "includeParents", "name", "wrapMarks", "match", "replacement", "one", "two", "m", "TextNode", "_TextNode", "base", "ContentMatch", "_ContentMatch", "validEnd", "string", "nodeTypes", "stream", "TokenStream", "expr", "parseExpr", "dfa", "nfa", "checkForDeadEnds", "frag", "toEnd", "seen", "search", "types", "finished", "tp", "computed", "active", "scan", "out", "tok", "exprs", "parseExprSeq", "parseExprSubscript", "parseExprAtom", "parseExprRange", "parseNum", "min", "max", "resolveName", "typeName", "connect", "compile", "edge", "term", "edges", "loop", "cmp", "nullFrom", "labeled", "explore", "states", "state", "work", "dead", "defaultAttrs", "defaults", "attrName", "attr", "computeAttrs", "built", "given", "initAttrs", "Attribute", "NodeType", "_NodeType", "spec", "before", "matched", "markType", "topType", "options", "MarkType", "_MarkType", "rank", "Schema", "instanceSpec", "prop", "dist_default", "contentExprCache", "contentExpr", "markExpr", "gatherMarks", "excl", "mark", "ok", "isTagRule", "rule", "isStyleRule", "DOMParser", "_DOMParser", "rules", "dom", "context", "ParseContext", "matches", "style", "priority", "blockTags", "ignoreTags", "listTags", "OPT_PRESERVE_WS", "OPT_PRESERVE_WS_FULL", "OPT_OPEN_LEFT", "wsOptionsFor", "preserveWhitespace", "NodeContext", "pendingMarks", "solid", "fill", "wrap", "nextType", "pending", "markMayApply", "parser", "isOpen", "topNode", "topContext", "topOptions", "parseStyles", "addMarks", "removeMarks", "top", "nodeBefore", "domNodeBefore", "matchAfter", "ruleID", "normalizeList", "sync", "oldNeedsBlock", "styles", "add", "remove", "continueAfter", "nodeType", "startIn", "contentDOM", "route", "cx", "block", "preserveWS", "textNode", "parts", "option", "useRoot", "minDepth", "part", "$context", "deflt", "findSameMarkInSet", "upto", "level", "stashMark", "prevItem", "selector", "re", "DOMSerializer", "_DOMSerializer", "keep", "rendered", "markDOM", "inline", "toDOM", "structure", "xmlNS", "tagName", "space", "innerContent", "gatherToDOM", "lower16", "factor16", "makeRecover", "index", "offset", "recoverIndex", "value", "recoverOffset", "DEL_BEFORE", "DEL_AFTER", "DEL_ACROSS", "DEL_SIDE", "MapResult", "pos", "delInfo", "recover", "StepMap", "_StepMap", "ranges", "inverted", "diff", "assoc", "simple", "oldIndex", "newIndex", "i", "start", "oldSize", "newSize", "end", "side", "result", "del", "f", "oldStart", "newStart", "n", "Mapping", "_Mapping", "maps", "mirror", "from", "to", "map", "mirrors", "mapping", "startSize", "mirr", "m", "totalSize", "inverse", "corr", "stepsByID", "Step", "other", "schema", "json", "type", "id", "stepClass", "StepResult", "_StepResult", "doc", "failed", "message", "slice", "e", "ReplaceError", "mapFragment", "fragment", "parent", "mapped", "child", "Fragment", "AddMarkStep", "_AddMarkStep", "mark", "oldSlice", "$from", "Slice", "node", "RemoveMarkStep", "_RemoveMarkStep", "AddNodeMarkStep", "_AddNodeMarkStep", "updated", "newSet", "RemoveNodeMarkStep", "_RemoveNodeMarkStep", "ReplaceStep", "_ReplaceStep", "structure", "contentBetween", "ReplaceAroundStep", "_ReplaceAroundStep", "gapFrom", "gapTo", "insert", "gap", "inserted", "dist", "depth", "next", "addMark", "tr", "removed", "added", "removing", "adding", "marks", "s", "removeMark", "matched", "step", "toRemove", "MarkType", "set", "found", "style", "j", "clearIncompatible", "parentType", "match", "clearNewlines", "replSteps", "cur", "allowed", "newline", "fill", "canCut", "liftTarget", "range", "content", "endIndex", "lift", "target", "$to", "gapStart", "gapEnd", "before", "openStart", "d", "splitting", "after", "openEnd", "findWrapping", "nodeType", "attrs", "innerRange", "around", "findWrappingOutside", "inner", "findWrappingInside", "withAttrs", "startIndex", "outer", "inside", "innerMatch", "wrap", "wrappers", "setBlockType", "mapFrom", "canChangeType", "convertNewlines", "pre", "supportLinebreak", "replaceLinebreaks", "startM", "endM", "replaceNewlines", "$pos", "setNodeMarkup", "newNode", "canSplit", "typesAfter", "base", "innerType", "rest", "overrideChild", "baseType", "split", "typeAfter", "canJoin", "joinable", "a", "b", "joinPoint", "dir", "join", "insertPoint", "dropPoint", "pass", "bias", "insertPos", "fits", "wrapping", "replaceStep", "fitsTrivially", "Fitter", "unplaced", "fit", "moveInline", "placedSize", "startDepth", "sliceDepth", "contentAt", "first", "frontierDepth", "inject", "openAtEnd", "dropFromFragment", "taken", "add", "openEndCount", "matches", "closeNodeStart", "toEnd", "addToFragment", "top", "level", "contentAfterFits", "scan", "dropInner", "close", "count", "frag", "open", "invalidMarks", "definesContent", "replaceRange", "targetDepths", "coveredDepths", "preferredTarget", "spec", "preferredTargetIndex", "leftNodes", "preferredDepth", "leftNode", "def", "openDepth", "targetDepth", "expand", "closeFragment", "startSteps", "oldOpen", "newOpen", "replaceRangeWith", "point", "deleteRange", "covered", "last", "minDepth", "AttrStep", "_AttrStep", "attr", "name", "DocAttrStep", "_DocAttrStep", "TransformError", "err", "Transform", "Mark", "classesById", "Selection", "$anchor", "$head", "ranges", "SelectionRange", "i", "tr", "content", "Slice", "lastNode", "lastParent", "mapFrom", "$from", "$to", "mapping", "selectionToInsertionEnd", "node", "from", "to", "$pos", "dir", "textOnly", "inner", "TextSelection", "findSelectionIn", "depth", "found", "bias", "AllSelection", "doc", "json", "cls", "id", "selectionClass", "warnedAboutTextSelection", "checkTextSelection", "_TextSelection", "marks", "other", "TextBookmark", "anchor", "head", "dPos", "_TextBookmark", "NodeSelection", "_NodeSelection", "$end", "deleted", "pos", "Fragment", "NodeBookmark", "_NodeBookmark", "_AllSelection", "sel", "AllBookmark", "index", "text", "child", "startLen", "last", "step", "ReplaceStep", "ReplaceAroundStep", "map", "end", "_from", "_to", "_newFrom", "newTo", "UPDATED_SEL", "UPDATED_MARKS", "UPDATED_SCROLL", "Transaction", "Transform", "state", "selection", "Mark", "mark", "time", "slice", "inheritMarks", "schema", "key", "value", "_", "bind", "f", "self", "FieldDesc", "name", "desc", "baseFields", "config", "instance", "_marks", "_old", "prev", "Configuration", "plugins", "plugin", "EditorState", "_EditorState", "ignore", "rootTr", "trs", "newState", "seen", "haveNew", "n", "oldState", "j", "newInstance", "fields", "field", "$config", "pluginFields", "result", "m", "prop", "Node", "bindProps", "obj", "target", "val", "Plugin", "spec", "createKey", "keys", "PluginKey", "domIndex", "node", "index", "parentNode", "parent", "reusedRange", "textRange", "from", "to", "range", "isEquivalentPosition", "off", "targetNode", "targetOff", "scanFor", "atomElements", "dir", "nodeSize", "hasBlockDesc", "isOnEdge", "offset", "atStart", "atEnd", "dom", "desc", "cur", "selectionCollapsed", "domSel", "keyEvent", "keyCode", "key", "event", "deepActiveElement", "doc", "elt", "nav", "agent", "ie_edge", "ie_upto10", "ie_11up", "ie", "ie_version", "gecko", "_chrome", "chrome", "chrome_version", "safari", "ios", "mac", "android", "webkit", "webkit_version", "windowRect", "getSide", "value", "side", "clientRect", "rect", "scaleX", "scaleY", "scrollRectIntoView", "view", "startDOM", "scrollThreshold", "scrollMargin", "atTop", "bounding", "moveX", "moveY", "startX", "startY", "dX", "dY", "storeScrollPos", "refDOM", "refTop", "x", "y", "localRect", "scrollStack", "stack", "resetScrollPos", "newRefTop", "restoreScrollStack", "dTop", "i", "top", "left", "preventScrollSupported", "focusPreventScroll", "stored", "findOffsetInNode", "coords", "closest", "dxClosest", "coordsClosest", "rowBot", "rowTop", "child", "childIndex", "rects", "dx", "findOffsetInText", "len", "singleRect", "inRect", "targetKludge", "posFromElement", "bias", "posFromCaret", "outside", "elementFromPoint", "element", "box", "startI", "j", "posAtCoords", "pos", "p", "next", "target", "BIDI", "coordsAtPos", "atom", "supportEmptyRange", "rectBefore", "rectAfter", "flattenV", "takeSide", "before", "flattenH", "after", "withFlushedState", "state", "f", "viewState", "active", "endOfTextblockVertical", "sel", "$pos", "nearest", "boxes", "maybeRTL", "endOfTextblockHorizontal", "$head", "oldNode", "oldOff", "anchorNode", "anchorOffset", "oldBidiLevel", "parentDOM", "newNode", "newOff", "result", "cachedState", "cachedDir", "cachedResult", "endOfTextblock", "NOT_DIRTY", "CHILD_DIRTY", "CONTENT_DIRTY", "NODE_DIRTY", "ViewDesc", "children", "contentDOM", "widget", "mark", "outerDeco", "innerDeco", "nodeName", "size", "domBefore", "domAfter", "search", "onlyNodes", "first", "nodeDOM", "scan", "end", "curPos", "TrailingHackViewDesc", "prev", "WidgetViewDesc", "enter", "base", "fromOffset", "toOffset", "childBase", "anchor", "head", "root", "force", "anchorDOM", "headDOM", "brKludge", "domSelExtended", "tmp", "mutation", "startInside", "endInside", "level", "dirty", "self", "wrap", "stop", "CompositionViewDesc", "textDOM", "text", "mut", "MarkViewDesc", "_MarkViewDesc", "inline", "custom", "spec", "DOMSerializer", "copy", "nodes", "replaceNodes", "NodeViewDesc", "_NodeViewDesc", "descObj", "applyOuterDeco", "CustomNodeViewDesc", "TextViewDesc", "rule", "Fragment", "sameOuterDeco", "composition", "localComposition", "compositionInChild", "updater", "ViewTreeUpdater", "iterDeco", "insideNode", "Mark", "compIndex", "renderDescs", "iosHacks", "TextSelection", "textNode", "nearbyTextNode", "textPos", "findTextInFragment", "topNode", "needsWrap", "oldDOM", "patchOuterDeco", "computeOuterDeco", "docViewDesc", "_TextViewDesc", "skip", "n", "descs", "written", "childDOM", "rm", "OuterDecoLevel", "noDeco", "attrs", "name", "val", "outerDOM", "prevComputed", "curComputed", "curDOM", "deco", "patchAttributes", "prevList", "curList", "prop", "m", "a", "b", "lock", "preMatch", "start", "marks", "keep", "depth", "maxKeep", "found", "markDesc", "targetDesc", "e", "domNode", "nextDOM", "lastChild", "hack", "frag", "parentDesc", "curDesc", "descI", "fI", "matched", "matches", "outer", "compareSide", "onWidget", "onNode", "locals", "decoIndex", "restNode", "parentIndex", "widgets", "cutAt", "d", "oldCSS", "childStart", "str", "replacement", "selectionFromDOM", "origin", "nearestDesc", "inWidget", "$anchor", "selection", "nearestDescNode", "NodeSelection", "selectionBetween", "editorOwnsSelection", "hasSelection", "selectionToDOM", "syncNodeSelection", "curSel", "selectCursorWrapper", "resetEditableFrom", "resetEditableTo", "brokenSelectBetweenUneditable", "temporarilyEditableNear", "resetEditable", "removeClassOnSelectionChange", "setEditable", "img", "clearNodeSelection", "hasFocusAndSelection", "anchorInRightPlace", "moveSelectionBlock", "$side", "$start", "Selection", "apply", "selectHorizontally", "mods", "nodePos", "nodeLen", "isIgnorable", "skipIgnoredNodesLeft", "moveNode", "moveOffset", "isBlockNode", "setSelFocus", "skipIgnoredNodesRight", "selectVertically", "$from", "$to", "beyond", "AllSelection", "stopNativeHorizontalDelete", "empty", "nextNode", "tr", "switchEditable", "safariDownArrowBug", "focusNode", "focusOffset", "getMods", "captureKeyDown", "code", "serializeForClipboard", "slice", "context", "content", "openStart", "openEnd", "serializer", "detachedDoc", "firstChild", "wrappers", "wrapMap", "wrapper", "parseFromClipboard", "html", "plainText", "$context", "inCode", "asText", "Slice", "parsed", "schema", "block", "readHTML", "restoreReplacedSpaces", "contextNode", "sliceData", "DOMParser", "inlineParents", "addContext", "closeSlice", "normalizeSiblings", "fragment", "match", "lastWrap", "inLast", "addToSibling", "closeRight", "wrapped", "withWrappers", "sibling", "inner", "fill", "closeRange", "_detachedDoc", "metas", "firstTag", "array", "type", "handlers", "editHandlers", "passiveHandlers", "InputState", "initInput", "handler", "eventBelongsToView", "runCustomHandler", "ensureListeners", "setSelectionOrigin", "destroyInput", "currentHandlers", "dispatchEvent", "_event", "inOrNearComposition", "now", "eventCoords", "isNear", "click", "dy", "runHandlerOnContext", "propName", "inside", "updateSelection", "selectClickedLeaf", "selectClickedNode", "selectedNode", "selectAt", "handleSingleClick", "selectNode", "handleDoubleClick", "handleTripleClick", "defaultTripleClick", "forceDOMFlush", "endComposition", "selectNodeModifier", "flushed", "MouseDown", "targetPos", "timeoutComposition", "scheduleComposeEnd", "delay", "clearComposition", "timestampFromCustomEvent", "forceUpdate", "captureCopy", "brokenClipboardAPI", "cut", "data", "sliceSingleNode", "capturePaste", "doPaste", "singleNode", "Dragging", "move", "dragCopyModifier", "mouseDown", "dragging", "_", "eventPos", "$mouse", "insertPos", "dropPoint", "isNode", "beforeInsert", "_from", "_to", "_newFrom", "newTo", "domChangeCount", "$cursor", "compareObjs", "WidgetType", "_WidgetType", "toDOM", "noSpec", "mapping", "span", "oldOffset", "deleted", "Decoration", "other", "InlineType", "_InlineType", "NodeType", "_NodeType", "_Decoration", "none", "DecorationSet", "_DecorationSet", "local", "decorations", "buildTree", "predicate", "childOff", "options", "newLocal", "mapped", "mapChildren", "byPos", "childNode", "childOffset", "baseOffset", "takeSpansForNode", "moveSpans", "withoutNulls", "removed", "dec", "localSet", "DecorationGroup", "removeOverlap", "_DecorationGroup", "members", "mappedDecos", "member", "sorted", "oldChildren", "moved", "oldStart", "oldEnd", "newStart", "newEnd", "dSize", "mustRebuild", "fromLocal", "toLocal", "mapAndGatherRemainingDecorations", "built", "spans", "gather", "set", "hasNulls", "localStart", "subtree", "working", "insertAhead", "viewDecorations", "observeOptions", "useCharData", "SelectionState", "DOMObserver", "handleDOMChange", "mutations", "take", "ancestors", "container", "newSel", "typeOver", "added", "brs", "readSel", "checkCSS", "previousSibling", "nextSibling", "cssChecked", "cssCheckWarned", "safariShadowSelectionRange", "read", "currentAnchor", "parseBetween", "from_", "to_", "find", "startDoc", "parser", "ruleFromNode", "readDOMChange", "addedNodes", "$before", "shared", "parse", "compare", "preferredPos", "preferredSide", "change", "findDiff", "resolveSelection", "$fromA", "inlineChange", "nextSel", "looksLikeJoin", "chFrom", "chTo", "storedMarks", "markChange", "isMarkChange", "parsedSel", "curMarks", "prevMarks", "update", "updated", "old", "$newStart", "$newEnd", "skipClosingAndOpening", "$next", "fromEnd", "mayOpen", "endA", "endB", "adjust", "EditorView", "place", "props", "InputState", "checkStateComponent", "getEditable", "updateCursorWrapper", "buildNodeViews", "docViewDesc", "computeDocDeco", "viewDecorations", "DOMObserver", "from", "to", "typeOver", "added", "readDOMChange", "initInput", "prev", "name", "ensureListeners", "prevProps", "updated", "state", "redraw", "updateSel", "clearComposition", "pluginsChanged", "nodeViews", "changedNodeViews", "innerDeco", "outerDeco", "scroll", "updateDoc", "oldScrollPos", "storeScrollPos", "forceSelUpdate", "ie", "chrome", "selectionContextChanged", "chromeKludge", "anchorInRightPlace", "selectionToDOM", "syncNodeSelection", "resetScrollPos", "startDOM", "f", "NodeSelection", "target", "scrollRectIntoView", "view", "prevState", "i", "plugin", "pluginView", "propName", "prop", "value", "plugins", "node", "focusPreventScroll", "cached", "search", "coords", "posAtCoords", "pos", "side", "coordsAtPos", "desc", "offset", "bias", "dir", "endOfTextblock", "destroyInput", "event", "dispatchEvent", "tr", "dispatchTransaction", "safari", "deepActiveElement", "safariShadowSelectionRange", "attrs", "attr", "Decoration", "dom", "sel1", "sel2", "depth", "result", "add", "obj", "a", "b", "nA", "nB", "_", "base", "shift", "mac", "ie", "i", "code", "keyName", "event", "ignoreKey", "name", "mac", "normalizeKeyName", "name", "parts", "result", "alt", "ctrl", "shift", "meta", "i", "mod", "normalize", "map", "copy", "prop", "modifiers", "event", "keymap", "bindings", "Plugin", "keydownHandler", "view", "keyName", "baseName", "direct", "noShift", "base", "fromCode", "deleteSelection", "state", "dispatch", "atBlockStart", "view", "$cursor", "joinBackward", "$cut", "findCutBefore", "range", "target", "liftTarget", "before", "deleteBarrier", "textblockAt", "NodeSelection", "delStep", "replaceStep", "Slice", "tr", "Selection", "joinTextblockBackward", "joinTextblocksAround", "joinTextblockForward", "atBlockEnd", "findCutAfter", "beforeText", "beforePos", "child", "after", "afterText", "afterPos", "step", "ReplaceStep", "TextSelection", "node", "side", "only", "scan", "selectNodeBackward", "$head", "empty", "$pos", "i", "joinForward", "selectNodeForward", "parent", "joinUp", "sel", "nodeSel", "point", "canJoin", "joinPoint", "joinDown", "lift", "$from", "$to", "newlineInCode", "$anchor", "defaultBlockAt", "match", "type", "exitCode", "above", "pos", "createParagraphNear", "AllSelection", "liftEmptyBlock", "canSplit", "splitBlockAs", "splitNode", "atEnd", "deflt", "splitType", "types", "can", "first", "$first", "splitBlock", "selectParentNode", "state", "dispatch", "$from", "to", "pos", "same", "NodeSelection", "selectAll", "AllSelection", "joinMaybeClear", "$pos", "before", "after", "index", "canJoin", "deleteBarrier", "$cut", "conn", "match", "canDelAfter", "end", "wrap", "Fragment", "i", "tr", "ReplaceAroundStep", "Slice", "joinAt", "selAfter", "Selection", "range", "target", "liftTarget", "textblockAt", "at", "afterText", "afterDepth", "selectTextblockSide", "side", "sel", "depth", "TextSelection", "selectTextblockStart", "selectTextblockEnd", "wrapIn", "nodeType", "attrs", "$to", "wrapping", "findWrapping", "setBlockType", "applicable", "from", "node", "chainCommands", "commands", "state", "dispatch", "view", "backspace", "deleteSelection", "joinBackward", "selectNodeBackward", "del", "joinForward", "selectNodeForward", "pcBaseKeymap", "newlineInCode", "createParagraphNear", "liftEmptyBlock", "splitBlock", "exitCode", "selectAll", "macBaseKeymap", "selectTextblockStart", "selectTextblockEnd", "key", "mac", "wrapInList", "listType", "attrs", "state", "dispatch", "$from", "$to", "range", "doJoin", "outerRange", "$insert", "NodeRange", "wrap", "findWrapping", "doWrapInList", "tr", "wrappers", "joinBefore", "content", "Fragment", "i", "ReplaceAroundStep", "Slice", "found", "splitDepth", "splitPos", "parent", "e", "first", "canSplit", "liftListItem", "itemType", "state", "dispatch", "$from", "$to", "range", "node", "liftToOuterList", "liftOutOfList", "tr", "end", "endOfList", "ReplaceAroundStep", "Slice", "Fragment", "NodeRange", "target", "liftTarget", "after", "canJoin", "list", "pos", "i", "e", "$start", "item", "atStart", "atEnd", "parent", "indexBefore", "start", "sinkListItem", "startIndex", "nodeBefore", "nestedBefore", "inner", "slice", "before", "createChainableState", "config", "state", "transaction", "selection", "doc", "storedMarks", "CommandManager", "props", "rawCommands", "editor", "view", "tr", "name", "command", "args", "callback", "startTr", "shouldDispatch", "callbacks", "hasStartTransaction", "run", "chain", "dispatch", "EventEmitter", "event", "fn", "getExtensionField", "extension", "field", "context", "splitExtensions", "extensions", "baseExtensions", "nodeExtensions", "markExtensions", "getAttributesFromExtensions", "extensionAttributes", "nodeAndMarkExtensions", "defaultAttribute", "addGlobalAttributes", "globalAttribute", "type", "attribute", "addAttributes", "attributes", "mergedAttr", "getNodeType", "nameOrType", "schema", "mergeAttributes", "objects", "item", "items", "mergedAttributes", "key", "value", "valueClasses", "existingClasses", "insertClasses", "valueClass", "getRenderedAttributes", "nodeOrMark", "isFunction", "callOrReturn", "isEmptyObject", "fromString", "injectExtensionAttributesToParseRule", "parseRule", "node", "oldAttributes", "newAttributes", "cleanUpSchemaItem", "data", "getSchemaByResolvedExtensions", "allAttributes", "topNode", "_a", "nodes", "extraNodeFields", "fields", "e", "extendNodeSchema", "extensionAttribute", "parseHTML", "renderHTML", "renderText", "marks", "extraMarkFields", "extendMarkSchema", "mark", "Schema", "getSchemaTypeByName", "isExtensionRulesEnabled", "enabled", "enabledExtension", "getTextContentFromNodes", "$from", "maxMatch", "textBefore", "sliceEndPos", "pos", "parent", "index", "chunk", "_b", "isRegExp", "InputRule", "inputRuleMatcherHandler", "text", "find", "inputRuleMatch", "result", "from", "to", "rules", "plugin", "matched", "rule", "match", "range", "commands", "can", "inputRulesPlugin", "Plugin", "prev", "stored", "simulatedInputMeta", "$cursor", "isNumber", "PasteRule", "pasteRuleMatcherHandler", "matches", "pasteRuleMatch", "pasteEvent", "dropEvent", "handlers", "resolvedFrom", "resolvedTo", "textToMatch", "start", "end", "handler", "createClipboardPasteEvent", "pasteRulesPlugin", "dragSourceElement", "isPastedFromProseMirror", "isDroppedFromProseMirror", "processEvent", "pasteEvt", "chainableState", "handleDragstart", "_view", "html", "transactions", "oldState", "isPaste", "isDrop", "simulatedPasteMeta", "isSimulatedPaste", "findDuplicates", "filtered", "el", "ExtensionManager", "_ExtensionManager", "resolvedExtensions", "duplicatedNames", "addExtensions", "a", "b", "priorityA", "priorityB", "addCommands", "inputRules", "pasteRules", "allPlugins", "plugins", "addKeyboardShortcuts", "defaultBindings", "Mark", "bindings", "shortcut", "method", "keyMapPlugin", "keymap", "addInputRules", "addPasteRules", "addProseMirrorPlugins", "proseMirrorPlugins", "addNodeView", "nodeview", "getPos", "decorations", "HTMLAttributes", "onBeforeCreate", "onCreate", "onUpdate", "onSelectionUpdate", "onTransaction", "onFocus", "onBlur", "onDestroy", "getType", "isPlainObject", "mergeDeep", "target", "source", "output", "Extension", "_Extension", "options", "extendedConfig", "getTextBetween", "startNode", "blockSeparator", "textSerializers", "textSerializer", "getTextSerializersFromSchema", "ClipboardTextSerializer", "PluginKey", "ranges", "blur", "clearContent", "emitUpdate", "clearNodes", "$to", "mapping", "$mappedFrom", "$mappedTo", "nodeRange", "targetLiftDepth", "liftTarget", "defaultType", "createParagraphNear", "originalCreateParagraphNear", "cut", "originRange", "targetPos", "contentSlice", "newPos", "TextSelection", "deleteCurrentNode", "currentNode", "$pos", "depth", "deleteNode", "typeOrName", "deleteRange", "deleteSelection", "originalDeleteSelection", "enter", "exitCode", "originalExitCode", "objectIncludes", "object1", "object2", "keys", "findMarkInSet", "isMarkInSet", "getMarkRange", "startIndex", "startPos", "endIndex", "endPos", "getMarkType", "extendMarkRange", "newSelection", "first", "i", "isTextSelection", "minMax", "min", "max", "resolveFocusPosition", "position", "selectionAtStart", "Selection", "selectionAtEnd", "minPos", "maxPos", "isiOS", "focus", "delayedFocus", "isSameSelection", "forEach", "insertContent", "removeWhitespaces", "children", "child", "elementFromString", "wrappedValue", "createNodeFromContent", "content", "isJSONContent", "isTextContent", "Fragment", "error", "parser", "DOMParser", "selectionToInsertionEnd", "startLen", "bias", "last", "step", "ReplaceStep", "ReplaceAroundStep", "map", "_from", "_to", "_newFrom", "newTo", "isFragment", "nodeOrFragment", "insertContentAt", "isOnlyTextContent", "isOnlyBlockContent", "newContent", "v", "joinUp", "originalJoinUp", "joinDown", "originalJoinDown", "joinBackward", "originalJoinBackward", "joinForward", "originalJoinForward", "joinItemBackward", "point", "joinPoint", "joinItemForward", "joinTextblockBackward", "originalCommand", "joinTextblockForward", "isMacOS", "normalizeKeyName", "parts", "alt", "ctrl", "shift", "meta", "mod", "keyboardShortcut", "capturedTransaction", "f", "newStep", "isNodeActive", "empty", "nodeRanges", "relativeFrom", "relativeTo", "selectionRange", "matchedNodeRanges", "sum", "lift", "originalLift", "liftEmptyBlock", "originalLiftEmptyBlock", "liftListItem", "originalLiftListItem", "newlineInCode", "originalNewlineInCode", "getSchemaTypeNameByName", "deleteProps", "obj", "propOrProps", "newObj", "prop", "resetAttributes", "nodeType", "markType", "schemaType", "scrollIntoView", "selectAll", "selectNodeBackward", "originalSelectNodeBackward", "selectNodeForward", "originalSelectNodeForward", "selectParentNode", "originalSelectParentNode", "selectTextblockEnd", "originalSelectTextblockEnd", "selectTextblockStart", "originalSelectTextblockStart", "createDocument", "parseOptions", "setContent", "document", "getMarkAttributes", "markItem", "combineTransactionSteps", "oldDoc", "transform", "Transform", "defaultBlockAt", "findChildrenInRange", "node", "range", "predicate", "nodesWithPos", "child", "pos", "findParentNodeClosestToPos", "$pos", "i", "findParentNode", "selection", "getHTMLFromFragment", "fragment", "schema", "documentFragment", "DOMSerializer", "container", "getText", "node", "options", "range", "getTextBetween", "getNodeAttributes", "state", "typeOrName", "type", "getNodeType", "from", "to", "nodes", "node", "nodeItem", "getAttributes", "schemaType", "getSchemaTypeNameByName", "getMarkAttributes", "removeDuplicates", "array", "by", "seen", "item", "key", "simplifyChangedRanges", "changes", "uniqueChanges", "change", "index", "_", "i", "otherChange", "getChangedRanges", "transform", "mapping", "steps", "stepMap", "ranges", "newStart", "newEnd", "oldStart", "oldEnd", "getMarksBetween", "from", "to", "doc", "marks", "mark", "$pos", "range", "getMarkRange", "node", "pos", "getSplittedAttributes", "extensionAttributes", "typeName", "attributes", "name", "extensionAttribute", "item", "isMarkActive", "state", "typeOrName", "empty", "ranges", "type", "getMarkType", "mark", "objectIncludes", "selectionRange", "markRanges", "$from", "$to", "from", "to", "node", "pos", "relativeFrom", "relativeTo", "range", "matchedRange", "markRange", "sum", "excludedRange", "isActive", "isNodeActive", "schemaType", "getSchemaTypeNameByName", "isList", "name", "extensions", "nodeExtensions", "splitExtensions", "extension", "item", "context", "group", "callOrReturn", "getExtensionField", "isNodeEmpty", "node", "defaultContent", "_a", "content", "canSetMark", "state", "tr", "newMarkType", "selection", "cursor", "isTextSelection", "currentMarks", "_a", "mark", "ranges", "$from", "$to", "someNodeSupportsMark", "node", "_pos", "parent", "parentAllowsMarkType", "currentMarksAllowMarkType", "otherMark", "setMark", "typeOrName", "attributes", "dispatch", "empty", "type", "getMarkType", "oldAttributes", "getMarkAttributes", "range", "from", "to", "pos", "trimmedFrom", "trimmedTo", "setMeta", "key", "value", "setNode", "chain", "getNodeType", "commands", "setBlockType", "updatedState", "setNodeSelection", "position", "doc", "minMax", "NodeSelection", "setTextSelection", "minPos", "TextSelection", "maxPos", "resolvedFrom", "resolvedEnd", "sinkListItem", "originalSinkListItem", "ensureMarks", "splittableMarks", "marks", "filteredMarks", "splitBlock", "keepMarks", "editor", "extensionAttributes", "newAttributes", "getSplittedAttributes", "canSplit", "atEnd", "deflt", "defaultBlockAt", "types", "can", "first", "$first", "splitListItem", "grandParent", "wrap", "Fragment", "depthBefore", "d", "depthAfter", "newNextTypeAttributes", "nextType", "start", "Slice", "sel", "n", "newTypeAttributes", "storedMarks", "joinListBackwards", "listType", "list", "findParentNode", "before", "nodeBefore", "canJoin", "joinListForwards", "after", "nodeAfter", "toggleList", "listTypeOrName", "itemTypeOrName", "extensions", "itemType", "parentList", "isList", "canWrapInList", "toggleMark", "options", "extendEmptyMarkRange", "isMarkActive", "toggleNode", "toggleTypeOrName", "toggleType", "isNodeActive", "toggleWrap", "undoInputRule", "plugins", "i", "plugin", "undoable", "toUndo", "j", "unsetAllMarks", "unsetMark", "attrs", "getMarkRange", "updateAttributes", "nodeType", "markType", "schemaType", "getSchemaTypeNameByName", "wrapIn", "originalWrapIn", "wrapInList", "originalWrapInList", "Commands", "Extension", "Editable", "Plugin", "PluginKey", "FocusEvents", "view", "event", "transaction", "Keymap", "handleBackspace", "$anchor", "$parentPos", "parentIsIsolating", "parentPos", "isAtStart", "Selection", "handleDelete", "baseKeymap", "pcKeymap", "macKeymap", "isiOS", "isMacOS", "transactions", "oldState", "newState", "allFrom", "allEnd", "createChainableState", "CommandManager", "Tabindex", "NodePos", "_NodePos", "pos", "editor", "isBlock", "node", "_a", "content", "from", "to", "parentPos", "$pos", "children", "offset", "targetPos", "childNodePos", "selector", "attributes", "currentNode", "nodeAttributes", "attrKeys", "index", "key", "firstItemOnly", "nodes", "childPos", "oldSelection", "style", "createStyleTag", "nonce", "suffix", "tiptapStyleTag", "styleNode", "Editor", "EventEmitter", "options", "editable", "emitUpdate", "plugin", "handlePlugins", "plugins", "isFunction", "state", "nameOrPluginKey", "name", "allExtensions", "Editable", "ClipboardTextSerializer", "_b", "Commands", "FocusEvents", "Keymap", "Tabindex", "extension", "ExtensionManager", "CommandManager", "doc", "createDocument", "selection", "resolveFocusPosition", "EditorView", "EditorState", "newState", "dom", "fn", "tr", "transaction", "step", "selectionHasChanged", "focus", "blur", "nameOrType", "getAttributes", "nameOrAttributes", "attributesOrUndefined", "isActive", "getHTMLFromFragment", "blockSeparator", "textSerializers", "getText", "getTextSerializersFromSchema", "isNodeEmpty", "markInputRule", "config", "InputRule", "range", "match", "callOrReturn", "captureGroup", "fullMatch", "startSpaces", "textStart", "textEnd", "getMarksBetween", "item", "type", "markEnd", "nodeInputRule", "start", "end", "newNode", "matchStart", "lastChar", "textblockTypeInputRule", "$start", "wrappingInputRule", "config", "InputRule", "state", "range", "match", "chain", "attributes", "callOrReturn", "tr", "blockRange", "wrapping", "findWrapping", "selection", "storedMarks", "splittableMarks", "marks", "filteredMarks", "mark", "nodeType", "before", "canJoin", "Mark", "_Mark", "getExtensionField", "options", "extension", "mergeDeep", "extendedConfig", "editor", "currentPos", "currentMarks", "m", "removeMark", "Node", "_Node", "markPasteRule", "config", "PasteRule", "state", "range", "match", "pasteEvent", "attributes", "callOrReturn", "tr", "captureGroup", "fullMatch", "markEnd", "startSpaces", "textStart", "textEnd", "getMarksBetween", "item", "type", "tipTapCoreStyles", "i", "inputRegex", "Blockquote", "Node", "HTMLAttributes", "mergeAttributes", "commands", "wrappingInputRule", "starInputRegex", "starPasteRegex", "underscoreInputRegex", "underscorePasteRegex", "Bold", "Mark", "node", "value", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "ListItem", "Node", "HTMLAttributes", "mergeAttributes", "TextStyle", "Mark", "element", "state", "commands", "attributes", "getMarkAttributes", "value", "inputRegex", "BulletList", "chain", "inputRule", "wrappingInputRule", "inputRegex", "pasteRegex", "Code", "Mark", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "backtickInputRegex", "tildeInputRegex", "CodeBlock", "Node", "element", "languageClassPrefix", "language", "_a", "className", "node", "HTMLAttributes", "mergeAttributes", "attributes", "commands", "empty", "$anchor", "isAtStart", "editor", "state", "selection", "$from", "isAtEnd", "endsWithDoubleNewline", "tr", "doc", "after", "textblockTypeInputRule", "match", "Plugin", "PluginKey", "view", "event", "text", "vscode", "vscodeData", "TextSelection", "Document", "Node", "dropCursor", "options", "Plugin", "editorView", "DropCursorView", "_a", "name", "handler", "e", "prevState", "pos", "$pos", "isBlock", "rect", "before", "after", "node", "nodeRect", "top", "coords", "parent", "parentLeft", "parentTop", "timeout", "event", "disableDropCursor", "disabled", "target", "point", "dropPoint", "Dropcursor", "Extension", "dropCursor", "GapCursor", "_GapCursor", "Selection", "$pos", "doc", "mapping", "Slice", "other", "json", "GapBookmark", "parent", "closedBefore", "closedAfter", "override", "deflt", "dir", "mustMove", "search", "pos", "next", "d", "$cur", "inside", "NodeSelection", "_GapBookmark", "index", "before", "after", "gapCursor", "Plugin", "drawGapCursor", "_view", "$anchor", "$head", "handleClick", "handleKeyDown", "beforeinput", "keydownHandler", "arrow", "axis", "dirStr", "state", "dispatch", "view", "sel", "$start", "TextSelection", "$found", "event", "clickPos", "$from", "insert", "frag", "Fragment", "i", "tr", "node", "DecorationSet", "Decoration", "Gapcursor", "Extension", "gapCursor", "extension", "context", "_a", "callOrReturn", "getExtensionField", "HardBreak", "Node", "HTMLAttributes", "mergeAttributes", "commands", "chain", "state", "editor", "selection", "storedMarks", "keepMarks", "splittableMarks", "marks", "tr", "dispatch", "filteredMarks", "mark", "Heading", "Node", "level", "node", "HTMLAttributes", "mergeAttributes", "attributes", "commands", "items", "textblockTypeInputRule", "GOOD_LEAF_SIZE", "RopeSequence", "other", "Append", "from", "to", "i", "f", "result", "elt", "values", "Leaf", "prototypeAccessors", "start", "left", "right", "leftLen", "inner", "dist_default", "max_empty_items", "Branch", "_Branch", "items", "eventCount", "state", "preserveItems", "end", "remap", "mapFrom", "transform", "selection", "remaining", "addAfter", "addBefore", "item", "i", "Item", "step", "map", "histOptions", "newItems", "oldItems", "lastItem", "merged", "overflow", "DEPTH_OVERFLOW", "cutOffEvents", "from", "to", "maps", "Mapping", "mirrorPos", "array", "rebasedTransform", "rebasedCount", "rebasedItems", "start", "mapping", "newUntil", "iRebased", "pos", "newMaps", "branch", "count", "upto", "events", "newItem", "last", "dist_default", "n", "cutPoint", "_Item", "mirrorOffset", "other", "HistoryState", "done", "undone", "prevRanges", "prevTime", "prevComposition", "applyTransaction", "history", "tr", "options", "historyTr", "historyKey", "rebased", "closeHistoryKey", "appended", "mustPreserveItems", "rangesFor", "composition", "newGroup", "isAdjacentTo", "mapRanges", "adjacent", "result", "_from", "_to", "ranges", "histTransaction", "redo", "pop", "added", "newHist", "cachedPreserveItems", "cachedPreserveItemsPlugins", "plugins", "historyKey", "PluginKey", "closeHistoryKey", "history", "config", "Plugin", "HistoryState", "Branch", "tr", "hist", "state", "applyTransaction", "view", "inputType", "command", "undo", "redo", "buildCommand", "scroll", "dispatch", "histTransaction", "undoNoScroll", "redoNoScroll", "History", "Extension", "state", "dispatch", "undo", "redo", "history", "HorizontalRule", "Node", "HTMLAttributes", "mergeAttributes", "chain", "state", "$originTo", "currentChain", "tr", "dispatch", "$to", "posAfter", "TextSelection", "NodeSelection", "node", "_a", "nodeInputRule", "starInputRegex", "starPasteRegex", "underscoreInputRegex", "underscorePasteRegex", "Italic", "Mark", "node", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "ListItem", "Node", "HTMLAttributes", "mergeAttributes", "ListItem", "Node", "HTMLAttributes", "mergeAttributes", "TextStyle", "Mark", "element", "state", "commands", "attributes", "getMarkAttributes", "value", "inputRegex", "OrderedList", "start", "attributesWithoutStart", "chain", "inputRule", "wrappingInputRule", "match", "node", "Paragraph", "Node", "HTMLAttributes", "mergeAttributes", "commands", "inputRegex", "pasteRegex", "Strike", "Mark", "style", "HTMLAttributes", "mergeAttributes", "commands", "markInputRule", "markPasteRule", "Text", "Node", "StarterKit", "Extension", "extensions", "Blockquote", "_a", "Bold", "_b", "BulletList", "_c", "Code", "_d", "CodeBlock", "_e", "Document", "_f", "Dropcursor", "_g", "Gapcursor", "_h", "HardBreak", "_j", "Heading", "_k", "History", "_l", "HorizontalRule", "_m", "Italic", "_o", "ListItem", "_p", "OrderedList", "_q", "Paragraph", "_r", "Strike", "_s", "Text", "_t", "uuidv4", "crypto", "c", "icons_exports", "__export", "attachFiles", "blockQuote", "bold", "bulletList", "close", "codeBlock", "decreaseIndentation", "heading", "increaseIndentation", "italics", "link", "orderedList", "redo", "strike", "undo", "toSvg", "path", "size", "x", "bold", "b", "italics", "strike", "link", "heading", "blockQuote", "codeBlock", "bulletList", "orderedList", "attachFiles", "undo", "redo", "close", "increaseIndentation", "decreaseIndentation", "toMemorySize", "bytes", "kilobytes", "megabytes", "normalize", "i", "isiOS", "modifierKey", "fileUploadErrorMessage", "captionPlaceholder", "translations", "LOADING_STATES", "AttachmentEditor", "BaseElement", "fileUploadErrorMessage", "x", "close", "i", "normalize", "toMemorySize", "toDefaultCaption", "fileName", "fileSize", "toMemorySize", "AttachmentManager", "_AttachmentManager", "str", "obj", "editorView", "uuidv4", "progress", "LOADING_STATES", "image", "view", "descendantNode", "position", "val", "isPreviewable", "contentType", "defaultCaption", "toDefaultCaption", "selectionToInsertionEnd", "tr", "startLen", "bias", "last", "step", "ReplaceStep", "ReplaceAroundStep", "map", "end", "_from", "_to", "_newFrom", "newTo", "Selection", "findAttribute", "element", "attribute", "attr", "attrs", "equalNodeType", "nodeType", "node", "findParentNodeClosestToPos", "$pos", "predicate", "i", "node", "findParentNodeOfTypeClosestToPos", "$pos", "nodeType", "findParentNodeClosestToPos", "node", "equalNodeType", "flatten", "node", "descend", "result", "child", "pos", "findChildren", "predicate", "findChildrenByType", "node", "nodeType", "descend", "findChildren", "child", "BaseEvent", "name", "options", "_AttachmentRemoveEvent", "BaseEvent", "attachment", "options", "AttachmentRemoveEvent", "UnsafeHTMLDirective", "Directive", "constructor", "partInfo", "super", "this", "_value", "nothing", "type", "PartType", "CHILD", "Error", "directiveName", "render", "value", "_templateResult", "noChange", "strings", "raw", "_$litType$", "resultType", "values", "unsafeHTML", "directive", "ifDefined", "value", "nothing", "when", "condition", "trueCase", "falseCase", "figureTypes", "parseContentTypeFromElement", "element", "findAttribute", "canParseAttachment", "node", "shouldPreview", "actionTextAttachment", "previewable", "canPreview", "handleCaptions", "tr", "newState", "pos", "modified", "scratch", "DOMSerializer", "figcaption", "caption", "contentType", "AttachmentManager", "toExtension", "fileName", "toType", "content", "Attachment", "Node", "Plugin", "PluginKey", "_transactions", "_oldState", "_parent", "bool", "view", "event", "name", "clipboardData", "text", "afterSgidsAndAttachmentIds", "prevState", "nodeType", "attachmentNodesBefore", "findChildrenByType", "nodeAttrs", "sgid", "attachmentId", "attachmentManager", "AttachmentRemoveEvent", "fileUploadErrorMessage", "captionPlaceholder", "fileSize", "url", "src", "width", "height", "attachmentAttrs", "figure", "mergeAttributes", "image", "LOADING_STATES", "attachment", "firstChild", "getPos", "editor", "progress", "loadingState", "trixAttachment", "isPreviewable", "trixAttributes", "figureClasses", "handleFigureClick", "e", "captionNode", "TextSelection", "imgSrc", "mouseIsDown", "mouseTimeout", "handleMouseDown", "_e", "handleMouseUp", "handleMouseMove", "NodeSelection", "removeFigure", "closestAttachment", "template", "x", "l", "n", "o", "toDefaultCaption", "D", "dom", "contentDOM", "srcRevoked", "options", "coordinates", "state", "dispatch", "posAtCoords", "currentSelection", "handleAttachment", "PreviewableAttachment", "schema", "minSize", "maxSize", "clamp", "val", "min", "max", "hasGalleriesDisabled", "currentNode", "paragraphTopNode", "findParentNodeOfTypeClosestToPos", "currentGallery", "priorGalleryPos", "paragraphIsEmpty", "prevNode", "isInGallery", "attachments", "allNodesPreviewable", "attachmentNodes", "previewableNodes", "end", "currSelection", "selectionToInsertionEnd", "Image", "Node", "element", "findAttribute", "HTMLAttributes", "mergeAttributes", "replaceEmptyGalleryWithParagraph", "node", "tr", "newState", "pos", "modified", "Gallery", "Node", "mergeAttributes", "Plugin", "view", "event", "nodeType", "chainCommands", "createParagraphNear", "figureTypes", "containingGallery", "findParentNodeOfTypeClosestToPos", "selectionToInsertionEnd", "_transactions", "_oldState", "_parent", "bool", "Figcaption", "Node", "HTMLAttributes", "mergeAttributes", "CustomStrike", "Strike", "HTMLAttributes", "mergeAttributes", "Placeholder", "Extension", "Plugin", "PluginKey", "doc", "selection", "active", "anchor", "decorations", "firstChild", "isLeaf", "isAtom", "isValidNode", "_a", "isEmptyDoc", "node", "pos", "hasAnchor", "isEmpty", "classes", "decoration", "Decoration", "DecorationSet", "FocusClasses", "Extension", "Plugin", "PluginKey", "doc", "selection", "isEditable", "isFocused", "anchor", "decorations", "DecorationSet", "maxLevels", "node", "pos", "currentLevel", "Decoration", "encodedTlds", "encodedUtlds", "assign", "target", "properties", "key", "numeric", "ascii", "alpha", "asciinumeric", "alphanumeric", "domain", "emoji", "scheme", "slashscheme", "whitespace", "registerGroup", "name", "groups", "addToGroups", "t", "flags", "k", "group", "flagsForToken", "result", "c", "State", "token", "input", "state", "nextState", "i", "regex", "exactOnly", "inputs", "next", "regexp", "len", "templateState", "allFlags", "ta", "tr", "ts", "tt", "WORD", "UWORD", "LOCALHOST", "TLD", "UTLD", "SCHEME", "SLASH_SCHEME", "NUM", "WS", "NL$1", "OPENBRACE", "OPENBRACKET", "OPENANGLEBRACKET", "OPENPAREN", "CLOSEBRACE", "CLOSEBRACKET", "CLOSEANGLEBRACKET", "CLOSEPAREN", "AMPERSAND", "APOSTROPHE", "ASTERISK", "AT", "BACKSLASH", "BACKTICK", "CARET", "COLON", "COMMA", "DOLLAR", "DOT", "EQUALS", "EXCLAMATION", "HYPHEN", "PERCENT", "PIPE", "PLUS", "POUND", "QUERY", "QUOTE", "SEMI", "SLASH", "TILDE", "UNDERSCORE", "EMOJI$1", "SYM", "tk", "ASCII_LETTER", "LETTER", "EMOJI", "DIGIT", "SPACE", "NL", "EMOJI_VARIATION", "EMOJI_JOINER", "tlds", "utlds", "init$2", "customSchemes", "groups", "State", "Start", "decodeTlds", "encodedTlds", "encodedUtlds", "tt", "APOSTROPHE", "OPENBRACE", "OPENBRACKET", "OPENANGLEBRACKET", "OPENPAREN", "CLOSEBRACE", "CLOSEBRACKET", "CLOSEANGLEBRACKET", "CLOSEPAREN", "AMPERSAND", "ASTERISK", "AT", "BACKTICK", "CARET", "COLON", "COMMA", "DOLLAR", "DOT", "EQUALS", "EXCLAMATION", "HYPHEN", "PERCENT", "PIPE", "PLUS", "POUND", "QUERY", "QUOTE", "SLASH", "SEMI", "TILDE", "UNDERSCORE", "BACKSLASH", "Num", "tr", "DIGIT", "NUM", "numeric", "Word", "ASCII_LETTER", "WORD", "ascii", "UWord", "LETTER", "UWORD", "alpha", "Ws", "SPACE", "WS", "whitespace", "NL$1", "Emoji", "EMOJI", "EMOJI$1", "emoji", "EmojiJoiner", "wordjr", "uwordjr", "i", "fastts", "TLD", "UTLD", "addToGroups", "SCHEME", "SLASH_SCHEME", "a", "b", "sch", "flags", "scheme", "slashscheme", "domain", "asciinumeric", "ts", "LOCALHOST", "SYM", "assign", "tk", "run$1", "start", "str", "iterable", "stringToArray", "c", "charCount", "tokens", "cursor", "charCursor", "state", "nextState", "tokenLength", "latestAccepting", "sinceAccepts", "charsSinceAccepts", "result", "len", "index", "first", "second", "char", "input", "t", "defaultt", "jr", "next", "encoded", "words", "stack", "digits", "popDigitCount", "popCount", "defaults", "noop", "Options", "opts", "defaultRender", "o", "ignoredTags", "uppercaseIgnoredTags", "ir", "token", "key", "operator", "isCallable", "option", "obj", "val", "MultiToken", "value", "tokens", "scheme", "options", "val", "truncate", "formatted", "protocol", "defaults", "token", "href", "formattedHref", "tagName", "content", "attributes", "className", "target", "rel", "attrs", "eventListeners", "assign", "createTokenClass", "type", "props", "Token", "p", "Email", "Text", "Nl", "Url", "LOCALHOST", "COLON", "makeState", "arg", "State", "init$1", "_ref", "groups", "qsAccepting", "AMPERSAND", "ASTERISK", "AT", "BACKSLASH", "BACKTICK", "CARET", "DOLLAR", "EQUALS", "HYPHEN", "NUM", "PERCENT", "PIPE", "PLUS", "POUND", "SLASH", "SYM", "TILDE", "UNDERSCORE", "qsNonAccepting", "APOSTROPHE", "CLOSEANGLEBRACKET", "CLOSEBRACE", "CLOSEBRACKET", "CLOSEPAREN", "COLON", "COMMA", "DOT", "EXCLAMATION", "OPENANGLEBRACKET", "OPENBRACE", "OPENBRACKET", "OPENPAREN", "QUERY", "QUOTE", "SEMI", "localpartAccepting", "Start", "Localpart", "tt", "ta", "Domain", "Scheme", "SlashScheme", "LocalpartAt", "LocalpartDot", "EmailDomain", "EmailDomainDot", "Email$1", "Email", "LOCALHOST", "EmailDomainHyphen", "EmailColon", "DomainHyphen", "DomainDot", "DomainDotTld", "Url", "DomainDotTldColon", "DomainDotTldColonPort", "Url$1", "UrlNonaccept", "SchemeColon", "SlashSchemeColon", "SlashSchemeColonSlash", "UriPrefix", "UrlOpenbrace", "UrlOpenbracket", "UrlOpenanglebracket", "UrlOpenparen", "UrlOpenbraceQ", "UrlOpenbracketQ", "UrlOpenanglebracketQ", "UrlOpenparenQ", "UrlOpenbraceSyms", "UrlOpenbracketSyms", "UrlOpenanglebracketSyms", "UrlOpenparenSyms", "NL$1", "Nl", "tk", "run", "start", "input", "tokens", "len", "cursor", "multis", "textTokens", "state", "secondState", "nextState", "multiLength", "latestAccepting", "sinceAccepts", "initMultiToken", "Text", "Multi", "subtokens", "startIdx", "endIdx", "value", "warn", "warnAdvice", "INIT", "reset", "registerCustomProtocol", "scheme", "optionalSlashSlash", "INIT", "warn", "warnAdvice", "init", "init$2", "i", "init$1", "tokenize", "str", "run", "run$1", "find", "type", "opts", "options", "Options", "tokens", "filtered", "token", "isValidLinkStructure", "tokens", "autolink", "options", "Plugin", "PluginKey", "transactions", "oldState", "newState", "docChanges", "transaction", "preventAutolink", "tr", "transform", "combineTransactionSteps", "getChangedRanges", "newRange", "nodesInChangedRanges", "findChildrenInRange", "node", "textBlock", "textBeforeWhitespace", "wordsBeforeWhitespace", "s", "lastWordBeforeSpace", "lastWordAndBlockOffset", "linksBeforeSpace", "tokenize", "t", "link", "getMarksBetween", "item", "clickHandler", "view", "pos", "event", "a", "els", "value", "attrs", "getAttributes", "href", "_a", "target", "_b", "pasteHandler", "slice", "state", "selection", "empty", "textContent", "find", "Link", "Mark", "protocol", "registerCustomProtocol", "reset", "HTMLAttributes", "_a", "mergeAttributes", "attributes", "chain", "markPasteRule", "text", "foundLinks", "links", "find", "item", "link", "match", "plugins", "autolink", "clickHandler", "pasteHandler", "_RhinoPasteEvent", "BaseEvent", "clipboardData", "options", "RhinoPasteEvent", "Paste", "Plugin", "PluginKey", "view", "event", "clipboardData", "rhinoPasteEvent", "RhinoPasteEvent", "RhinoStarterKit", "Extension", "loadedExtensions", "Paste", "string", "extension", "options", "Gallery", "Attachment", "Image", "Figcaption", "CustomStrike", "Link", "FocusClasses", "Placeholder", "PreviewableAttachment", "sparkMd5", "module", "exports", "factory", "undefined$1", "hex_chr", "md5cycle", "x", "a", "b", "c", "d", "md5blk", "s", "md5blks", "i", "md5blk_array", "md51", "n", "state", "length", "tail", "tmp", "lo", "hi", "md51_array", "rhex", "j", "hex", "clamp", "val", "from", "to", "begin", "end", "num", "target", "targetArray", "sourceArray", "toUtf8", "str", "utf8Str2ArrayBuffer", "returnUInt8Array", "buff", "arr", "arrayBuffer2Utf8Str", "concatenateArrayBuffers", "first", "second", "result", "hexToBinaryString", "bytes", "SparkMD5", "contents", "raw", "ret", "content", "hash", "fileSlice", "FileChecksum", "_FileChecksum", "file", "callback", "event", "binaryDigest", "base64digest", "start", "getMetaValue", "name", "element", "findElement", "findElements", "root", "selector", "elements", "toArray", "dispatchEvent", "type", "eventInit", "disabled", "bubbles", "cancelable", "detail", "value", "BlobRecord", "checksum", "url", "csrfToken", "responseType", "response", "direct_upload", "key", "BlobUpload", "blob", "headers", "status", "id", "DirectUpload", "delegate", "error", "notify", "upload", "object", "methodName", "messages", "DirectUploadController", "input", "hiddenInput", "attributes", "progress", "xhr", "inputSelector", "DirectUploadsController", "form", "controllers", "startNextController", "controller", "processingAttribute", "submitButtonsByForm", "started", "didClick", "didSubmitForm", "didSubmitRemoteElement", "handleFormSubmissionEvent", "inputs", "disable", "enable", "submitForm", "button", "autostart", "AttachmentUpload", "attachment", "element", "DirectUpload", "xhr", "event", "progress", "error", "blob", "LOADING_STATES", "signedId", "filename", "_AddAttachmentEvent", "BaseEvent", "attachment", "options", "AddAttachmentEvent", "_FileAcceptEvent", "BaseEvent", "file", "options", "FileAcceptEvent", "_BeforeInitializeEvent", "BaseEvent", "options", "BeforeInitializeEvent", "_InitializeEvent", "BaseEvent", "options", "InitializeEvent", "_RhinoFocusEvent", "BaseEvent", "options", "RhinoFocusEvent", "_RhinoBlurEvent", "BaseEvent", "options", "RhinoBlurEvent", "_RhinoChangeEvent", "BaseEvent", "options", "RhinoChangeEvent", "_SelectionChangeEvent", "BaseEvent", "transaction", "options", "SelectionChangeEvent", "TipTapEditorBase", "BaseElement", "event", "attachment", "target", "AttachmentUpload", "_event", "_view", "_slice", "moved", "clipboardData", "attachments", "RhinoChangeEvent", "RhinoFocusEvent", "RhinoBlurEvent", "transaction", "SelectionChangeEvent", "AddAttachmentEvent", "normalize", "tipTapCoreStyles", "editor_default", "slottedEditor", "attr", "nodeName", "nodeValue", "editors", "el", "attrName", "attrValue", "from", "to", "editor", "empty", "currentSelection", "state", "htmlArray", "tempScript", "node", "_pos", "parent", "dom", "DOMSerializer", "selection", "changedProperties", "AttachmentEditor", "BeforeInitializeEvent", "InitializeEvent", "resolve", "extensions", "_element", "files", "_reject", "fileAcceptEvents", "file", "FileAcceptEvent", "allowedFiles", "i", "dataTransfer", "src", "AttachmentManager", "x", "element", "inputElement", "parser", "doc", "filtersWithoutChildren", "figure", "attrs", "caption", "body", "StarterKit", "RhinoStarterKit", "content", "Editor", "DefineableMixin", "superclass", "_a", "name", "ctor", "options", "registry", "alreadyExists", "__publicField", "DefineableElement", "appliedClassMixins", "wasMixinPreviouslyApplied", "mixin", "superClass", "klass", "dedupeMixin", "mixedClass", "supportsScopedRegistry", "ScopedElementsMixinImplementation", "superclass", "_a", "value", "args", "registry", "constructor", "scopedElements", "shadowRootOptions", "tagName", "klass", "options", "createdRoot", "_shadowRoot", "registeredClass", "__publicField", "ScopedElementsMixin", "dedupeMixin", "CreateRenderRootMixinImplementation", "superclass", "value", "CreateRenderRootMixin", "dedupeMixin", "BaseElement", "DefineableMixin", "s", "RoleToolbar", "BaseElement", "__publicField", "event", "focusedElement", "el", "index", "key", "_event", "focus", "evt", "slot", "items", "changedProperties", "i", "x", "min", "max", "round", "floor", "createCoords", "v", "oppositeSideMap", "oppositeAlignmentMap", "clamp", "start", "value", "end", "evaluate", "param", "getSide", "placement", "getAlignment", "getOppositeAxis", "axis", "getAxisLength", "getSideAxis", "getAlignmentAxis", "getAlignmentSides", "rects", "rtl", "alignment", "alignmentAxis", "length", "mainAlignmentSide", "getOppositePlacement", "getExpandedPlacements", "oppositePlacement", "getOppositeAlignmentPlacement", "getSideList", "side", "isStart", "lr", "rl", "tb", "bt", "getOppositeAxisPlacements", "flipAlignment", "direction", "list", "expandPaddingObject", "padding", "getPaddingObject", "rectToClientRect", "rect", "computeCoordsFromPlacement", "_ref", "placement", "rtl", "reference", "floating", "sideAxis", "getSideAxis", "alignmentAxis", "getAlignmentAxis", "alignLength", "getAxisLength", "side", "getSide", "isVertical", "commonX", "commonY", "commonAlign", "coords", "getAlignment", "computePosition", "config", "strategy", "middleware", "platform", "validMiddleware", "rects", "x", "y", "statefulPlacement", "middlewareData", "resetCount", "i", "name", "fn", "nextX", "nextY", "data", "reset", "detectOverflow", "state", "options", "_await$platform$isEle", "elements", "boundary", "rootBoundary", "elementContext", "altBoundary", "padding", "evaluate", "paddingObject", "getPaddingObject", "element", "clippingClientRect", "rectToClientRect", "rect", "offsetParent", "offsetScale", "elementClientRect", "arrow", "axis", "length", "arrowDimensions", "isYAxis", "minProp", "maxProp", "clientProp", "endDiff", "startDiff", "arrowOffsetParent", "clientSize", "centerToReference", "largestPossiblePadding", "minPadding", "min", "maxPadding", "min$1", "max", "center", "offset", "clamp", "alignmentOffset", "flip", "options", "state", "_middlewareData$flip", "placement", "middlewareData", "rects", "initialPlacement", "platform", "elements", "checkMainAxis", "checkCrossAxis", "specifiedFallbackPlacements", "fallbackStrategy", "fallbackAxisSideDirection", "flipAlignment", "detectOverflowOptions", "evaluate", "side", "getSide", "isBasePlacement", "rtl", "fallbackPlacements", "getOppositePlacement", "getExpandedPlacements", "getOppositeAxisPlacements", "placements", "overflow", "detectOverflow", "overflows", "overflowsData", "sides", "getAlignmentSides", "_middlewareData$flip2", "_overflowsData$filter", "nextIndex", "nextPlacement", "resetPlacement", "d", "a", "b", "_overflowsData$map$so", "acc", "convertValueToCoords", "state", "options", "placement", "platform", "elements", "rtl", "side", "getSide", "alignment", "getAlignment", "isVertical", "getSideAxis", "mainAxisMulti", "crossAxisMulti", "rawValue", "evaluate", "mainAxis", "crossAxis", "alignmentAxis", "offset", "x", "y", "diffCoords", "shift", "checkMainAxis", "checkCrossAxis", "limiter", "_ref", "detectOverflowOptions", "coords", "overflow", "detectOverflow", "getOppositeAxis", "mainAxisCoord", "crossAxisCoord", "minSide", "maxSide", "min", "max", "clamp", "limitedCoords", "getNodeName", "node", "isNode", "getWindow", "_node$ownerDocument", "getDocumentElement", "_ref", "value", "isElement", "isHTMLElement", "isShadowRoot", "isOverflowElement", "element", "overflow", "overflowX", "overflowY", "display", "getComputedStyle", "isTableElement", "isContainingBlock", "webkit", "isWebKit", "css", "getContainingBlock", "currentNode", "getParentNode", "isLastTraversableNode", "getNodeScroll", "result", "getNearestOverflowAncestor", "parentNode", "getOverflowAncestors", "list", "_node$ownerDocument2", "scrollableAncestor", "isBody", "win", "getCssDimensions", "element", "css", "getComputedStyle", "width", "height", "hasOffset", "isHTMLElement", "offsetWidth", "offsetHeight", "shouldFallback", "round", "unwrapElement", "isElement", "getScale", "domElement", "createCoords", "rect", "$", "x", "y", "noOffsets", "getVisualOffsets", "win", "getWindow", "isWebKit", "shouldAddVisualOffsets", "isFixed", "floatingOffsetParent", "getBoundingClientRect", "includeScale", "isFixedStrategy", "offsetParent", "clientRect", "scale", "visualOffsets", "offsetWin", "currentIFrame", "iframeScale", "iframeRect", "left", "top", "rectToClientRect", "convertOffsetParentRelativeRectToViewportRelativeRect", "_ref", "strategy", "isOffsetParentAnElement", "documentElement", "getDocumentElement", "scroll", "offsets", "getNodeName", "isOverflowElement", "getNodeScroll", "offsetRect", "getClientRects", "getWindowScrollBarX", "getDocumentRect", "html", "body", "max", "getViewportRect", "visualViewport", "visualViewportBased", "getInnerBoundingClientRect", "getClientRectFromClippingAncestor", "clippingAncestor", "hasFixedPositionAncestor", "stopNode", "parentNode", "getParentNode", "isLastTraversableNode", "getClippingElementAncestors", "cache", "cachedResult", "result", "getOverflowAncestors", "el", "currentContainingBlockComputedStyle", "elementIsFixed", "currentNode", "computedStyle", "currentNodeIsContaining", "isContainingBlock", "ancestor", "getClippingRect", "boundary", "rootBoundary", "clippingAncestors", "firstClippingAncestor", "clippingRect", "accRect", "min", "getDimensions", "getRectRelativeToOffsetParent", "getTrueOffsetParent", "polyfill", "getOffsetParent", "window", "isTableElement", "getContainingBlock", "getElementRects", "reference", "floating", "getOffsetParentFn", "getDimensionsFn", "isRTL", "platform", "observeMove", "onMove", "io", "timeoutId", "root", "cleanup", "refresh", "skip", "threshold", "insetTop", "floor", "insetRight", "insetBottom", "insetLeft", "options", "isFirstUpdate", "handleObserve", "entries", "ratio", "autoUpdate", "update", "ancestorScroll", "ancestorResize", "elementResize", "layoutShift", "animationFrame", "referenceEl", "ancestors", "cleanupIo", "reobserveFrame", "resizeObserver", "firstEntry", "frameId", "prevRefRect", "frameLoop", "nextRefRect", "computePosition", "mergedOptions", "platformWithCache", "RoleTooltip", "BaseElement", "__publicField", "eventOrElement", "target", "_event", "base", "event", "i", "oldVal", "newVal", "x", "args", "changedProperties", "str", "listener", "el", "arrowEl", "placement", "autoUpdate", "computePosition", "offset", "flip", "shift", "arrow", "y", "middlewareData", "arrowX", "arrowY", "staticSide", "stringMap", "obj", "string", "key", "value", "isExactNodeActive", "state", "typeOrName", "attributes", "from", "to", "empty", "type", "getNodeType", "nodeRanges", "node", "pos", "relativeFrom", "relativeTo", "selectionRange", "matchedNodeRanges", "nodeRange", "objectIncludes", "sum", "TipTapEditor", "TipTapEditorBase", "translations", "e", "key", "metaKey", "ctrlKey", "isiOS", "linkDialogContainer", "composedPath", "linkButton", "toolbarButtonStyles", "RoleToolbar", "RoleTooltip", "el", "changedProperties", "rhinoAttachment", "rhinoPlaceholder", "icons_exports", "inputElement", "input", "href", "chain", "attachments", "x", "isDisabled", "isActive", "stringMap", "elementDisabled", "isExactNodeActive", "n", "element", "TipTapEditor"]
}
