{
  "version": 3,
  "sources": ["../../src/exports/elements/tip-tap-editor.ts", "../../src/internal/string-map.ts", "../../src/internal/is-exact-node-active.ts"],
  "sourcesContent": ["import { ref, createRef, Ref } from \"lit/directives/ref.js\";\nimport { toolbarButtonStyles } from \"../styles/editor.js\";\nimport { TipTapEditorBase } from \"./tip-tap-editor-base.js\";\nimport { PropertyDeclarations, PropertyValues, TemplateResult } from \"lit\";\n\n/** Imports <role-tooltip> and <role-toolbar> */\nimport RoleToolbar from \"role-components/exports/toolbar/toolbar.js\";\nimport RoleTooltip from \"role-components/exports/tooltip/tooltip.js\";\n\nimport { isiOS, translations } from \"../translations.js\";\n\n/** This will probably go away in favor of lazy loaded SVGs. */\nimport * as icons from \"../../internal/icons\";\nimport { Maybe } from \"../../types.js\";\nimport { html } from \"lit/html.js\";\nimport { stringMap } from \"../../internal/string-map.js\";\nimport { isExactNodeActive } from \"../../internal/is-exact-node-active.js\";\n\n/**\n * This is the meat and potatoes. This is the <rhino-editor> element you'll\n *   see. This is what wraps everything into 1 coherent element.\n * @slot toolbar - By replacing this, you're now making your own toolbar.\n * @slot toolbar-start\n *\n * ## bold\n * @slot before-bold-button\n * @slot bold-button\n * @slot after-bold-button\n\n * ## Italic\n * @slot before-italic-button\n * @slot italic-button\n * @slot after-italic-button\n\n * ## Strike\n * @slot before-strike-button\n * @slot strike-button\n * @slot after-strike-button\n\n * ## Link\n * @slot before-link-button\n * @slot link-button\n * @slot after-link-button\n\n * ## Heading\n * @slot before-heading-button\n * @slot heading-button\n * @slot after-heading-button\n\n * ## Blockquote\n * @slot before-blockquote-button\n * @slot blockquote-button\n * @slot after-blockquote-button\n\n * ## Code block\n * @slot before-code-block-button\n * @slot code-block-button\n * @slot after-code-block-button\n\n * ## Bullet List\n * @slot before-bullet-list-button\n * @slot bullet-list-button\n * @slot after-bullet-list-button\n\n * ## Ordered list\n * @slot before-ordered-list-button\n * @slot ordered-list-button\n * @slot after-ordered-list-button\n\n * ## Decrease Indentation\n * @slot before-decrease-indentation-button\n * @slot decrease-indentation-button\n * @slot after-decrease-indentation-button\n\n * ## Increase Indentation\n * @slot before-increase-indentation-button\n * @slot increase-indentation-button\n * @slot after-increase-indentation-button\n\n * ## Attachments\n * @slot before-attach-files-button\n * @slot attach-files-button\n * @slot after-attach-files-button\n\n * ## Undo\n * @slot before-undo-button\n * @slot undo-button\n * @slot after-undo-button\n\n * ## Redo\n * @slot before-redo-button\n * @slot redo-button\n * @slot after-redo-button\n * @slot toolbar-end\n */\nexport class TipTapEditor extends TipTapEditorBase {\n  static get styles() {\n    return TipTapEditorBase.styles.concat([toolbarButtonStyles]);\n  }\n\n  static get properties(): PropertyDeclarations {\n    return Object.assign(TipTapEditorBase.properties, {\n      linkDialogExpanded: { type: Boolean },\n      linkInputRef: { state: true },\n      translations: { state: true },\n      __invalidLink__: { state: true, type: Boolean },\n    });\n  }\n\n  /**\n   * Translations for various aspects of the editor.\n   */\n  translations = translations;\n\n  /**\n   * The <input> for inserting links\n   */\n  linkInputRef: Ref<HTMLInputElement> = createRef();\n\n  /**\n   * The dialog that contains the link input + link / unlink buttons\n   */\n  linkDialogExpanded: boolean = false;\n\n  private __invalidLink__: boolean = false;\n\n  /**\n   * @override\n   */\n  registerDependencies() {\n    super.registerDependencies();\n    [RoleToolbar, RoleTooltip].forEach((el) => el.define());\n  }\n\n  constructor() {\n    super();\n\n    this.starterKitOptions = Object.assign(this.starterKitOptions, {\n      rhinoPlaceholder: {\n        placeholder: this.translations.placeholder,\n      },\n      rhinoAttachment: {\n        fileUploadErrorMessage: this.translations.fileUploadErrorMessage,\n        captionPlaceholder: this.translations.captionPlaceholder,\n      },\n    }) as typeof this.starterKitOptions;\n\n    this.addEventListener(\"keydown\", this.handleKeyboardDialogToggle);\n  }\n\n  protected updated(changedProperties: PropertyValues<this>): void {\n    if (!this.hasInitialized) {\n      return super.updated(changedProperties);\n    }\n\n    if (changedProperties.has(\"translations\")) {\n      const { rhinoAttachment, rhinoPlaceholder } = this.starterKitOptions;\n\n      if (rhinoPlaceholder) {\n        rhinoPlaceholder.placeholder = this.translations.placeholder;\n      }\n\n      if (rhinoAttachment) {\n        rhinoAttachment.captionPlaceholder =\n          this.translations.captionPlaceholder;\n        rhinoAttachment.fileUploadErrorMessage =\n          this.translations.fileUploadErrorMessage;\n      }\n    }\n\n    return super.updated(changedProperties);\n  }\n\n  /**\n   * @override\n   */\n  async connectedCallback() {\n    super.connectedCallback();\n\n    await this.updateComplete;\n\n    if (this.editor) {\n      this.editor.on(\"focus\", this.closeLinkDialog);\n    }\n\n    document.addEventListener(\"click\", this.__handleLinkDialogClick);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener(\"click\", this.__handleLinkDialogClick);\n  }\n\n  get icons(): typeof icons {\n    return icons;\n  }\n\n  /** Closes the dialog for link previews */\n  handleKeyboardDialogToggle = (e: KeyboardEvent) => {\n    let { key, metaKey, ctrlKey } = e;\n\n    if (key == null) return;\n\n    key = key.toLowerCase();\n\n    if (key === \"escape\" && this.linkDialogExpanded) {\n      this.closeLinkDialog();\n      return;\n    }\n\n    const shortcutModifier = isiOS ? metaKey : ctrlKey;\n\n    if (key === \"k\" && shortcutModifier) {\n      this.showLinkDialog();\n    }\n  };\n\n  toggleLinkDialog(): void {\n    if (this.linkDialogExpanded) {\n      this.closeLinkDialog();\n      return;\n    }\n\n    this.showLinkDialog();\n  }\n\n  closeLinkDialog(): void {\n    if (this.linkDialog == null) return;\n\n    this.linkDialogExpanded = false;\n  }\n\n  showLinkDialog(): void {\n    if (this.linkDialog == null) return;\n\n    const inputElement = this.linkInputRef.value;\n\n    if (inputElement != null) {\n      inputElement.value = \"\";\n    }\n\n    this.__invalidLink__ = false;\n    this.linkDialogExpanded = true;\n    setTimeout(() => {\n      if (inputElement != null) inputElement.focus();\n    });\n  }\n\n  get linkDialog(): Maybe<HTMLDivElement> {\n    return this.shadowRoot?.querySelector<HTMLDivElement>(\"#link-dialog\");\n  }\n\n  attachFiles(): void {\n    const input = this.fileInputEl;\n\n    if (input == null) return;\n\n    input.click();\n  }\n\n  addLink(): void {\n    const inputElement = this.linkInputRef.value;\n\n    if (inputElement == null) return;\n\n    const href = inputElement.value;\n\n    try {\n      new URL(href);\n      inputElement.setCustomValidity(\"\");\n      this.__invalidLink__ = false;\n    } catch (error) {\n      inputElement.setCustomValidity(\"Not a valid URL\");\n      this.__invalidLink__ = true;\n      return;\n    }\n\n    if (href) {\n      this.closeLinkDialog();\n      inputElement.value = \"\";\n      const chain = this.editor\n        ?.chain()\n        .extendMarkRange(\"link\")\n        .setLink({ href });\n\n      if (chain && this.editor?.state.selection.empty) {\n        chain.insertContent(href);\n      }\n\n      if (chain) {\n        chain.run();\n      }\n    }\n  }\n\n  get fileInputEl(): Maybe<HTMLInputElement> {\n    return this.shadowRoot?.getElementById(\n      \"file-input\",\n    ) as Maybe<HTMLInputElement>;\n  }\n\n  async handleFileUpload(): Promise<void> {\n    const input = this.fileInputEl;\n    if (input == null) return;\n    if (input.files == null) return;\n\n    const attachments = await this.handleFiles(input.files);\n\n    if (attachments.length > 0) {\n      this.editor?.chain().focus().setAttachment(attachments).run();\n    }\n\n    input.value = \"\";\n  }\n\n  private get __tooltipExportParts() {\n    return \"base:toolbar__tooltip__base, arrow:toolbar__tooltip__arrow\";\n  }\n\n  renderBoldButton() {\n    const boldEnabled = Boolean(this.editor?.commands.toggleBold);\n\n    if (!boldEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().toggleBold();\n    const isActive = Boolean(this.editor?.isActive(\"bold\"));\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--bold\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"bold\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${async (e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) return;\n          this.editor?.chain().focus().toggleBold().run();\n        }}\n      >\n        <slot name=\"bold-tooltip\">\n          <role-tooltip\n            id=\"bold\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--bold\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.bold}\n          </role-tooltip>\n        </slot>\n        <slot name=\"bold-icon\">${this.icons.bold}</slot>\n      </button>\n    `;\n  }\n\n  renderItalicButton() {\n    const italicEnabled = Boolean(this.editor?.commands.toggleItalic);\n\n    if (!italicEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"italic\"));\n    const isDisabled = this.editor == null || !this.editor.can().toggleItalic();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--italic\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"italics\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleItalic().run();\n        }}\n      >\n        <slot name=\"italics-tooltip\">\n          <role-tooltip\n            id=\"italics\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--italics\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.italics}\n          </role-tooltip>\n        </slot>\n        <slot name=\"italics-icon\"> ${this.icons.italics} </slot>\n      </button>\n    `;\n  }\n\n  renderStrikeButton() {\n    const strikeEnabled = Boolean(this.editor?.commands.toggleStrike);\n\n    if (!strikeEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"rhino-strike\"));\n    const isDisabled = this.editor == null || !this.editor.can().toggleStrike();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--strike\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"strike\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleStrike().run();\n        }}\n      >\n        <slot name=\"strike-tooltip\">\n          <role-tooltip\n            id=\"strike\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--strike\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.strike}\n          </role-tooltip>\n        </slot>\n        <slot name=\"strike-icon\">${this.icons.strike}</slot>\n      </button>\n    `;\n  }\n\n  renderLinkButton() {\n    const linkEnabled = Boolean(this.editor?.commands.setLink);\n\n    if (!linkEnabled) return html``;\n\n    const isActive = Boolean(this.linkDialogExpanded);\n    const isDisabled =\n      this.editor == null || !this.editor.can().setLink({ href: \"\" });\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--link\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"link\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        aria-controls=\"link-dialog\"\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (this.editor == null) return;\n          if (elementDisabled(e.currentTarget)) return;\n\n          this.toggleLinkDialog();\n        }}\n      >\n        <slot name=\"link-tooltip\">\n          <role-tooltip\n            id=\"link\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--link\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.link}\n          </role-tooltip>\n        </slot>\n        <slot name=\"link-icon\">${this.icons.link}</slot>\n      </button>\n    `;\n  }\n\n  renderHeadingButton() {\n    const headingEnabled = Boolean(this.editor?.commands.toggleHeading);\n\n    if (!headingEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"heading\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleHeading({ level: 1 });\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--heading\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"heading\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleHeading({ level: 1 }).run();\n        }}\n      >\n        <slot name=\"heading-tooltip\">\n          <role-tooltip\n            id=\"heading\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--heading\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.heading}\n          </role-tooltip>\n        </slot>\n        <slot name=\"heading-icon\">${this.icons.heading}</slot>\n      </button>\n    `;\n  }\n\n  renderBlockquoteButton() {\n    const blockQuoteEnabled = Boolean(this.editor?.commands.toggleBlockquote);\n\n    if (!blockQuoteEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"blockquote\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleBlockquote();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--blockquote\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"blockquote\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleBlockquote().run();\n        }}\n      >\n        <slot name=\"blockquote-tooltip\">\n          <role-tooltip\n            id=\"blockquote\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--blockquote\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.blockQuote}\n          </role-tooltip>\n        </slot>\n        <slot name=\"blockquote-icon\">${this.icons.blockQuote}</slot>\n      </button>\n    `;\n  }\n\n  renderCodeBlockButton() {\n    const codeBlockEnabled = Boolean(this.editor?.commands.toggleCodeBlock);\n\n    if (!codeBlockEnabled) return html``;\n\n    const isActive = Boolean(this.editor?.isActive(\"codeBlock\"));\n    const isDisabled =\n      this.editor == null || !this.editor.can().toggleCodeBlock();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--code-block\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"code-block\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleCodeBlock().run();\n        }}\n      >\n        <slot name=\"code-block-tooltip\">\n          <role-tooltip\n            id=\"code-block\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--code-block\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.codeBlock}\n          </role-tooltip>\n        </slot>\n        <slot name=\"code-block-icon\">${this.icons.codeBlock}</slot>\n      </button>\n    `;\n  }\n\n  renderBulletListButton() {\n    const bulletListEnabled = Boolean(this.editor?.commands.toggleBulletList);\n\n    if (!bulletListEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null ||\n      !(\n        this.editor.can().toggleOrderedList?.() ||\n        this.editor.can().toggleBulletList()\n      );\n\n    const isActive = Boolean(\n      this.editor != null && isExactNodeActive(this.editor.state, \"bulletList\"),\n    );\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--bullet-list\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"bullet-list\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().toggleBulletList().run();\n        }}\n      >\n        <slot name=\"bullet-list-tooltip\">\n          <role-tooltip\n            id=\"bullet-list\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--bullet-list\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.bulletList}\n          </role-tooltip>\n        </slot>\n        <slot name=\"bullet-list-icon\">${this.icons.bulletList}</slot>\n      </button>\n    `;\n  }\n\n  renderOrderedListButton() {\n    const orderedListEnabled = Boolean(this.editor?.commands.toggleOrderedList);\n\n    if (!orderedListEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null ||\n      !(\n        this.editor.can().toggleOrderedList() ||\n        this.editor.can().toggleBulletList?.()\n      );\n\n    const isActive = Boolean(\n      this.editor != null &&\n        isExactNodeActive(this.editor.state, \"orderedList\"),\n    );\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--ordered-list\": true,\n          \"toolbar__button--active\": isActive,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"ordered-list\"\n        aria-disabled=${isDisabled}\n        aria-pressed=${isActive}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n\n          this.editor?.chain().focus().toggleOrderedList().run();\n        }}\n      >\n        <slot name=\"ordered-list-tooltip\">\n          <role-tooltip\n            id=\"ordered-list\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--ordered-list\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.orderedList}\n          </role-tooltip>\n        </slot>\n        <slot name=\"ordered-list-icon\">${this.icons.orderedList}</slot>\n      </button>\n    `;\n  }\n\n  renderAttachmentButton() {\n    const attachmentEnabled = Boolean(this.editor?.commands.setAttachment);\n\n    if (!attachmentEnabled) return html``;\n\n    const isDisabled = this.editor == null;\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--attach-files\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"attach-files\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${this.attachFiles}\n      >\n        <slot name=\"attach-files-tooltip\">\n          <role-tooltip\n            id=\"attach-files\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--attach-files\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.attachFiles}\n          </role-tooltip>\n        </slot>\n        <slot name=\"attach-files-icon\">${this.icons.attachFiles}</slot>\n\n        <!-- @TODO: Write documentation. Hookup onchange to the slotted elements? -->\n        <slot name=\"attach-files-input\">\n          <input\n            id=\"file-input\"\n            type=\"file\"\n            hidden\n            multiple\n            accept=${this.accept || \"*\"}\n            @change=${this.handleFileUpload}\n          />\n        </slot>\n      </button>\n    `;\n  }\n\n  renderUndoButton() {\n    const undoEnabled = Boolean(this.editor?.commands.undo);\n\n    if (!undoEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().undo();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--undo\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"undo\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().undo().run();\n        }}\n      >\n        <slot name=\"undo-tooltip\">\n          <role-tooltip\n            id=\"undo\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--undo\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.undo}\n          </role-tooltip>\n        </slot>\n        <slot name=\"undo-icon\">${this.icons.undo}</slot>\n      </button>\n    `;\n  }\n\n  renderDecreaseIndentation() {\n    // Decrease / increase indentation are special cases in that they rely on built-in editor\n    // commands and not commands added by extensions.\n    const decreaseIndentationNotEnabled =\n      this.starterKitOptions.decreaseIndentation == false;\n\n    if (decreaseIndentationNotEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null || !this.editor.can().liftListItem(\"listItem\");\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--decrease-indentation\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"decrease-indentation\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().liftListItem(\"listItem\").run();\n        }}\n      >\n        <slot name=\"decrease-indentation-tooltip\">\n          <role-tooltip\n            id=\"decrease-indentation\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--decrease-indentation\"\n          >\n            ${this.translations.decreaseIndentation}\n          </role-tooltip>\n        </slot>\n        <slot name=\"decrease-indentation\"\n          >${this.icons.decreaseIndentation}</slot\n        >\n      </button>\n    `;\n  }\n\n  renderIncreaseIndentation() {\n    const increaseIndentationNotEnabled =\n      this.starterKitOptions.increaseIndentation == false;\n\n    if (increaseIndentationNotEnabled) return html``;\n\n    const isDisabled =\n      this.editor == null || !this.editor.can().sinkListItem(\"listItem\");\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        type=\"button\"\n        tabindex=\"-1\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--increase-indentation\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"increase-indentation\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().sinkListItem(\"listItem\").run();\n        }}\n      >\n        <slot name=\"increase-indentation-tooltip\">\n          <role-tooltip\n            id=\"increase-indentation\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--increase-indentation\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.increaseIndentation}\n          </role-tooltip>\n        </slot>\n        <slot name=\"increase-indentation\"\n          >${this.icons.increaseIndentation}</slot\n        >\n      </button>\n    `;\n  }\n\n  renderRedoButton() {\n    const redoEnabled = Boolean(this.editor?.commands.redo);\n\n    if (!redoEnabled) return html``;\n\n    const isDisabled = this.editor == null || !this.editor.can().redo?.();\n\n    return html`\n      <button\n        class=\"toolbar__button rhino-toolbar-button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        part=${stringMap({\n          toolbar__button: true,\n          \"toolbar__button--redo\": true,\n          \"toolbar__button--disabled\": isDisabled,\n        })}\n        aria-describedby=\"redo\"\n        aria-disabled=${isDisabled}\n        data-role=\"toolbar-item\"\n        @click=${(e: MouseEvent) => {\n          if (elementDisabled(e.currentTarget)) {\n            return;\n          }\n          this.editor?.chain().focus().redo().run();\n        }}\n      >\n        <slot name=\"redo-tooltip\">\n          <role-tooltip\n            id=\"redo\"\n            hoist\n            part=\"toolbar__tooltip toolbar__tooltip--redo\"\n            exportparts=${this.__tooltipExportParts}\n          >\n            ${this.translations.redo}\n          </role-tooltip>\n        </slot>\n        <slot name=\"redo-icon\">${this.icons.redo}</slot>\n      </button>\n    `;\n  }\n\n  renderToolbarStart() {\n    return html``;\n  }\n\n  renderToolbarEnd() {\n    return html``;\n  }\n\n  renderToolbar() {\n    if (this.readonly) return html``;\n\n    return html`\n      <slot name=\"toolbar\">\n        <role-toolbar\n          class=\"toolbar\"\n          part=\"toolbar\"\n          role=\"toolbar\"\n          exportparts=\"base:toolbar__base\"\n        >\n          <slot name=\"toolbar-start\">${this.renderToolbarStart()}</slot>\n\n          <!-- Bold -->\n          <slot name=\"before-bold-button\"></slot>\n          <slot name=\"bold-button\">${this.renderBoldButton()}</slot>\n          <slot name=\"after-bold-button\"></slot>\n\n          <!-- Italic -->\n          <slot name=\"before-italic-button\"></slot>\n          <slot name=\"italic-button\">${this.renderItalicButton()}</slot>\n          <slot name=\"after-italic-button\"></slot>\n\n          <!-- Strike -->\n          <slot name=\"before-strike-button\"></slot>\n          <slot name=\"strike-button\">${this.renderStrikeButton()}</slot>\n          <slot name=\"after-strike-button\"></slot>\n\n          <!-- Link -->\n          <slot name=\"before-link-button\"></slot>\n          <slot name=\"link-button\">${this.renderLinkButton()}</slot>\n          <slot name=\"after-link-button\"></slot>\n\n          <!-- Heading -->\n          <slot name=\"before-heading-button\"></slot>\n          <slot name=\"heading-button\">${this.renderHeadingButton()}</slot>\n          <slot name=\"after-heading-button\"></slot>\n\n          <!-- Blockquote -->\n          <slot name=\"before-blockquote-button\"></slot>\n          <slot name=\"blockquote-button\">${this.renderBlockquoteButton()}</slot>\n          <slot name=\"after-blockquote-button\"></slot>\n\n          <!-- Code block -->\n          <slot name=\"before-code-block-button\"></slot>\n          <slot name=\"code-block-button\">${this.renderCodeBlockButton()}</slot>\n          <slot name=\"after-code-block-button\"></slot>\n\n          <!-- Bullet List -->\n          <slot name=\"before-bullet-list-button\"></slot>\n          <slot name=\"bullet-list-button\"\n            >${this.renderBulletListButton()}</slot\n          >\n          <slot name=\"after-bullet-list-button\"></slot>\n\n          <!-- Ordered list -->\n          <slot name=\"before-ordered-list-button\"></slot>\n          <slot name=\"ordered-list-button\">\n            ${this.renderOrderedListButton()}\n          </slot>\n          <slot name=\"after-ordered-list-button\"></slot>\n\n          <slot name=\"before-decrease-indentation-button\"></slot>\n          <slot name=\"decrease-indentation-button\"\n            >${this.renderDecreaseIndentation()}</slot\n          >\n          <slot name=\"after-decrease-indentation-button\"></slot>\n\n          <slot name=\"before-increase-indentation-button\"></slot>\n          <slot name=\"increase-indentation-button\"\n            >${this.renderIncreaseIndentation()}</slot\n          >\n          <slot name=\"after-increase-indentation-button\"></slot>\n\n          <!-- Attachments -->\n          <slot name=\"before-attach-files-button\"></slot>\n          <slot name=\"attach-files-button\"\n            >${this.renderAttachmentButton()}</slot\n          >\n          <slot name=\"after-attach-files-button\"></slot>\n\n          <!-- Undo -->\n          <slot name=\"before-undo-button\"></slot>\n          <!-- @ts-expect-error -->\n          <slot name=\"undo-button\"> ${this.renderUndoButton()} </slot>\n          <slot name=\"after-undo-button\"></slot>\n\n          <!-- Redo -->\n          <slot name=\"before-redo-button\"></slot>\n          <slot name=\"redo-button\"> ${this.renderRedoButton()} </slot>\n          <slot name=\"after-redo-button\"></slot>\n\n          <slot name=\"toolbar-end\">${this.renderToolbarEnd()}</slot>\n        </role-toolbar>\n      </slot>\n    `;\n  }\n\n  /**\n   * @private\n   */\n  private __handleLinkDialogClick = (e: Event) => {\n    const linkDialogContainer = this.shadowRoot?.querySelector(\n      \".link-dialog__container\",\n    );\n\n    if (!linkDialogContainer) {\n      this.linkDialogExpanded = false;\n      return;\n    }\n\n    const composedPath = e.composedPath();\n\n    const linkButton = this.shadowRoot?.querySelector(\"[name='link-button']\");\n\n    if (composedPath.includes(linkDialogContainer as EventTarget)) {\n      return;\n    }\n\n    if (linkButton && composedPath.includes(linkButton as EventTarget)) {\n      return;\n    }\n\n    this.linkDialogExpanded = false;\n  };\n\n  /** @TODO: Lets think of a more friendly way to render dialogs for users to extend. */\n  renderDialog(): TemplateResult {\n    if (this.readonly) {\n      return html``;\n    }\n\n    return html` <div\n      id=\"link-dialog\"\n      class=\"link-dialog\"\n      part=\"link-dialog\"\n      ?hidden=${!this.linkDialogExpanded}\n    >\n      <div class=\"link-dialog__container\" part=\"link-dialog__container\">\n        <input\n          id=\"link-dialog__input\"\n          class=${`link-dialog__input ${\n            this.__invalidLink__ ? \"link-validate\" : \"\"\n          }`}\n          part=${`link-dialog__input ${\n            this.__invalidLink__ ? \"link-dialog__input--invalid\" : \"\"\n          }`}\n          type=\"text\"\n          placeholder=\"Enter a URL...\"\n          aria-label=\"Enter a URL\"\n          required\n          type=\"url\"\n          ${ref(this.linkInputRef)}\n          @input=${() => {\n            const inputElement = this.linkInputRef.value;\n            if (inputElement == null) return;\n\n            inputElement.setCustomValidity(\"\");\n            this.__invalidLink__ = false;\n          }}\n          @blur=${() => {\n            const inputElement = this.linkInputRef.value;\n\n            if (inputElement == null) return;\n\n            this.__invalidLink__ = false;\n            // inputElement.value = \"\"\n          }}\n          @keydown=${(e: KeyboardEvent) => {\n            if (e.key?.toLowerCase() === \"enter\") {\n              e.preventDefault();\n              this.addLink();\n            }\n          }}\n        />\n        <div class=\"link-dialog__buttons\" part=\"link-dialog__buttons\">\n          <button\n            class=\"rhino-toolbar-button link-dialog__button\"\n            part=\"link-dialog__button link-dialog__button--link\"\n            @click=${this.addLink}\n          >\n            ${this.translations.linkDialogLink}\n          </button>\n          <button\n            class=\"rhino-toolbar-button link-dialog__button\"\n            part=\"link-dialog__button link-dialog__button--unlink\"\n            @click=${() => {\n              this.editor\n                ?.chain()\n                .focus()\n                .extendMarkRange(\"link\")\n                .unsetLink()\n                .run();\n            }}\n          >\n            ${this.translations.linkDialogUnlink}\n          </button>\n        </div>\n      </div>\n    </div>`;\n  }\n}\n\nfunction elementDisabled(element: null | EventTarget | Element): boolean {\n  if (element == null) return true;\n  if (!(\"getAttribute\" in element)) return true;\n\n  return (\n    element.getAttribute(\"aria-disabled\") === \"true\" ||\n    element.hasAttribute(\"disabled\")\n  );\n}\n", "export function stringMap(\n  obj: Record<string, string | null | undefined | boolean>,\n): string {\n  let string = \"\";\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (value) {\n      string += `${key} `;\n    }\n  }\n\n  return string;\n}\n", "import { NodeType } from \"@tiptap/pm/model\";\nimport { EditorState } from \"@tiptap/pm/state\";\n\nimport { NodeRange, objectIncludes, getNodeType } from \"@tiptap/core\";\n\n// https://github.com/ueberdosis/tiptap/issues/4190\nexport function isExactNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection;\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\n\n  const nodeRanges: NodeRange[] = [];\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return;\n    }\n\n    const relativeFrom = Math.max(from, pos);\n    const relativeTo = Math.min(to, pos + node.nodeSize);\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    });\n  });\n\n  const selectionRange = to - from;\n\n  /******\n    This is modified from \"isActive\".\n    https://github.com/ueberdosis/tiptap/issues/4190#issuecomment-1636209809\n  *****/\n  const matchedNodeRanges = nodeRanges\n    .slice(-3) // here is the change\n    .filter((nodeRange) => {\n      if (!type) {\n        return true;\n      }\n\n      return type.name === nodeRange.node.type.name;\n    })\n    .filter((nodeRange) =>\n      objectIncludes(nodeRange.node.attrs, attributes, { strict: false }),\n    );\n  /** END MODIFICATION **/\n\n  if (empty) {\n    return !!matchedNodeRanges.length;\n  }\n\n  const range = matchedNodeRanges.reduce(\n    (sum, nodeRange) => sum + nodeRange.to - nodeRange.from,\n    0,\n  );\n\n  return range >= selectionRange;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA,SAAS,KAAK,iBAAsB;AAMpC,OAAO,iBAAiB;AACxB,OAAO,iBAAiB;AAOxB,SAAS,YAAY;;;ACdd,SAAS,UACd,KACQ;AACR,MAAI,SAAS;AAEb,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC9C,QAAI,OAAO;AACT,gBAAU,GAAG,GAAG;AAAA,IAClB;AAAA,EACF;AAEA,SAAO;AACT;;;ACTA,SAAoB,gBAAgB,mBAAmB;AAGhD,SAAS,kBACd,OACA,YACA,aAAkC,CAAC,GAC1B;AACT,QAAM,EAAE,MAAM,IAAI,MAAM,IAAI,MAAM;AAClC,QAAM,OAAO,aAAa,YAAY,YAAY,MAAM,MAAM,IAAI;AAElE,QAAM,aAA0B,CAAC;AAEjC,QAAM,IAAI,aAAa,MAAM,IAAI,CAAC,MAAM,QAAQ;AAC9C,QAAI,KAAK,QAAQ;AACf;AAAA,IACF;AAEA,UAAM,eAAe,KAAK,IAAI,MAAM,GAAG;AACvC,UAAM,aAAa,KAAK,IAAI,IAAI,MAAM,KAAK,QAAQ;AAEnD,eAAW,KAAK;AAAA,MACd;AAAA,MACA,MAAM;AAAA,MACN,IAAI;AAAA,IACN,CAAC;AAAA,EACH,CAAC;AAED,QAAM,iBAAiB,KAAK;AAM5B,QAAM,oBAAoB,WACvB,MAAM,EAAE,EACR,OAAO,CAAC,cAAc;AACrB,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,SAAS,UAAU,KAAK,KAAK;AAAA,EAC3C,CAAC,EACA;AAAA,IAAO,CAAC,cACP,eAAe,UAAU,KAAK,OAAO,YAAY,EAAE,QAAQ,MAAM,CAAC;AAAA,EACpE;AAGF,MAAI,OAAO;AACT,WAAO,CAAC,CAAC,kBAAkB;AAAA,EAC7B;AAEA,QAAM,QAAQ,kBAAkB;AAAA,IAC9B,CAAC,KAAK,cAAc,MAAM,UAAU,KAAK,UAAU;AAAA,IACnD;AAAA,EACF;AAEA,SAAO,SAAS;AAClB;;;AFkCO,IAAM,eAAN,cAA2B,iBAAiB;AAAA,EAuCjD,cAAc;AACZ,UAAM;AAvBR;AAAA;AAAA;AAAA,wBAAe;AAKf;AAAA;AAAA;AAAA,wBAAsC,UAAU;AAKhD;AAAA;AAAA;AAAA,8BAA8B;AAE9B,SAAQ,kBAA2B;AA0EnC;AAAA,sCAA6B,CAAC,MAAqB;AACjD,UAAI,EAAE,KAAK,SAAS,QAAQ,IAAI;AAEhC,UAAI,OAAO;AAAM;AAEjB,YAAM,IAAI,YAAY;AAEtB,UAAI,QAAQ,YAAY,KAAK,oBAAoB;AAC/C,aAAK,gBAAgB;AACrB;AAAA,MACF;AAEA,YAAM,mBAAmB,QAAQ,UAAU;AAE3C,UAAI,QAAQ,OAAO,kBAAkB;AACnC,aAAK,eAAe;AAAA,MACtB;AAAA,IACF;AAm2BA;AAAA;AAAA;AAAA,SAAQ,0BAA0B,CAAC,MAAa;AAC9C,YAAM,sBAAsB,KAAK,YAAY;AAAA,QAC3C;AAAA,MACF;AAEA,UAAI,CAAC,qBAAqB;AACxB,aAAK,qBAAqB;AAC1B;AAAA,MACF;AAEA,YAAM,eAAe,EAAE,aAAa;AAEpC,YAAM,aAAa,KAAK,YAAY,cAAc,sBAAsB;AAExE,UAAI,aAAa,SAAS,mBAAkC,GAAG;AAC7D;AAAA,MACF;AAEA,UAAI,cAAc,aAAa,SAAS,UAAyB,GAAG;AAClE;AAAA,MACF;AAEA,WAAK,qBAAqB;AAAA,IAC5B;AAx8BE,SAAK,oBAAoB,OAAO,OAAO,KAAK,mBAAmB;AAAA,MAC7D,kBAAkB;AAAA,QAChB,aAAa,KAAK,aAAa;AAAA,MACjC;AAAA,MACA,iBAAiB;AAAA,QACf,wBAAwB,KAAK,aAAa;AAAA,QAC1C,oBAAoB,KAAK,aAAa;AAAA,MACxC;AAAA,IACF,CAAC;AAED,SAAK,iBAAiB,WAAW,KAAK,0BAA0B;AAAA,EAClE;AAAA,EApDA,WAAW,SAAS;AAClB,WAAO,iBAAiB,OAAO,OAAO,CAAC,mBAAmB,CAAC;AAAA,EAC7D;AAAA,EAEA,WAAW,aAAmC;AAC5C,WAAO,OAAO,OAAO,iBAAiB,YAAY;AAAA,MAChD,oBAAoB,EAAE,MAAM,QAAQ;AAAA,MACpC,cAAc,EAAE,OAAO,KAAK;AAAA,MAC5B,cAAc,EAAE,OAAO,KAAK;AAAA,MAC5B,iBAAiB,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,IAChD,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAsBA,uBAAuB;AACrB,UAAM,qBAAqB;AAC3B,KAAC,aAAa,WAAW,EAAE,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;AAAA,EACxD;AAAA,EAkBU,QAAQ,mBAA+C;AAC/D,QAAI,CAAC,KAAK,gBAAgB;AACxB,aAAO,MAAM,QAAQ,iBAAiB;AAAA,IACxC;AAEA,QAAI,kBAAkB,IAAI,cAAc,GAAG;AACzC,YAAM,EAAE,iBAAiB,iBAAiB,IAAI,KAAK;AAEnD,UAAI,kBAAkB;AACpB,yBAAiB,cAAc,KAAK,aAAa;AAAA,MACnD;AAEA,UAAI,iBAAiB;AACnB,wBAAgB,qBACd,KAAK,aAAa;AACpB,wBAAgB,yBACd,KAAK,aAAa;AAAA,MACtB;AAAA,IACF;AAEA,WAAO,MAAM,QAAQ,iBAAiB;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,oBAAoB;AACxB,UAAM,kBAAkB;AAExB,UAAM,KAAK;AAEX,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO,GAAG,SAAS,KAAK,eAAe;AAAA,IAC9C;AAEA,aAAS,iBAAiB,SAAS,KAAK,uBAAuB;AAAA,EACjE;AAAA,EAEA,uBAAuB;AACrB,UAAM,qBAAqB;AAC3B,aAAS,oBAAoB,SAAS,KAAK,uBAAuB;AAAA,EACpE;AAAA,EAEA,IAAI,QAAsB;AACxB,WAAO;AAAA,EACT;AAAA,EAsBA,mBAAyB;AACvB,QAAI,KAAK,oBAAoB;AAC3B,WAAK,gBAAgB;AACrB;AAAA,IACF;AAEA,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,kBAAwB;AACtB,QAAI,KAAK,cAAc;AAAM;AAE7B,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EAEA,iBAAuB;AACrB,QAAI,KAAK,cAAc;AAAM;AAE7B,UAAM,eAAe,KAAK,aAAa;AAEvC,QAAI,gBAAgB,MAAM;AACxB,mBAAa,QAAQ;AAAA,IACvB;AAEA,SAAK,kBAAkB;AACvB,SAAK,qBAAqB;AAC1B,eAAW,MAAM;AACf,UAAI,gBAAgB;AAAM,qBAAa,MAAM;AAAA,IAC/C,CAAC;AAAA,EACH;AAAA,EAEA,IAAI,aAAoC;AACtC,WAAO,KAAK,YAAY,cAA8B,cAAc;AAAA,EACtE;AAAA,EAEA,cAAoB;AAClB,UAAM,QAAQ,KAAK;AAEnB,QAAI,SAAS;AAAM;AAEnB,UAAM,MAAM;AAAA,EACd;AAAA,EAEA,UAAgB;AACd,UAAM,eAAe,KAAK,aAAa;AAEvC,QAAI,gBAAgB;AAAM;AAE1B,UAAM,OAAO,aAAa;AAE1B,QAAI;AACF,UAAI,IAAI,IAAI;AACZ,mBAAa,kBAAkB,EAAE;AACjC,WAAK,kBAAkB;AAAA,IACzB,SAAS,OAAO;AACd,mBAAa,kBAAkB,iBAAiB;AAChD,WAAK,kBAAkB;AACvB;AAAA,IACF;AAEA,QAAI,MAAM;AACR,WAAK,gBAAgB;AACrB,mBAAa,QAAQ;AACrB,YAAM,QAAQ,KAAK,QACf,MAAM,EACP,gBAAgB,MAAM,EACtB,QAAQ,EAAE,KAAK,CAAC;AAEnB,UAAI,SAAS,KAAK,QAAQ,MAAM,UAAU,OAAO;AAC/C,cAAM,cAAc,IAAI;AAAA,MAC1B;AAEA,UAAI,OAAO;AACT,cAAM,IAAI;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAI,cAAuC;AACzC,WAAO,KAAK,YAAY;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,mBAAkC;AACtC,UAAM,QAAQ,KAAK;AACnB,QAAI,SAAS;AAAM;AACnB,QAAI,MAAM,SAAS;AAAM;AAEzB,UAAM,cAAc,MAAM,KAAK,YAAY,MAAM,KAAK;AAEtD,QAAI,YAAY,SAAS,GAAG;AAC1B,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,cAAc,WAAW,EAAE,IAAI;AAAA,IAC9D;AAEA,UAAM,QAAQ;AAAA,EAChB;AAAA,EAEA,IAAY,uBAAuB;AACjC,WAAO;AAAA,EACT;AAAA,EAEA,mBAAmB;AACjB,UAAM,cAAc,QAAQ,KAAK,QAAQ,SAAS,UAAU;AAE5D,QAAI,CAAC;AAAa,aAAO;AAEzB,UAAM,aAAa,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,WAAW;AACxE,UAAM,WAAW,QAAQ,KAAK,QAAQ,SAAS,MAAM,CAAC;AAEtD,WAAO;AAAA;AAAA;AAAA;AAAA,eAII,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,OAAO,MAAkB;AAChC,UAAI,gBAAgB,EAAE,aAAa;AAAG;AACtC,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI;AAAA,IAChD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,IAAI;AAAA;AAAA;AAAA,iCAGH,KAAK,MAAM,IAAI;AAAA;AAAA;AAAA,EAG9C;AAAA,EAEA,qBAAqB;AACnB,UAAM,gBAAgB,QAAQ,KAAK,QAAQ,SAAS,YAAY;AAEhE,QAAI,CAAC;AAAe,aAAO;AAE3B,UAAM,WAAW,QAAQ,KAAK,QAAQ,SAAS,QAAQ,CAAC;AACxD,UAAM,aAAa,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,aAAa;AAE1E,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AAEA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI;AAAA,IAClD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,OAAO;AAAA;AAAA;AAAA,qCAGF,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA,EAGrD;AAAA,EAEA,qBAAqB;AACnB,UAAM,gBAAgB,QAAQ,KAAK,QAAQ,SAAS,YAAY;AAEhE,QAAI,CAAC;AAAe,aAAO;AAE3B,UAAM,WAAW,QAAQ,KAAK,QAAQ,SAAS,cAAc,CAAC;AAC9D,UAAM,aAAa,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,aAAa;AAE1E,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI;AAAA,IAClD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,MAAM;AAAA;AAAA;AAAA,mCAGH,KAAK,MAAM,MAAM;AAAA;AAAA;AAAA,EAGlD;AAAA,EAEA,mBAAmB;AACjB,UAAM,cAAc,QAAQ,KAAK,QAAQ,SAAS,OAAO;AAEzD,QAAI,CAAC;AAAa,aAAO;AAEzB,UAAM,WAAW,QAAQ,KAAK,kBAAkB;AAChD,UAAM,aACJ,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,QAAQ,EAAE,MAAM,GAAG,CAAC;AAEhE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA;AAAA,iBAGd,CAAC,MAAkB;AAC1B,UAAI,KAAK,UAAU;AAAM;AACzB,UAAI,gBAAgB,EAAE,aAAa;AAAG;AAEtC,WAAK,iBAAiB;AAAA,IACxB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,IAAI;AAAA;AAAA;AAAA,iCAGH,KAAK,MAAM,IAAI;AAAA;AAAA;AAAA,EAG9C;AAAA,EAEA,sBAAsB;AACpB,UAAM,iBAAiB,QAAQ,KAAK,QAAQ,SAAS,aAAa;AAElE,QAAI,CAAC;AAAgB,aAAO;AAE5B,UAAM,WAAW,QAAQ,KAAK,QAAQ,SAAS,SAAS,CAAC;AACzD,UAAM,aACJ,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC;AAEtE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,4BAA4B;AAAA,MAC5B,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AAEA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI;AAAA,IAC/D,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,OAAO;AAAA;AAAA;AAAA,oCAGH,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA,EAGpD;AAAA,EAEA,yBAAyB;AACvB,UAAM,oBAAoB,QAAQ,KAAK,QAAQ,SAAS,gBAAgB;AAExE,QAAI,CAAC;AAAmB,aAAO;AAE/B,UAAM,WAAW,QAAQ,KAAK,QAAQ,SAAS,YAAY,CAAC;AAC5D,UAAM,aACJ,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,iBAAiB;AAE7D,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,+BAA+B;AAAA,MAC/B,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AAEA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE,IAAI;AAAA,IACtD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,UAAU;AAAA;AAAA;AAAA,uCAGH,KAAK,MAAM,UAAU;AAAA;AAAA;AAAA,EAG1D;AAAA,EAEA,wBAAwB;AACtB,UAAM,mBAAmB,QAAQ,KAAK,QAAQ,SAAS,eAAe;AAEtE,QAAI,CAAC;AAAkB,aAAO;AAE9B,UAAM,WAAW,QAAQ,KAAK,QAAQ,SAAS,WAAW,CAAC;AAC3D,UAAM,aACJ,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,gBAAgB;AAE5D,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,+BAA+B;AAAA,MAC/B,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,IAAI;AAAA,IACrD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,SAAS;AAAA;AAAA;AAAA,uCAGF,KAAK,MAAM,SAAS;AAAA;AAAA;AAAA,EAGzD;AAAA,EAEA,yBAAyB;AACvB,UAAM,oBAAoB,QAAQ,KAAK,QAAQ,SAAS,gBAAgB;AAExE,QAAI,CAAC;AAAmB,aAAO;AAE/B,UAAM,aACJ,KAAK,UAAU,QACf,EACE,KAAK,OAAO,IAAI,EAAE,oBAAoB,KACtC,KAAK,OAAO,IAAI,EAAE,iBAAiB;AAGvC,UAAM,WAAW;AAAA,MACf,KAAK,UAAU,QAAQ,kBAAkB,KAAK,OAAO,OAAO,YAAY;AAAA,IAC1E;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,gCAAgC;AAAA,MAChC,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE,IAAI;AAAA,IACtD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,UAAU;AAAA;AAAA;AAAA,wCAGF,KAAK,MAAM,UAAU;AAAA;AAAA;AAAA,EAG3D;AAAA,EAEA,0BAA0B;AACxB,UAAM,qBAAqB,QAAQ,KAAK,QAAQ,SAAS,iBAAiB;AAE1E,QAAI,CAAC;AAAoB,aAAO;AAEhC,UAAM,aACJ,KAAK,UAAU,QACf,EACE,KAAK,OAAO,IAAI,EAAE,kBAAkB,KACpC,KAAK,OAAO,IAAI,EAAE,mBAAmB;AAGzC,UAAM,WAAW;AAAA,MACf,KAAK,UAAU,QACb,kBAAkB,KAAK,OAAO,OAAO,aAAa;AAAA,IACtD;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,iCAAiC;AAAA,MACjC,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA,uBACX,QAAQ;AAAA;AAAA,iBAEd,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AAEA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,IAAI;AAAA,IACvD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,WAAW;AAAA;AAAA;AAAA,yCAGF,KAAK,MAAM,WAAW;AAAA;AAAA;AAAA,EAG7D;AAAA,EAEA,yBAAyB;AACvB,UAAM,oBAAoB,QAAQ,KAAK,QAAQ,SAAS,aAAa;AAErE,QAAI,CAAC;AAAmB,aAAO;AAE/B,UAAM,aAAa,KAAK,UAAU;AAElC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,iCAAiC;AAAA,MACjC,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA;AAAA,iBAEjB,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOP,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,WAAW;AAAA;AAAA;AAAA,yCAGF,KAAK,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAS1C,KAAK,UAAU,GAAG;AAAA,sBACjB,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzC;AAAA,EAEA,mBAAmB;AACjB,UAAM,cAAc,QAAQ,KAAK,QAAQ,SAAS,IAAI;AAEtD,QAAI,CAAC;AAAa,aAAO;AAEzB,UAAM,aAAa,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,KAAK;AAElE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA;AAAA,iBAEjB,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI;AAAA,IAC1C,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,IAAI;AAAA;AAAA;AAAA,iCAGH,KAAK,MAAM,IAAI;AAAA;AAAA;AAAA,EAG9C;AAAA,EAEA,4BAA4B;AAG1B,UAAM,gCACJ,KAAK,kBAAkB,uBAAuB;AAEhD,QAAI;AAA+B,aAAO;AAE1C,UAAM,aACJ,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,aAAa,UAAU;AAEnE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,yCAAyC;AAAA,MACzC,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA;AAAA,iBAEjB,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,aAAa,UAAU,EAAE,IAAI;AAAA,IAC5D,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAQK,KAAK,aAAa,mBAAmB;AAAA;AAAA;AAAA;AAAA,aAItC,KAAK,MAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA,EAIzC;AAAA,EAEA,4BAA4B;AAC1B,UAAM,gCACJ,KAAK,kBAAkB,uBAAuB;AAEhD,QAAI;AAA+B,aAAO;AAE1C,UAAM,aACJ,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,aAAa,UAAU;AAEnE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,yCAAyC;AAAA,MACzC,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA;AAAA,iBAEjB,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,aAAa,UAAU,EAAE,IAAI;AAAA,IAC5D,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,mBAAmB;AAAA;AAAA;AAAA;AAAA,aAItC,KAAK,MAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA,EAIzC;AAAA,EAEA,mBAAmB;AACjB,UAAM,cAAc,QAAQ,KAAK,QAAQ,SAAS,IAAI;AAEtD,QAAI,CAAC;AAAa,aAAO;AAEzB,UAAM,aAAa,KAAK,UAAU,QAAQ,CAAC,KAAK,OAAO,IAAI,EAAE,OAAO;AAEpE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI,UAAU;AAAA,MACf,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,6BAA6B;AAAA,IAC/B,CAAC,CAAC;AAAA;AAAA,wBAEc,UAAU;AAAA;AAAA,iBAEjB,CAAC,MAAkB;AAC1B,UAAI,gBAAgB,EAAE,aAAa,GAAG;AACpC;AAAA,MACF;AACA,WAAK,QAAQ,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI;AAAA,IAC1C,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOiB,KAAK,oBAAoB;AAAA;AAAA,cAErC,KAAK,aAAa,IAAI;AAAA;AAAA;AAAA,iCAGH,KAAK,MAAM,IAAI;AAAA;AAAA;AAAA,EAG9C;AAAA,EAEA,qBAAqB;AACnB,WAAO;AAAA,EACT;AAAA,EAEA,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB;AACd,QAAI,KAAK;AAAU,aAAO;AAE1B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAQ4B,KAAK,mBAAmB,CAAC;AAAA;AAAA;AAAA;AAAA,qCAI3B,KAAK,iBAAiB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,uCAKrB,KAAK,mBAAmB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,uCAKzB,KAAK,mBAAmB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,qCAK3B,KAAK,iBAAiB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,wCAKpB,KAAK,oBAAoB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKvB,KAAK,uBAAuB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2CAK7B,KAAK,sBAAsB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMxD,KAAK,uBAAuB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAO9B,KAAK,wBAAwB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAM7B,KAAK,0BAA0B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMhC,KAAK,0BAA0B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOhC,KAAK,uBAAuB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAON,KAAK,iBAAiB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,sCAKvB,KAAK,iBAAiB,CAAC;AAAA;AAAA;AAAA,qCAGxB,KAAK,iBAAiB,CAAC;AAAA;AAAA;AAAA;AAAA,EAI1D;AAAA;AAAA,EA+BA,eAA+B;AAC7B,QAAI,KAAK,UAAU;AACjB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA,gBAIK,CAAC,KAAK,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKtB,sBACN,KAAK,kBAAkB,kBAAkB,EAC3C,EAAE;AAAA,iBACK,sBACL,KAAK,kBAAkB,gCAAgC,EACzD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMA,IAAI,KAAK,YAAY,CAAC;AAAA,mBACf,MAAM;AACb,YAAM,eAAe,KAAK,aAAa;AACvC,UAAI,gBAAgB;AAAM;AAE1B,mBAAa,kBAAkB,EAAE;AACjC,WAAK,kBAAkB;AAAA,IACzB,CAAC;AAAA,kBACO,MAAM;AACZ,YAAM,eAAe,KAAK,aAAa;AAEvC,UAAI,gBAAgB;AAAM;AAE1B,WAAK,kBAAkB;AAAA,IAEzB,CAAC;AAAA,qBACU,CAAC,MAAqB;AAC/B,UAAI,EAAE,KAAK,YAAY,MAAM,SAAS;AACpC,UAAE,eAAe;AACjB,aAAK,QAAQ;AAAA,MACf;AAAA,IACF,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMU,KAAK,OAAO;AAAA;AAAA,cAEnB,KAAK,aAAa,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKzB,MAAM;AACb,WAAK,QACD,MAAM,EACP,MAAM,EACN,gBAAgB,MAAM,EACtB,UAAU,EACV,IAAI;AAAA,IACT,CAAC;AAAA;AAAA,cAEC,KAAK,aAAa,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAK9C;AACF;AAEA,SAAS,gBAAgB,SAAgD;AACvE,MAAI,WAAW;AAAM,WAAO;AAC5B,MAAI,EAAE,kBAAkB;AAAU,WAAO;AAEzC,SACE,QAAQ,aAAa,eAAe,MAAM,UAC1C,QAAQ,aAAa,UAAU;AAEnC;",
  "names": []
}
