{
  "version": 3,
  "sources": ["../../src/exports/extensions/rhino-starter-kit.ts"],
  "sourcesContent": ["import { Extension, Mark, Node } from \"@tiptap/core\";\nimport { Plugin } from \"@tiptap/pm/state\";\n// import {\n//   FirefoxCaretFixPlugin,\n//   FirefoxCaretPluginOptions,\n// } from \"./firefox-caret-plugin\";\nimport {\n  Attachment,\n  AttachmentOptions,\n  PreviewableAttachment,\n} from \"./attachment.js\";\nimport { Image, ImageOptions } from \"./image.js\";\nimport { Gallery, GalleryOptions } from \"./gallery.js\";\nimport { Figcaption, FigcaptionOptions } from \"./figcaption.js\";\n// import { Plugin } from \"@tiptap/pm\";\nimport { CustomStrike } from \"./strike.js\";\nimport Placeholder, { PlaceholderOptions } from \"@tiptap/extension-placeholder\";\nimport Focus, { FocusOptions } from \"@tiptap/extension-focus\";\nimport { StrikeOptions } from \"@tiptap/extension-strike\";\nimport Link, { LinkOptions } from \"@tiptap/extension-link\";\nimport { Paste, PasteOptions } from \"./paste.js\";\n\nexport interface RhinoStarterKitOptions {\n  /** Funky hack extension for contenteditable in firefox. */\n  // firefoxCaretPlugin: Partial<FirefoxCaretPluginOptions> | false;\n\n  /** Enables attachment galleries */\n  rhinoGallery: Partial<GalleryOptions> | false;\n\n  /** Enables attachments */\n  rhinoAttachment: Partial<AttachmentOptions> | false;\n\n  /** Enables captions in attachments */\n  rhinoFigcaption: Partial<FigcaptionOptions> | false;\n\n  /** Enables images in attachments */\n  rhinoImage: Partial<ImageOptions> | false;\n\n  /**\n   * Replaces the default strike from TipTap's StarterKit and replaces it with `<del>` instead of `<s>`\n   */\n  rhinoStrike: Partial<StrikeOptions> | false;\n\n  /**\n   * A plugin for finding the currently focused element. Used by various CSS styles in the editor.\n   */\n  rhinoFocus: Partial<FocusOptions> | false;\n\n  /**\n   * Enables the link dialog\n   */\n  rhinoLink: Partial<LinkOptions> | false;\n\n  /**\n   * Enables & configures the placeholder you see for captions and for empty documents\n   */\n  rhinoPlaceholder: Partial<PlaceholderOptions> | false;\n\n  /**\n   * Sends a browser event called `rhino-paste-event` everytime a user pastes something into the document.\n   */\n  rhinoPasteEvent: Partial<PasteOptions> | false;\n}\n\nexport type TipTapPlugin = Node | Extension | Mark;\n\nexport const RhinoStarterKit = Extension.create<RhinoStarterKitOptions>({\n  name: \"rhino-starter-kit\",\n  addProseMirrorPlugins() {\n    const loadedExtensions: Plugin[] = [];\n\n    const extensions: [\n      keyof RhinoStarterKitOptions,\n      (options: Record<string, unknown>) => Plugin,\n    ][] = [\n      // [\"firefoxCaretPlugin\", FirefoxCaretFixPlugin]\n      [\"rhinoPasteEvent\", Paste],\n    ];\n\n    extensions.forEach(([string, extension]) => {\n      const options = this.options[string];\n      if (options !== false) {\n        loadedExtensions.push(extension(options));\n      }\n    });\n\n    return loadedExtensions;\n  },\n\n  addExtensions() {\n    const loadedExtensions: TipTapPlugin[] = [];\n\n    const extensions: [keyof RhinoStarterKitOptions, TipTapPlugin][] = [\n      [\"rhinoGallery\", Gallery],\n      [\"rhinoAttachment\", Attachment],\n      [\"rhinoImage\", Image],\n      [\"rhinoFigcaption\", Figcaption],\n      [\"rhinoStrike\", CustomStrike],\n      [\"rhinoLink\", Link],\n      [\"rhinoFocus\", Focus],\n      [\"rhinoPlaceholder\", Placeholder],\n    ];\n\n    extensions.forEach(([string, extension]) => {\n      const options = this.options[string];\n      if (options !== false) {\n        loadedExtensions.push(extension.configure(options));\n\n        // This is a special case. Because non-previewable attachments don't belong in galleries\n        // To reduce the logic we have to write, previewable attachments are a slightly modified version of non-previewable attachments with a different \"group\" so they can belong to a gallery.\n        if (string === \"rhinoAttachment\") {\n          loadedExtensions.push(\n            PreviewableAttachment.configure(options as AttachmentOptions),\n          );\n        }\n      }\n    });\n\n    return loadedExtensions;\n  },\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,iBAA6B;AAgBtC,OAAO,iBAAyC;AAChD,OAAO,WAA6B;AAEpC,OAAO,UAA2B;AA+C3B,IAAM,kBAAkB,UAAU,OAA+B;AAAA,EACtE,MAAM;AAAA,EACN,wBAAwB;AACtB,UAAM,mBAA6B,CAAC;AAEpC,UAAM,aAGA;AAAA;AAAA,MAEJ,CAAC,mBAAmB,KAAK;AAAA,IAC3B;AAEA,eAAW,QAAQ,CAAC,CAAC,QAAQ,SAAS,MAAM;AAC1C,YAAM,UAAU,KAAK,QAAQ,MAAM;AACnC,UAAI,YAAY,OAAO;AACrB,yBAAiB,KAAK,UAAU,OAAO,CAAC;AAAA,MAC1C;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB;AACd,UAAM,mBAAmC,CAAC;AAE1C,UAAM,aAA6D;AAAA,MACjE,CAAC,gBAAgB,OAAO;AAAA,MACxB,CAAC,mBAAmB,UAAU;AAAA,MAC9B,CAAC,cAAc,KAAK;AAAA,MACpB,CAAC,mBAAmB,UAAU;AAAA,MAC9B,CAAC,eAAe,YAAY;AAAA,MAC5B,CAAC,aAAa,IAAI;AAAA,MAClB,CAAC,cAAc,KAAK;AAAA,MACpB,CAAC,oBAAoB,WAAW;AAAA,IAClC;AAEA,eAAW,QAAQ,CAAC,CAAC,QAAQ,SAAS,MAAM;AAC1C,YAAM,UAAU,KAAK,QAAQ,MAAM;AACnC,UAAI,YAAY,OAAO;AACrB,yBAAiB,KAAK,UAAU,UAAU,OAAO,CAAC;AAIlD,YAAI,WAAW,mBAAmB;AAChC,2BAAiB;AAAA,YACf,sBAAsB,UAAU,OAA4B;AAAA,UAC9D;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AACF,CAAC;",
  "names": []
}
