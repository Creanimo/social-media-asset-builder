import {
  LOADING_STATES
} from "./chunk-K62DARNL.js";

// src/exports/attachment-upload.ts
import { DirectUpload } from "@rails/activestorage";
var AttachmentUpload = class {
  constructor(attachment, element) {
    this.currentProgress = 0;
    this.attachment = attachment;
    this.element = element;
    if (this.attachment.file == null)
      throw "No file found for direct upload";
    this.directUpload = new DirectUpload(
      this.attachment.file,
      this.directUploadUrl,
      this
    );
  }
  start() {
    this.directUpload.create(this.directUploadDidComplete.bind(this));
  }
  directUploadWillStoreFileWithXHR(xhr) {
    xhr.upload.addEventListener("progress", (event) => {
      const progress = event.loaded / event.total * 100;
      this.currentProgress = progress;
      this.setUploadProgress();
    });
  }
  directUploadDidComplete(error, blob) {
    if (error) {
      this.currentProgress = 0;
      if (this.attachment.content == null) {
        this.attachment.setNodeMarkup({
          progress: 0,
          loadingState: LOADING_STATES.error
        });
      }
      throw Error(`Direct upload failed: ${error}`);
    }
    this.attachment.setAttributes({
      sgid: blob.attachable_sgid ?? "",
      url: this.createBlobUrl(blob.signed_id, blob.filename)
    });
    this.currentProgress = 100;
    this.setUploadProgress();
  }
  setUploadProgress() {
    if (this.currentProgress >= 100) {
      this.currentProgress = 100;
      this.attachment.setUploadProgress(100);
      return;
    }
    this.attachment.setUploadProgress(this.currentProgress);
  }
  createBlobUrl(signedId, filename) {
    if (this.blobUrlTemplate == null)
      return "";
    return this.blobUrlTemplate.replace(":signed_id", signedId).replace(":filename", encodeURIComponent(filename));
  }
  get directUploadUrl() {
    if (this.element.dataset.directUploadUrl == null) {
      throw Error(
        `No "data-direct-upload-url" attribute is set on ${this.element}`
      );
    }
    return this.element.dataset.directUploadUrl;
  }
  get blobUrlTemplate() {
    return this.element.dataset.blobUrlTemplate;
  }
};

export {
  AttachmentUpload
};
//# sourceMappingURL=chunk-R443YRCN.js.map
